{
	"id": "9f22898db6234d44777b543d11d39aa3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"MintNagaKids.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract MintNagaKids is AccessControl, ReentrancyGuard {\r\n    IERC721Enumerable public nagaKidsContract;\r\n    bool public isFreeMintOpen;\r\n    bool public isWhitelistOpen;\r\n\r\n    constructor(IERC721Enumerable _nagaKids) {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        changeNagaKidsContract(_nagaKids);\r\n    }\r\n\r\n    function changeNagaKidsContract(IERC721Enumerable _nagaKids)\r\n        public\r\n        onlyRole(DEFAULT_ADMIN_ROLE)\r\n    {\r\n        nagaKidsContract = _nagaKids;\r\n    }\r\n\r\n    function changeWhitelistMintOpen(bool _isOpen)\r\n        public\r\n        onlyRole(DEFAULT_ADMIN_ROLE)\r\n    {\r\n        isWhitelistOpen = _isOpen;\r\n    }\r\n\r\n    function changeFreeMintOpen(bool _isOpen)\r\n        public\r\n        onlyRole(DEFAULT_ADMIN_ROLE)\r\n    {\r\n        isFreeMintOpen = _isOpen;\r\n    }\r\n\r\n    function whitelistMint() public payable nonReentrant {\r\n        require(isWhitelistOpen == true, \"Whitelist not open to mint.\");\r\n        require(getTotalSupply() < 1111, \"Over supply\");\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return nagaKidsContract.totalSupply();\r\n    }\r\n\r\n    // function getMaxSupply() public view returns (uint256) {\r\n    //     return nagaKidsContract.maxSupply();\r\n    // }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SDIV LOG4 0xD7 0xDE SELFBALANCE NUMBER SAR DUP14 CREATE PUSH3 0x8F6915 0x1F SGT SWAP9 PUSH14 0xBB81712B4B5E4D1927BA3448FB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SDIV LOG4 0xD7 0xDE SELFBALANCE NUMBER SAR DUP14 CREATE PUSH3 0x8F6915 0x1F SGT SWAP9 PUSH14 0xBB81712B4B5E4D1927BA3448FB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a305a4d7de47431d8df0628f69151f13986d0bb81712b4b5e4d1927ba3448fb264736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MintNagaKids.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MintNagaKids.sol": {
				"MintNagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "_nagaKids",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "changeFreeMintOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "_nagaKids",
									"type": "address"
								}
							],
							"name": "changeNagaKidsContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "changeWhitelistMintOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFreeMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isWhitelistOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nagaKidsContract",
							"outputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whitelistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MintNagaKids.sol\":268:1528  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"MintNagaKids.sol\":448:594  constructor(IERC721Enumerable _nagaKids) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MintNagaKids.sol\":500:542  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"MintNagaKids.sol\":511:529  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"MintNagaKids.sol\":531:541  msg.sender */\n  caller\n    /* \"MintNagaKids.sol\":500:510  _grantRole */\n  shl(0x20, tag_9)\n    /* \"MintNagaKids.sol\":500:542  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"MintNagaKids.sol\":553:586  changeNagaKidsContract(_nagaKids) */\n  tag_10\n    /* \"MintNagaKids.sol\":576:585  _nagaKids */\n  dup2\n    /* \"MintNagaKids.sol\":553:575  changeNagaKidsContract */\n  shl(0x20, tag_11)\n    /* \"MintNagaKids.sol\":553:586  changeNagaKidsContract(_nagaKids) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"MintNagaKids.sol\":448:594  constructor(IERC721Enumerable _nagaKids) {... */\n  pop\n    /* \"MintNagaKids.sol\":268:1528  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7371  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7372:7376  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7385  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7386:7393  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7457  _msgSender */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7438:7445  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7432:7436  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MintNagaKids.sol\":602:769  function changeNagaKidsContract(IERC721Enumerable _nagaKids)... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"MintNagaKids.sol\":697:715  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"MintNagaKids.sol\":752:761  _nagaKids */\n  dup2\n    /* \"MintNagaKids.sol\":733:749  nagaKidsContract */\n  0x02\n  0x00\n    /* \"MintNagaKids.sol\":733:761  nagaKidsContract = _nagaKids */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MintNagaKids.sol\":602:769  function changeNagaKidsContract(IERC721Enumerable _nagaKids)... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  tag_32\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n  0x14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n  or(tag_0_90, shl(0x20, tag_33))\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  tag_34\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4121:4134  uint256(role) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n  or(tag_0_90, shl(0x20, tag_33))\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n  add(0x20, mload(0x40))\n  tag_35\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n  0xffffffffffffffff\n  dup2\n  gt\n  iszero\n  tag_44\n  jumpi\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\ntag_44:\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_47\n  jumpi\n  dup2\n  0x20\n  add\n  0x01\n  dup3\n  mul\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  dup1\n  dup3\n  add\n  swap2\n  pop\n  pop\n  swap1\n  pop\ntag_47:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n  0x3000000000000000000000000000000000000000000000000000000000000000\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_48\n  jumpi\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\ntag_48:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n  0x7800000000000000000000000000000000000000000000000000000000000000\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_51\n  jumpi\n  tag_52\n  tag_50\n  jump\t// in\ntag_52:\ntag_51:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_56\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_57\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_57:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  iszero\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1878  _HEX_SYMBOLS */\n  0x3031323334353637383961626364656600000000000000000000000000000000\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n  0x0f\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n  dup7\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n  and\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n  0x10\n  dup2\n  lt\n  tag_58\n  jumpi\n  tag_59\n  tag_50\n  jump\t// in\ntag_59:\ntag_58:\n  byte\n  0xf8\n  shl\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_60\n  jumpi\n  tag_61\n  tag_50\n  jump\t// in\ntag_61:\ntag_60:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n  swap1\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n  0x04\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n  dup6\n  swap1\n  shr\n  swap5\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n  dup1\n  tag_62\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  jump(tag_53)\ntag_54:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1953:1954  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1949  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_64\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_65\n  swap1\n  tag_66\n  jump\t// in\ntag_65:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_64:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":2001:2022  return string(buffer) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_68:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_70:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_71:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_96\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_70\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:689   */\ntag_72:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:683   */\n  tag_98\n    /* \"#utility.yul\":677:682   */\n  dup3\n    /* \"#utility.yul\":659:683   */\n  tag_71\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":648:683   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:689   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":695:867   */\ntag_73:\n    /* \"#utility.yul\":793:842   */\n  tag_100\n    /* \"#utility.yul\":836:841   */\n  dup2\n    /* \"#utility.yul\":793:842   */\n  tag_72\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":786:791   */\n  dup2\n    /* \"#utility.yul\":783:843   */\n  eq\n    /* \"#utility.yul\":773:861   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":854:855   */\n  dup1\n    /* \"#utility.yul\":847:859   */\n  revert\n    /* \"#utility.yul\":773:861   */\ntag_101:\n    /* \"#utility.yul\":695:867   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":873:1066   */\ntag_74:\n    /* \"#utility.yul\":955:960   */\n  0x00\n    /* \"#utility.yul\":986:992   */\n  dup2\n    /* \"#utility.yul\":980:993   */\n  mload\n    /* \"#utility.yul\":971:993   */\n  swap1\n  pop\n    /* \"#utility.yul\":1002:1060   */\n  tag_103\n    /* \"#utility.yul\":1054:1059   */\n  dup2\n    /* \"#utility.yul\":1002:1060   */\n  tag_73\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":873:1066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1072:1473   */\ntag_3:\n    /* \"#utility.yul\":1167:1173   */\n  0x00\n    /* \"#utility.yul\":1216:1218   */\n  0x20\n    /* \"#utility.yul\":1204:1213   */\n  dup3\n    /* \"#utility.yul\":1195:1202   */\n  dup5\n    /* \"#utility.yul\":1191:1214   */\n  sub\n    /* \"#utility.yul\":1187:1219   */\n  slt\n    /* \"#utility.yul\":1184:1303   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1222:1301   */\n  tag_106\n  tag_68\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1184:1303   */\ntag_105:\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1367:1456   */\n  tag_107\n    /* \"#utility.yul\":1448:1455   */\n  dup5\n    /* \"#utility.yul\":1439:1445   */\n  dup3\n    /* \"#utility.yul\":1428:1437   */\n  dup6\n    /* \"#utility.yul\":1424:1446   */\n  add\n    /* \"#utility.yul\":1367:1456   */\n  tag_74\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1357:1456   */\n  swap2\n  pop\n    /* \"#utility.yul\":1313:1466   */\n  pop\n    /* \"#utility.yul\":1072:1473   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1479:1627   */\ntag_75:\n    /* \"#utility.yul\":1581:1592   */\n  0x00\n    /* \"#utility.yul\":1618:1621   */\n  dup2\n    /* \"#utility.yul\":1603:1621   */\n  swap1\n  pop\n    /* \"#utility.yul\":1479:1627   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1633:1806   */\ntag_76:\n    /* \"#utility.yul\":1773:1798   */\n  0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n    /* \"#utility.yul\":1769:1770   */\n  0x00\n    /* \"#utility.yul\":1761:1767   */\n  dup3\n    /* \"#utility.yul\":1757:1771   */\n  add\n    /* \"#utility.yul\":1750:1799   */\n  mstore\n    /* \"#utility.yul\":1633:1806   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1812:2214   */\ntag_77:\n    /* \"#utility.yul\":1972:1975   */\n  0x00\n    /* \"#utility.yul\":1993:2078   */\n  tag_111\n    /* \"#utility.yul\":2075:2077   */\n  0x17\n    /* \"#utility.yul\":2070:2073   */\n  dup4\n    /* \"#utility.yul\":1993:2078   */\n  tag_75\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1986:2078   */\n  swap2\n  pop\n    /* \"#utility.yul\":2087:2180   */\n  tag_112\n    /* \"#utility.yul\":2176:2179   */\n  dup3\n    /* \"#utility.yul\":2087:2180   */\n  tag_76\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2205:2207   */\n  0x17\n    /* \"#utility.yul\":2200:2203   */\n  dup3\n    /* \"#utility.yul\":2196:2208   */\n  add\n    /* \"#utility.yul\":2189:2208   */\n  swap1\n  pop\n    /* \"#utility.yul\":1812:2214   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2220:2319   */\ntag_78:\n    /* \"#utility.yul\":2272:2278   */\n  0x00\n    /* \"#utility.yul\":2306:2311   */\n  dup2\n    /* \"#utility.yul\":2300:2312   */\n  mload\n    /* \"#utility.yul\":2290:2312   */\n  swap1\n  pop\n    /* \"#utility.yul\":2220:2319   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2325:2632   */\ntag_79:\n    /* \"#utility.yul\":2393:2394   */\n  0x00\n    /* \"#utility.yul\":2403:2516   */\ntag_115:\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2414:2415   */\n  dup2\n    /* \"#utility.yul\":2411:2424   */\n  lt\n    /* \"#utility.yul\":2403:2516   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":2502:2503   */\n  dup1\n    /* \"#utility.yul\":2497:2500   */\n  dup3\n    /* \"#utility.yul\":2493:2504   */\n  add\n    /* \"#utility.yul\":2487:2505   */\n  mload\n    /* \"#utility.yul\":2483:2484   */\n  dup2\n    /* \"#utility.yul\":2478:2481   */\n  dup5\n    /* \"#utility.yul\":2474:2485   */\n  add\n    /* \"#utility.yul\":2467:2506   */\n  mstore\n    /* \"#utility.yul\":2439:2441   */\n  0x20\n    /* \"#utility.yul\":2436:2437   */\n  dup2\n    /* \"#utility.yul\":2432:2442   */\n  add\n    /* \"#utility.yul\":2427:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2403:2516   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":2534:2540   */\n  dup4\n    /* \"#utility.yul\":2531:2532   */\n  dup2\n    /* \"#utility.yul\":2528:2541   */\n  gt\n    /* \"#utility.yul\":2525:2626   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2614:2615   */\n  0x00\n    /* \"#utility.yul\":2605:2611   */\n  dup5\n    /* \"#utility.yul\":2600:2603   */\n  dup5\n    /* \"#utility.yul\":2596:2612   */\n  add\n    /* \"#utility.yul\":2589:2616   */\n  mstore\n    /* \"#utility.yul\":2525:2626   */\ntag_118:\n    /* \"#utility.yul\":2374:2632   */\n  pop\n    /* \"#utility.yul\":2325:2632   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2638:3015   */\ntag_80:\n    /* \"#utility.yul\":2744:2747   */\n  0x00\n    /* \"#utility.yul\":2772:2811   */\n  tag_120\n    /* \"#utility.yul\":2805:2810   */\n  dup3\n    /* \"#utility.yul\":2772:2811   */\n  tag_78\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2827:2916   */\n  tag_121\n    /* \"#utility.yul\":2909:2915   */\n  dup2\n    /* \"#utility.yul\":2904:2907   */\n  dup6\n    /* \"#utility.yul\":2827:2916   */\n  tag_75\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2820:2916   */\n  swap4\n  pop\n    /* \"#utility.yul\":2925:2977   */\n  tag_122\n    /* \"#utility.yul\":2970:2976   */\n  dup2\n    /* \"#utility.yul\":2965:2968   */\n  dup6\n    /* \"#utility.yul\":2958:2962   */\n  0x20\n    /* \"#utility.yul\":2951:2956   */\n  dup7\n    /* \"#utility.yul\":2947:2963   */\n  add\n    /* \"#utility.yul\":2925:2977   */\n  tag_79\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3002:3008   */\n  dup1\n    /* \"#utility.yul\":2997:3000   */\n  dup5\n    /* \"#utility.yul\":2993:3009   */\n  add\n    /* \"#utility.yul\":2986:3009   */\n  swap2\n  pop\n    /* \"#utility.yul\":2748:3015   */\n  pop\n    /* \"#utility.yul\":2638:3015   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3021:3188   */\ntag_81:\n    /* \"#utility.yul\":3161:3180   */\n  0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n    /* \"#utility.yul\":3157:3158   */\n  0x00\n    /* \"#utility.yul\":3149:3155   */\n  dup3\n    /* \"#utility.yul\":3145:3159   */\n  add\n    /* \"#utility.yul\":3138:3181   */\n  mstore\n    /* \"#utility.yul\":3021:3188   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3194:3596   */\ntag_82:\n    /* \"#utility.yul\":3354:3357   */\n  0x00\n    /* \"#utility.yul\":3375:3460   */\n  tag_125\n    /* \"#utility.yul\":3457:3459   */\n  0x11\n    /* \"#utility.yul\":3452:3455   */\n  dup4\n    /* \"#utility.yul\":3375:3460   */\n  tag_75\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3368:3460   */\n  swap2\n  pop\n    /* \"#utility.yul\":3469:3562   */\n  tag_126\n    /* \"#utility.yul\":3558:3561   */\n  dup3\n    /* \"#utility.yul\":3469:3562   */\n  tag_81\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3587:3589   */\n  0x11\n    /* \"#utility.yul\":3582:3585   */\n  dup3\n    /* \"#utility.yul\":3578:3590   */\n  add\n    /* \"#utility.yul\":3571:3590   */\n  swap1\n  pop\n    /* \"#utility.yul\":3194:3596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3602:4569   */\ntag_36:\n    /* \"#utility.yul\":3984:3987   */\n  0x00\n    /* \"#utility.yul\":4006:4154   */\n  tag_128\n    /* \"#utility.yul\":4150:4153   */\n  dup3\n    /* \"#utility.yul\":4006:4154   */\n  tag_77\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3999:4154   */\n  swap2\n  pop\n    /* \"#utility.yul\":4171:4266   */\n  tag_129\n    /* \"#utility.yul\":4262:4265   */\n  dup3\n    /* \"#utility.yul\":4253:4259   */\n  dup6\n    /* \"#utility.yul\":4171:4266   */\n  tag_80\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4164:4266   */\n  swap2\n  pop\n    /* \"#utility.yul\":4283:4431   */\n  tag_130\n    /* \"#utility.yul\":4427:4430   */\n  dup3\n    /* \"#utility.yul\":4283:4431   */\n  tag_82\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4276:4431   */\n  swap2\n  pop\n    /* \"#utility.yul\":4448:4543   */\n  tag_131\n    /* \"#utility.yul\":4539:4542   */\n  dup3\n    /* \"#utility.yul\":4530:4536   */\n  dup5\n    /* \"#utility.yul\":4448:4543   */\n  tag_80\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4441:4543   */\n  swap2\n  pop\n    /* \"#utility.yul\":4560:4563   */\n  dup2\n    /* \"#utility.yul\":4553:4563   */\n  swap1\n  pop\n    /* \"#utility.yul\":3602:4569   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4575:4744   */\ntag_83:\n    /* \"#utility.yul\":4659:4670   */\n  0x00\n    /* \"#utility.yul\":4693:4699   */\n  dup3\n    /* \"#utility.yul\":4688:4691   */\n  dup3\n    /* \"#utility.yul\":4681:4700   */\n  mstore\n    /* \"#utility.yul\":4733:4737   */\n  0x20\n    /* \"#utility.yul\":4728:4731   */\n  dup3\n    /* \"#utility.yul\":4724:4738   */\n  add\n    /* \"#utility.yul\":4709:4738   */\n  swap1\n  pop\n    /* \"#utility.yul\":4575:4744   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4750:4852   */\ntag_84:\n    /* \"#utility.yul\":4791:4797   */\n  0x00\n    /* \"#utility.yul\":4842:4844   */\n  0x1f\n    /* \"#utility.yul\":4838:4845   */\n  not\n    /* \"#utility.yul\":4833:4835   */\n  0x1f\n    /* \"#utility.yul\":4826:4831   */\n  dup4\n    /* \"#utility.yul\":4822:4836   */\n  add\n    /* \"#utility.yul\":4818:4846   */\n  and\n    /* \"#utility.yul\":4808:4846   */\n  swap1\n  pop\n    /* \"#utility.yul\":4750:4852   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4858:5222   */\ntag_85:\n    /* \"#utility.yul\":4946:4949   */\n  0x00\n    /* \"#utility.yul\":4974:5013   */\n  tag_135\n    /* \"#utility.yul\":5007:5012   */\n  dup3\n    /* \"#utility.yul\":4974:5013   */\n  tag_78\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5029:5100   */\n  tag_136\n    /* \"#utility.yul\":5093:5099   */\n  dup2\n    /* \"#utility.yul\":5088:5091   */\n  dup6\n    /* \"#utility.yul\":5029:5100   */\n  tag_83\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5022:5100   */\n  swap4\n  pop\n    /* \"#utility.yul\":5109:5161   */\n  tag_137\n    /* \"#utility.yul\":5154:5160   */\n  dup2\n    /* \"#utility.yul\":5149:5152   */\n  dup6\n    /* \"#utility.yul\":5142:5146   */\n  0x20\n    /* \"#utility.yul\":5135:5140   */\n  dup7\n    /* \"#utility.yul\":5131:5147   */\n  add\n    /* \"#utility.yul\":5109:5161   */\n  tag_79\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5186:5215   */\n  tag_138\n    /* \"#utility.yul\":5208:5214   */\n  dup2\n    /* \"#utility.yul\":5186:5215   */\n  tag_84\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5181:5184   */\n  dup5\n    /* \"#utility.yul\":5177:5216   */\n  add\n    /* \"#utility.yul\":5170:5216   */\n  swap2\n  pop\n    /* \"#utility.yul\":4950:5222   */\n  pop\n    /* \"#utility.yul\":4858:5222   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5228:5541   */\ntag_38:\n    /* \"#utility.yul\":5341:5345   */\n  0x00\n    /* \"#utility.yul\":5379:5381   */\n  0x20\n    /* \"#utility.yul\":5368:5377   */\n  dup3\n    /* \"#utility.yul\":5364:5382   */\n  add\n    /* \"#utility.yul\":5356:5382   */\n  swap1\n  pop\n    /* \"#utility.yul\":5428:5437   */\n  dup2\n    /* \"#utility.yul\":5422:5426   */\n  dup2\n    /* \"#utility.yul\":5418:5438   */\n  sub\n    /* \"#utility.yul\":5414:5415   */\n  0x00\n    /* \"#utility.yul\":5403:5412   */\n  dup4\n    /* \"#utility.yul\":5399:5416   */\n  add\n    /* \"#utility.yul\":5392:5439   */\n  mstore\n    /* \"#utility.yul\":5456:5534   */\n  tag_140\n    /* \"#utility.yul\":5529:5533   */\n  dup2\n    /* \"#utility.yul\":5520:5526   */\n  dup5\n    /* \"#utility.yul\":5456:5534   */\n  tag_85\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5448:5534   */\n  swap1\n  pop\n    /* \"#utility.yul\":5228:5541   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5547:5624   */\ntag_86:\n    /* \"#utility.yul\":5584:5591   */\n  0x00\n    /* \"#utility.yul\":5613:5618   */\n  dup2\n    /* \"#utility.yul\":5602:5618   */\n  swap1\n  pop\n    /* \"#utility.yul\":5547:5624   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5630:5810   */\ntag_87:\n    /* \"#utility.yul\":5678:5755   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5675:5676   */\n  0x00\n    /* \"#utility.yul\":5668:5756   */\n  mstore\n    /* \"#utility.yul\":5775:5779   */\n  0x11\n    /* \"#utility.yul\":5772:5773   */\n  0x04\n    /* \"#utility.yul\":5765:5780   */\n  mstore\n    /* \"#utility.yul\":5799:5803   */\n  0x24\n    /* \"#utility.yul\":5796:5797   */\n  0x00\n    /* \"#utility.yul\":5789:5804   */\n  revert\n    /* \"#utility.yul\":5816:6164   */\ntag_41:\n    /* \"#utility.yul\":5856:5863   */\n  0x00\n    /* \"#utility.yul\":5879:5899   */\n  tag_144\n    /* \"#utility.yul\":5897:5898   */\n  dup3\n    /* \"#utility.yul\":5879:5899   */\n  tag_86\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5874:5899   */\n  swap2\n  pop\n    /* \"#utility.yul\":5913:5933   */\n  tag_145\n    /* \"#utility.yul\":5931:5932   */\n  dup4\n    /* \"#utility.yul\":5913:5933   */\n  tag_86\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5908:5933   */\n  swap3\n  pop\n    /* \"#utility.yul\":6101:6102   */\n  dup2\n    /* \"#utility.yul\":6033:6099   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6029:6103   */\n  div\n    /* \"#utility.yul\":6026:6027   */\n  dup4\n    /* \"#utility.yul\":6023:6104   */\n  gt\n    /* \"#utility.yul\":6018:6019   */\n  dup3\n    /* \"#utility.yul\":6011:6020   */\n  iszero\n    /* \"#utility.yul\":6004:6021   */\n  iszero\n    /* \"#utility.yul\":6000:6105   */\n  and\n    /* \"#utility.yul\":5997:6128   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6108:6126   */\n  tag_147\n  tag_87\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5997:6128   */\ntag_146:\n    /* \"#utility.yul\":6156:6157   */\n  dup3\n    /* \"#utility.yul\":6153:6154   */\n  dup3\n    /* \"#utility.yul\":6149:6158   */\n  mul\n    /* \"#utility.yul\":6138:6158   */\n  swap1\n  pop\n    /* \"#utility.yul\":5816:6164   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6170:6475   */\ntag_43:\n    /* \"#utility.yul\":6210:6213   */\n  0x00\n    /* \"#utility.yul\":6229:6249   */\n  tag_149\n    /* \"#utility.yul\":6247:6248   */\n  dup3\n    /* \"#utility.yul\":6229:6249   */\n  tag_86\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6224:6249   */\n  swap2\n  pop\n    /* \"#utility.yul\":6263:6283   */\n  tag_150\n    /* \"#utility.yul\":6281:6282   */\n  dup4\n    /* \"#utility.yul\":6263:6283   */\n  tag_86\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6258:6283   */\n  swap3\n  pop\n    /* \"#utility.yul\":6417:6418   */\n  dup3\n    /* \"#utility.yul\":6349:6415   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6345:6419   */\n  sub\n    /* \"#utility.yul\":6342:6343   */\n  dup3\n    /* \"#utility.yul\":6339:6420   */\n  gt\n    /* \"#utility.yul\":6336:6443   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6423:6441   */\n  tag_152\n  tag_87\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6336:6443   */\ntag_151:\n    /* \"#utility.yul\":6467:6468   */\n  dup3\n    /* \"#utility.yul\":6464:6465   */\n  dup3\n    /* \"#utility.yul\":6460:6469   */\n  add\n    /* \"#utility.yul\":6453:6469   */\n  swap1\n  pop\n    /* \"#utility.yul\":6170:6475   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6481:6661   */\ntag_46:\n    /* \"#utility.yul\":6529:6606   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6526:6527   */\n  0x00\n    /* \"#utility.yul\":6519:6607   */\n  mstore\n    /* \"#utility.yul\":6626:6630   */\n  0x41\n    /* \"#utility.yul\":6623:6624   */\n  0x04\n    /* \"#utility.yul\":6616:6631   */\n  mstore\n    /* \"#utility.yul\":6650:6654   */\n  0x24\n    /* \"#utility.yul\":6647:6648   */\n  0x00\n    /* \"#utility.yul\":6640:6655   */\n  revert\n    /* \"#utility.yul\":6667:6847   */\ntag_50:\n    /* \"#utility.yul\":6715:6792   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6712:6713   */\n  0x00\n    /* \"#utility.yul\":6705:6793   */\n  mstore\n    /* \"#utility.yul\":6812:6816   */\n  0x32\n    /* \"#utility.yul\":6809:6810   */\n  0x04\n    /* \"#utility.yul\":6802:6817   */\n  mstore\n    /* \"#utility.yul\":6836:6840   */\n  0x24\n    /* \"#utility.yul\":6833:6834   */\n  0x00\n    /* \"#utility.yul\":6826:6841   */\n  revert\n    /* \"#utility.yul\":6853:7024   */\ntag_63:\n    /* \"#utility.yul\":6892:6895   */\n  0x00\n    /* \"#utility.yul\":6915:6939   */\n  tag_156\n    /* \"#utility.yul\":6933:6938   */\n  dup3\n    /* \"#utility.yul\":6915:6939   */\n  tag_86\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6906:6939   */\n  swap2\n  pop\n    /* \"#utility.yul\":6961:6965   */\n  0x00\n    /* \"#utility.yul\":6954:6959   */\n  dup3\n    /* \"#utility.yul\":6951:6966   */\n  sub\n    /* \"#utility.yul\":6948:6989   */\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6969:6987   */\n  tag_158\n  tag_87\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6948:6989   */\ntag_157:\n    /* \"#utility.yul\":7016:7017   */\n  0x01\n    /* \"#utility.yul\":7009:7014   */\n  dup3\n    /* \"#utility.yul\":7005:7018   */\n  sub\n    /* \"#utility.yul\":6998:7018   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:7024   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7030:7212   */\ntag_88:\n    /* \"#utility.yul\":7170:7204   */\n  0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n    /* \"#utility.yul\":7166:7167   */\n  0x00\n    /* \"#utility.yul\":7158:7164   */\n  dup3\n    /* \"#utility.yul\":7154:7168   */\n  add\n    /* \"#utility.yul\":7147:7205   */\n  mstore\n    /* \"#utility.yul\":7030:7212   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7218:7584   */\ntag_89:\n    /* \"#utility.yul\":7360:7363   */\n  0x00\n    /* \"#utility.yul\":7381:7448   */\n  tag_161\n    /* \"#utility.yul\":7445:7447   */\n  0x20\n    /* \"#utility.yul\":7440:7443   */\n  dup4\n    /* \"#utility.yul\":7381:7448   */\n  tag_83\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7374:7448   */\n  swap2\n  pop\n    /* \"#utility.yul\":7457:7550   */\n  tag_162\n    /* \"#utility.yul\":7546:7549   */\n  dup3\n    /* \"#utility.yul\":7457:7550   */\n  tag_88\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7575:7577   */\n  0x20\n    /* \"#utility.yul\":7570:7573   */\n  dup3\n    /* \"#utility.yul\":7566:7578   */\n  add\n    /* \"#utility.yul\":7559:7578   */\n  swap1\n  pop\n    /* \"#utility.yul\":7218:7584   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7590:8009   */\ntag_66:\n    /* \"#utility.yul\":7756:7760   */\n  0x00\n    /* \"#utility.yul\":7794:7796   */\n  0x20\n    /* \"#utility.yul\":7783:7792   */\n  dup3\n    /* \"#utility.yul\":7779:7797   */\n  add\n    /* \"#utility.yul\":7771:7797   */\n  swap1\n  pop\n    /* \"#utility.yul\":7843:7852   */\n  dup2\n    /* \"#utility.yul\":7837:7841   */\n  dup2\n    /* \"#utility.yul\":7833:7853   */\n  sub\n    /* \"#utility.yul\":7829:7830   */\n  0x00\n    /* \"#utility.yul\":7818:7827   */\n  dup4\n    /* \"#utility.yul\":7814:7831   */\n  add\n    /* \"#utility.yul\":7807:7854   */\n  mstore\n    /* \"#utility.yul\":7871:8002   */\n  tag_164\n    /* \"#utility.yul\":7997:8001   */\n  dup2\n    /* \"#utility.yul\":7871:8002   */\n  tag_89\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7863:8002   */\n  swap1\n  pop\n    /* \"#utility.yul\":7590:8009   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"MintNagaKids.sol\":268:1528  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MintNagaKids.sol\":268:1528  contract MintNagaKids is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x804f43cd\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa6f5f014\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa6f5f014\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd31a7ba\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x804f43cd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x94f4504d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x28438f68\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x28438f68\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x61aec205\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27c25c20\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":331:372  IERC721Enumerable public nagaKidsContract */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":935:1079  function changeFreeMintOpen(bool _isOpen)... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"MintNagaKids.sol\":602:769  function changeNagaKidsContract(IERC721Enumerable _nagaKids)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"MintNagaKids.sol\":1087:1280  function whitelistMint() public payable nonReentrant {... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":412:439  bool public isWhitelistOpen */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":379:405  bool public isFreeMintOpen */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":1288:1400  function getTotalSupply() public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"MintNagaKids.sol\":777:927  function changeWhitelistMintOpen(bool _isOpen)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_92\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4498:4502  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4484:4513  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":331:372  IERC721Enumerable public nagaKidsContract */\n    tag_36:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"MintNagaKids.sol\":935:1079  function changeFreeMintOpen(bool _isOpen)... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"MintNagaKids.sol\":1011:1029  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_97:\n        /* \"MintNagaKids.sol\":1064:1071  _isOpen */\n      dup2\n        /* \"MintNagaKids.sol\":1047:1061  isFreeMintOpen */\n      0x02\n      0x14\n        /* \"MintNagaKids.sol\":1047:1071  isFreeMintOpen = _isOpen */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":935:1079  function changeFreeMintOpen(bool _isOpen)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4853:4871  getRoleAdmin(role) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4866:4870  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4853:4865  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4853:4871  getRoleAdmin(role) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5893:5905  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5893:5903  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5893:5905  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5889  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":602:769  function changeNagaKidsContract(IERC721Enumerable _nagaKids)... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"MintNagaKids.sol\":697:715  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"MintNagaKids.sol\":752:761  _nagaKids */\n      dup2\n        /* \"MintNagaKids.sol\":733:749  nagaKidsContract */\n      0x02\n      0x00\n        /* \"MintNagaKids.sol\":733:761  nagaKidsContract = _nagaKids */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":602:769  function changeNagaKidsContract(IERC721Enumerable _nagaKids)... */\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":1087:1280  function whitelistMint() public payable nonReentrant {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":1178:1182  true */\n      0x01\n        /* \"MintNagaKids.sol\":1159:1182  isWhitelistOpen == true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":1159:1174  isWhitelistOpen */\n      0x02\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MintNagaKids.sol\":1159:1182  isWhitelistOpen == true */\n      iszero\n      iszero\n      eq\n        /* \"MintNagaKids.sol\":1151:1214  require(isWhitelistOpen == true, \"Whitelist not open to mint.\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"MintNagaKids.sol\":1252:1256  1111 */\n      0x0457\n        /* \"MintNagaKids.sol\":1233:1249  getTotalSupply() */\n      tag_125\n        /* \"MintNagaKids.sol\":1233:1247  getTotalSupply */\n      tag_79\n        /* \"MintNagaKids.sol\":1233:1249  getTotalSupply() */\n      jump\t// in\n    tag_125:\n        /* \"MintNagaKids.sol\":1233:1256  getTotalSupply() < 1111 */\n      lt\n        /* \"MintNagaKids.sol\":1225:1272  require(getTotalSupply() < 1111, \"Over supply\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":1087:1280  function whitelistMint() public payable nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":412:439  bool public isWhitelistOpen */\n    tag_67:\n      0x02\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"MintNagaKids.sol\":379:405  bool public isFreeMintOpen */\n    tag_75:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"MintNagaKids.sol\":1288:1400  function getTotalSupply() public view returns (uint256) {... */\n    tag_79:\n        /* \"MintNagaKids.sol\":1335:1342  uint256 */\n      0x00\n        /* \"MintNagaKids.sol\":1362:1378  nagaKidsContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MintNagaKids.sol\":1362:1390  nagaKidsContract.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"MintNagaKids.sol\":1362:1392  nagaKidsContract.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"MintNagaKids.sol\":1355:1392  return nagaKidsContract.totalSupply() */\n      swap1\n      pop\n        /* \"MintNagaKids.sol\":1288:1400  function getTotalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5233:5251  getRoleAdmin(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5246:5250  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5233:5245  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5233:5251  getRoleAdmin(role) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":777:927  function changeWhitelistMintOpen(bool _isOpen)... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"MintNagaKids.sol\":858:876  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_141:\n        /* \"MintNagaKids.sol\":912:919  _isOpen */\n      dup2\n        /* \"MintNagaKids.sol\":894:909  isWhitelistOpen */\n      0x02\n      0x15\n        /* \"MintNagaKids.sol\":894:919  isWhitelistOpen = _isOpen */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":777:927  function changeWhitelistMintOpen(bool _isOpen)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n    tag_148:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n    tag_152:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_156\n      tag_154\n      jump\t// in\n    tag_156:\n    tag_155:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_160\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_161\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1878  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_154\n      jump\t// in\n    tag_163:\n    tag_162:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_154\n      jump\t// in\n    tag_165:\n    tag_164:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n      dup1\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_157)\n    tag_158:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1953:1954  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1949  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2001:2022  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7371  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7372:7376  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7385  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7386:7393  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7457  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7438:7445  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7432:7436  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7729  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7730:7734  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7743  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7744:7751  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7806:7818  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7806:7816  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7806:7818  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7797:7804  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7791:7795  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4121:4134  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_190\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_195:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_197:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_198:\n        /* \"#utility.yul\":561:584   */\n      tag_252\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_197\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_253:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_199:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_255\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_198\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_258\n      tag_195\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":833:952   */\n    tag_257:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_259\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_199\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_200:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_201:\n        /* \"#utility.yul\":1268:1289   */\n      tag_262\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_200\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_264\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_201\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_202:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_203:\n        /* \"#utility.yul\":1674:1698   */\n      tag_267\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_202\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_268:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_204:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_270\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_203\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_30:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_273\n      tag_195\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1950:2069   */\n    tag_272:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_274\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_204\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_205:\n        /* \"#utility.yul\":2296:2320   */\n      tag_276\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_202\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_33:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_278\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_205\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_206:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2753   */\n    tag_207:\n        /* \"#utility.yul\":2721:2724   */\n      0x00\n        /* \"#utility.yul\":2742:2747   */\n      dup2\n        /* \"#utility.yul\":2735:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2901   */\n    tag_208:\n        /* \"#utility.yul\":2809:2818   */\n      0x00\n        /* \"#utility.yul\":2842:2895   */\n      tag_282\n        /* \"#utility.yul\":2860:2894   */\n      tag_283\n        /* \"#utility.yul\":2869:2893   */\n      tag_284\n        /* \"#utility.yul\":2887:2892   */\n      dup5\n        /* \"#utility.yul\":2869:2893   */\n      tag_206\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2860:2894   */\n      tag_207\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2842:2895   */\n      tag_206\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2829:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2907:3033   */\n    tag_209:\n        /* \"#utility.yul\":2957:2966   */\n      0x00\n        /* \"#utility.yul\":2990:3027   */\n      tag_286\n        /* \"#utility.yul\":3021:3026   */\n      dup3\n        /* \"#utility.yul\":2990:3027   */\n      tag_208\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2977:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:3033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3190   */\n    tag_210:\n        /* \"#utility.yul\":3114:3123   */\n      0x00\n        /* \"#utility.yul\":3147:3184   */\n      tag_288\n        /* \"#utility.yul\":3178:3183   */\n      dup3\n        /* \"#utility.yul\":3147:3184   */\n      tag_209\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3134:3184   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3377   */\n    tag_211:\n        /* \"#utility.yul\":3308:3370   */\n      tag_290\n        /* \"#utility.yul\":3364:3369   */\n      dup2\n        /* \"#utility.yul\":3308:3370   */\n      tag_210\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3303:3306   */\n      dup3\n        /* \"#utility.yul\":3296:3371   */\n      mstore\n        /* \"#utility.yul\":3196:3377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3655   */\n    tag_38:\n        /* \"#utility.yul\":3501:3505   */\n      0x00\n        /* \"#utility.yul\":3539:3541   */\n      0x20\n        /* \"#utility.yul\":3528:3537   */\n      dup3\n        /* \"#utility.yul\":3524:3542   */\n      add\n        /* \"#utility.yul\":3516:3542   */\n      swap1\n      pop\n        /* \"#utility.yul\":3552:3648   */\n      tag_292\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3634:3643   */\n      dup4\n        /* \"#utility.yul\":3630:3647   */\n      add\n        /* \"#utility.yul\":3621:3627   */\n      dup5\n        /* \"#utility.yul\":3552:3648   */\n      tag_211\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3383:3655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3661:3777   */\n    tag_212:\n        /* \"#utility.yul\":3731:3752   */\n      tag_294\n        /* \"#utility.yul\":3746:3751   */\n      dup2\n        /* \"#utility.yul\":3731:3752   */\n      tag_200\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3724:3729   */\n      dup2\n        /* \"#utility.yul\":3721:3753   */\n      eq\n        /* \"#utility.yul\":3711:3771   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3764:3765   */\n      dup1\n        /* \"#utility.yul\":3757:3769   */\n      revert\n        /* \"#utility.yul\":3711:3771   */\n    tag_295:\n        /* \"#utility.yul\":3661:3777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3916   */\n    tag_213:\n        /* \"#utility.yul\":3826:3831   */\n      0x00\n        /* \"#utility.yul\":3864:3870   */\n      dup2\n        /* \"#utility.yul\":3851:3871   */\n      calldataload\n        /* \"#utility.yul\":3842:3871   */\n      swap1\n      pop\n        /* \"#utility.yul\":3880:3910   */\n      tag_297\n        /* \"#utility.yul\":3904:3909   */\n      dup2\n        /* \"#utility.yul\":3880:3910   */\n      tag_212\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3783:3916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4245   */\n    tag_42:\n        /* \"#utility.yul\":3978:3984   */\n      0x00\n        /* \"#utility.yul\":4027:4029   */\n      0x20\n        /* \"#utility.yul\":4015:4024   */\n      dup3\n        /* \"#utility.yul\":4006:4013   */\n      dup5\n        /* \"#utility.yul\":4002:4025   */\n      sub\n        /* \"#utility.yul\":3998:4030   */\n      slt\n        /* \"#utility.yul\":3995:4114   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4033:4112   */\n      tag_300\n      tag_195\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3995:4114   */\n    tag_299:\n        /* \"#utility.yul\":4153:4154   */\n      0x00\n        /* \"#utility.yul\":4178:4228   */\n      tag_301\n        /* \"#utility.yul\":4220:4227   */\n      dup5\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup6\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4178:4228   */\n      tag_213\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4168:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4238   */\n      pop\n        /* \"#utility.yul\":3922:4245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4347   */\n    tag_214:\n        /* \"#utility.yul\":4288:4295   */\n      0x00\n        /* \"#utility.yul\":4317:4341   */\n      tag_303\n        /* \"#utility.yul\":4335:4340   */\n      dup3\n        /* \"#utility.yul\":4317:4341   */\n      tag_206\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4306:4341   */\n      swap1\n      pop\n        /* \"#utility.yul\":4251:4347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4475   */\n    tag_215:\n        /* \"#utility.yul\":4426:4450   */\n      tag_305\n        /* \"#utility.yul\":4444:4449   */\n      dup2\n        /* \"#utility.yul\":4426:4450   */\n      tag_214\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4419:4424   */\n      dup2\n        /* \"#utility.yul\":4416:4451   */\n      eq\n        /* \"#utility.yul\":4406:4469   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4465:4466   */\n      0x00\n        /* \"#utility.yul\":4462:4463   */\n      dup1\n        /* \"#utility.yul\":4455:4467   */\n      revert\n        /* \"#utility.yul\":4406:4469   */\n    tag_306:\n        /* \"#utility.yul\":4353:4475   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4481:4620   */\n    tag_216:\n        /* \"#utility.yul\":4527:4532   */\n      0x00\n        /* \"#utility.yul\":4565:4571   */\n      dup2\n        /* \"#utility.yul\":4552:4572   */\n      calldataload\n        /* \"#utility.yul\":4543:4572   */\n      swap1\n      pop\n        /* \"#utility.yul\":4581:4614   */\n      tag_308\n        /* \"#utility.yul\":4608:4613   */\n      dup2\n        /* \"#utility.yul\":4581:4614   */\n      tag_215\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4481:4620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:5100   */\n    tag_47:\n        /* \"#utility.yul\":4694:4700   */\n      0x00\n        /* \"#utility.yul\":4702:4708   */\n      dup1\n        /* \"#utility.yul\":4751:4753   */\n      0x40\n        /* \"#utility.yul\":4739:4748   */\n      dup4\n        /* \"#utility.yul\":4730:4737   */\n      dup6\n        /* \"#utility.yul\":4726:4749   */\n      sub\n        /* \"#utility.yul\":4722:4754   */\n      slt\n        /* \"#utility.yul\":4719:4838   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4757:4836   */\n      tag_311\n      tag_195\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4719:4838   */\n    tag_310:\n        /* \"#utility.yul\":4877:4878   */\n      0x00\n        /* \"#utility.yul\":4902:4955   */\n      tag_312\n        /* \"#utility.yul\":4947:4954   */\n      dup6\n        /* \"#utility.yul\":4938:4944   */\n      dup3\n        /* \"#utility.yul\":4927:4936   */\n      dup7\n        /* \"#utility.yul\":4923:4945   */\n      add\n        /* \"#utility.yul\":4902:4955   */\n      tag_204\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4892:4955   */\n      swap3\n      pop\n        /* \"#utility.yul\":4848:4965   */\n      pop\n        /* \"#utility.yul\":5004:5006   */\n      0x20\n        /* \"#utility.yul\":5030:5083   */\n      tag_313\n        /* \"#utility.yul\":5075:5082   */\n      dup6\n        /* \"#utility.yul\":5066:5072   */\n      dup3\n        /* \"#utility.yul\":5055:5064   */\n      dup7\n        /* \"#utility.yul\":5051:5073   */\n      add\n        /* \"#utility.yul\":5030:5083   */\n      tag_216\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5020:5083   */\n      swap2\n      pop\n        /* \"#utility.yul\":4975:5093   */\n      pop\n        /* \"#utility.yul\":4626:5100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5106:5227   */\n    tag_217:\n        /* \"#utility.yul\":5168:5175   */\n      0x00\n        /* \"#utility.yul\":5197:5221   */\n      tag_315\n        /* \"#utility.yul\":5215:5220   */\n      dup3\n        /* \"#utility.yul\":5197:5221   */\n      tag_214\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5186:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5106:5227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5233:5405   */\n    tag_218:\n        /* \"#utility.yul\":5331:5380   */\n      tag_317\n        /* \"#utility.yul\":5374:5379   */\n      dup2\n        /* \"#utility.yul\":5331:5380   */\n      tag_217\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5324:5329   */\n      dup2\n        /* \"#utility.yul\":5321:5381   */\n      eq\n        /* \"#utility.yul\":5311:5399   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5395:5396   */\n      0x00\n        /* \"#utility.yul\":5392:5393   */\n      dup1\n        /* \"#utility.yul\":5385:5397   */\n      revert\n        /* \"#utility.yul\":5311:5399   */\n    tag_318:\n        /* \"#utility.yul\":5233:5405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5411:5600   */\n    tag_219:\n        /* \"#utility.yul\":5482:5487   */\n      0x00\n        /* \"#utility.yul\":5520:5526   */\n      dup2\n        /* \"#utility.yul\":5507:5527   */\n      calldataload\n        /* \"#utility.yul\":5498:5527   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5594   */\n      tag_320\n        /* \"#utility.yul\":5588:5593   */\n      dup2\n        /* \"#utility.yul\":5536:5594   */\n      tag_218\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5411:5600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5606:5985   */\n    tag_56:\n        /* \"#utility.yul\":5690:5696   */\n      0x00\n        /* \"#utility.yul\":5739:5741   */\n      0x20\n        /* \"#utility.yul\":5727:5736   */\n      dup3\n        /* \"#utility.yul\":5718:5725   */\n      dup5\n        /* \"#utility.yul\":5714:5737   */\n      sub\n        /* \"#utility.yul\":5710:5742   */\n      slt\n        /* \"#utility.yul\":5707:5826   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5745:5824   */\n      tag_323\n      tag_195\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5707:5826   */\n    tag_322:\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5890:5968   */\n      tag_324\n        /* \"#utility.yul\":5960:5967   */\n      dup5\n        /* \"#utility.yul\":5951:5957   */\n      dup3\n        /* \"#utility.yul\":5940:5949   */\n      dup6\n        /* \"#utility.yul\":5936:5958   */\n      add\n        /* \"#utility.yul\":5890:5968   */\n      tag_219\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5880:5968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5836:5978   */\n      pop\n        /* \"#utility.yul\":5606:5985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5991:6068   */\n    tag_220:\n        /* \"#utility.yul\":6028:6035   */\n      0x00\n        /* \"#utility.yul\":6057:6062   */\n      dup2\n        /* \"#utility.yul\":6046:6062   */\n      swap1\n      pop\n        /* \"#utility.yul\":5991:6068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6074:6192   */\n    tag_221:\n        /* \"#utility.yul\":6161:6185   */\n      tag_327\n        /* \"#utility.yul\":6179:6184   */\n      dup2\n        /* \"#utility.yul\":6161:6185   */\n      tag_220\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6156:6159   */\n      dup3\n        /* \"#utility.yul\":6149:6186   */\n      mstore\n        /* \"#utility.yul\":6074:6192   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6198:6420   */\n    tag_81:\n        /* \"#utility.yul\":6291:6295   */\n      0x00\n        /* \"#utility.yul\":6329:6331   */\n      0x20\n        /* \"#utility.yul\":6318:6327   */\n      dup3\n        /* \"#utility.yul\":6314:6332   */\n      add\n        /* \"#utility.yul\":6306:6332   */\n      swap1\n      pop\n        /* \"#utility.yul\":6342:6413   */\n      tag_329\n        /* \"#utility.yul\":6410:6411   */\n      0x00\n        /* \"#utility.yul\":6399:6408   */\n      dup4\n        /* \"#utility.yul\":6395:6412   */\n      add\n        /* \"#utility.yul\":6386:6392   */\n      dup5\n        /* \"#utility.yul\":6342:6413   */\n      tag_221\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6198:6420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6426:6595   */\n    tag_222:\n        /* \"#utility.yul\":6510:6521   */\n      0x00\n        /* \"#utility.yul\":6544:6550   */\n      dup3\n        /* \"#utility.yul\":6539:6542   */\n      dup3\n        /* \"#utility.yul\":6532:6551   */\n      mstore\n        /* \"#utility.yul\":6584:6588   */\n      0x20\n        /* \"#utility.yul\":6579:6582   */\n      dup3\n        /* \"#utility.yul\":6575:6589   */\n      add\n        /* \"#utility.yul\":6560:6589   */\n      swap1\n      pop\n        /* \"#utility.yul\":6426:6595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6835   */\n    tag_223:\n        /* \"#utility.yul\":6741:6775   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":6737:6738   */\n      0x00\n        /* \"#utility.yul\":6729:6735   */\n      dup3\n        /* \"#utility.yul\":6725:6739   */\n      add\n        /* \"#utility.yul\":6718:6776   */\n      mstore\n        /* \"#utility.yul\":6810:6827   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6807   */\n      0x20\n        /* \"#utility.yul\":6797:6803   */\n      dup3\n        /* \"#utility.yul\":6793:6808   */\n      add\n        /* \"#utility.yul\":6786:6828   */\n      mstore\n        /* \"#utility.yul\":6601:6835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6841:7207   */\n    tag_224:\n        /* \"#utility.yul\":6983:6986   */\n      0x00\n        /* \"#utility.yul\":7004:7071   */\n      tag_333\n        /* \"#utility.yul\":7068:7070   */\n      0x2f\n        /* \"#utility.yul\":7063:7066   */\n      dup4\n        /* \"#utility.yul\":7004:7071   */\n      tag_222\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6997:7071   */\n      swap2\n      pop\n        /* \"#utility.yul\":7080:7173   */\n      tag_334\n        /* \"#utility.yul\":7169:7172   */\n      dup3\n        /* \"#utility.yul\":7080:7173   */\n      tag_223\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7198:7200   */\n      0x40\n        /* \"#utility.yul\":7193:7196   */\n      dup3\n        /* \"#utility.yul\":7189:7201   */\n      add\n        /* \"#utility.yul\":7182:7201   */\n      swap1\n      pop\n        /* \"#utility.yul\":6841:7207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7632   */\n    tag_111:\n        /* \"#utility.yul\":7379:7383   */\n      0x00\n        /* \"#utility.yul\":7417:7419   */\n      0x20\n        /* \"#utility.yul\":7406:7415   */\n      dup3\n        /* \"#utility.yul\":7402:7420   */\n      add\n        /* \"#utility.yul\":7394:7420   */\n      swap1\n      pop\n        /* \"#utility.yul\":7466:7475   */\n      dup2\n        /* \"#utility.yul\":7460:7464   */\n      dup2\n        /* \"#utility.yul\":7456:7476   */\n      sub\n        /* \"#utility.yul\":7452:7453   */\n      0x00\n        /* \"#utility.yul\":7441:7450   */\n      dup4\n        /* \"#utility.yul\":7437:7454   */\n      add\n        /* \"#utility.yul\":7430:7477   */\n      mstore\n        /* \"#utility.yul\":7494:7625   */\n      tag_336\n        /* \"#utility.yul\":7620:7624   */\n      dup2\n        /* \"#utility.yul\":7494:7625   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7486:7625   */\n      swap1\n      pop\n        /* \"#utility.yul\":7213:7632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7638:7819   */\n    tag_225:\n        /* \"#utility.yul\":7778:7811   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7774:7775   */\n      0x00\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7762:7776   */\n      add\n        /* \"#utility.yul\":7755:7812   */\n      mstore\n        /* \"#utility.yul\":7638:7819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7825:8191   */\n    tag_226:\n        /* \"#utility.yul\":7967:7970   */\n      0x00\n        /* \"#utility.yul\":7988:8055   */\n      tag_339\n        /* \"#utility.yul\":8052:8054   */\n      0x1f\n        /* \"#utility.yul\":8047:8050   */\n      dup4\n        /* \"#utility.yul\":7988:8055   */\n      tag_222\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7981:8055   */\n      swap2\n      pop\n        /* \"#utility.yul\":8064:8157   */\n      tag_340\n        /* \"#utility.yul\":8153:8156   */\n      dup3\n        /* \"#utility.yul\":8064:8157   */\n      tag_225\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8182:8184   */\n      0x20\n        /* \"#utility.yul\":8177:8180   */\n      dup3\n        /* \"#utility.yul\":8173:8185   */\n      add\n        /* \"#utility.yul\":8166:8185   */\n      swap1\n      pop\n        /* \"#utility.yul\":7825:8191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:8616   */\n    tag_120:\n        /* \"#utility.yul\":8363:8367   */\n      0x00\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8390:8399   */\n      dup3\n        /* \"#utility.yul\":8386:8404   */\n      add\n        /* \"#utility.yul\":8378:8404   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8459   */\n      dup2\n        /* \"#utility.yul\":8444:8448   */\n      dup2\n        /* \"#utility.yul\":8440:8460   */\n      sub\n        /* \"#utility.yul\":8436:8437   */\n      0x00\n        /* \"#utility.yul\":8425:8434   */\n      dup4\n        /* \"#utility.yul\":8421:8438   */\n      add\n        /* \"#utility.yul\":8414:8461   */\n      mstore\n        /* \"#utility.yul\":8478:8609   */\n      tag_342\n        /* \"#utility.yul\":8604:8608   */\n      dup2\n        /* \"#utility.yul\":8478:8609   */\n      tag_226\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8470:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:8799   */\n    tag_227:\n        /* \"#utility.yul\":8762:8791   */\n      0x57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000\n        /* \"#utility.yul\":8758:8759   */\n      0x00\n        /* \"#utility.yul\":8750:8756   */\n      dup3\n        /* \"#utility.yul\":8746:8760   */\n      add\n        /* \"#utility.yul\":8739:8792   */\n      mstore\n        /* \"#utility.yul\":8622:8799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8805:9171   */\n    tag_228:\n        /* \"#utility.yul\":8947:8950   */\n      0x00\n        /* \"#utility.yul\":8968:9035   */\n      tag_345\n        /* \"#utility.yul\":9032:9034   */\n      0x1b\n        /* \"#utility.yul\":9027:9030   */\n      dup4\n        /* \"#utility.yul\":8968:9035   */\n      tag_222\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8961:9035   */\n      swap2\n      pop\n        /* \"#utility.yul\":9044:9137   */\n      tag_346\n        /* \"#utility.yul\":9133:9136   */\n      dup3\n        /* \"#utility.yul\":9044:9137   */\n      tag_227\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9162:9164   */\n      0x20\n        /* \"#utility.yul\":9157:9160   */\n      dup3\n        /* \"#utility.yul\":9153:9165   */\n      add\n        /* \"#utility.yul\":9146:9165   */\n      swap1\n      pop\n        /* \"#utility.yul\":8805:9171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9177:9596   */\n    tag_124:\n        /* \"#utility.yul\":9343:9347   */\n      0x00\n        /* \"#utility.yul\":9381:9383   */\n      0x20\n        /* \"#utility.yul\":9370:9379   */\n      dup3\n        /* \"#utility.yul\":9366:9384   */\n      add\n        /* \"#utility.yul\":9358:9384   */\n      swap1\n      pop\n        /* \"#utility.yul\":9430:9439   */\n      dup2\n        /* \"#utility.yul\":9424:9428   */\n      dup2\n        /* \"#utility.yul\":9420:9440   */\n      sub\n        /* \"#utility.yul\":9416:9417   */\n      0x00\n        /* \"#utility.yul\":9405:9414   */\n      dup4\n        /* \"#utility.yul\":9401:9418   */\n      add\n        /* \"#utility.yul\":9394:9441   */\n      mstore\n        /* \"#utility.yul\":9458:9589   */\n      tag_348\n        /* \"#utility.yul\":9584:9588   */\n      dup2\n        /* \"#utility.yul\":9458:9589   */\n      tag_228\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9450:9589   */\n      swap1\n      pop\n        /* \"#utility.yul\":9177:9596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9602:9763   */\n    tag_229:\n        /* \"#utility.yul\":9742:9755   */\n      0x4f76657220737570706c79000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9738:9739   */\n      0x00\n        /* \"#utility.yul\":9730:9736   */\n      dup3\n        /* \"#utility.yul\":9726:9740   */\n      add\n        /* \"#utility.yul\":9719:9756   */\n      mstore\n        /* \"#utility.yul\":9602:9763   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9769:10135   */\n    tag_230:\n        /* \"#utility.yul\":9911:9914   */\n      0x00\n        /* \"#utility.yul\":9932:9999   */\n      tag_351\n        /* \"#utility.yul\":9996:9998   */\n      0x0b\n        /* \"#utility.yul\":9991:9994   */\n      dup4\n        /* \"#utility.yul\":9932:9999   */\n      tag_222\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9925:9999   */\n      swap2\n      pop\n        /* \"#utility.yul\":10008:10101   */\n      tag_352\n        /* \"#utility.yul\":10097:10100   */\n      dup3\n        /* \"#utility.yul\":10008:10101   */\n      tag_229\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10126:10128   */\n      0x20\n        /* \"#utility.yul\":10121:10124   */\n      dup3\n        /* \"#utility.yul\":10117:10129   */\n      add\n        /* \"#utility.yul\":10110:10129   */\n      swap1\n      pop\n        /* \"#utility.yul\":9769:10135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10141:10560   */\n    tag_128:\n        /* \"#utility.yul\":10307:10311   */\n      0x00\n        /* \"#utility.yul\":10345:10347   */\n      0x20\n        /* \"#utility.yul\":10334:10343   */\n      dup3\n        /* \"#utility.yul\":10330:10348   */\n      add\n        /* \"#utility.yul\":10322:10348   */\n      swap1\n      pop\n        /* \"#utility.yul\":10394:10403   */\n      dup2\n        /* \"#utility.yul\":10388:10392   */\n      dup2\n        /* \"#utility.yul\":10384:10404   */\n      sub\n        /* \"#utility.yul\":10380:10381   */\n      0x00\n        /* \"#utility.yul\":10369:10378   */\n      dup4\n        /* \"#utility.yul\":10365:10382   */\n      add\n        /* \"#utility.yul\":10358:10405   */\n      mstore\n        /* \"#utility.yul\":10422:10553   */\n      tag_354\n        /* \"#utility.yul\":10548:10552   */\n      dup2\n        /* \"#utility.yul\":10422:10553   */\n      tag_230\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10414:10553   */\n      swap1\n      pop\n        /* \"#utility.yul\":10141:10560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10566:10688   */\n    tag_231:\n        /* \"#utility.yul\":10639:10663   */\n      tag_356\n        /* \"#utility.yul\":10657:10662   */\n      dup2\n        /* \"#utility.yul\":10639:10663   */\n      tag_220\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":10632:10637   */\n      dup2\n        /* \"#utility.yul\":10629:10664   */\n      eq\n        /* \"#utility.yul\":10619:10682   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":10678:10679   */\n      0x00\n        /* \"#utility.yul\":10675:10676   */\n      dup1\n        /* \"#utility.yul\":10668:10680   */\n      revert\n        /* \"#utility.yul\":10619:10682   */\n    tag_357:\n        /* \"#utility.yul\":10566:10688   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10694:10837   */\n    tag_232:\n        /* \"#utility.yul\":10751:10756   */\n      0x00\n        /* \"#utility.yul\":10782:10788   */\n      dup2\n        /* \"#utility.yul\":10776:10789   */\n      mload\n        /* \"#utility.yul\":10767:10789   */\n      swap1\n      pop\n        /* \"#utility.yul\":10798:10831   */\n      tag_359\n        /* \"#utility.yul\":10825:10830   */\n      dup2\n        /* \"#utility.yul\":10798:10831   */\n      tag_231\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10694:10837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10843:11194   */\n    tag_134:\n        /* \"#utility.yul\":10913:10919   */\n      0x00\n        /* \"#utility.yul\":10962:10964   */\n      0x20\n        /* \"#utility.yul\":10950:10959   */\n      dup3\n        /* \"#utility.yul\":10941:10948   */\n      dup5\n        /* \"#utility.yul\":10937:10960   */\n      sub\n        /* \"#utility.yul\":10933:10965   */\n      slt\n        /* \"#utility.yul\":10930:11049   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":10968:11047   */\n      tag_362\n      tag_195\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10930:11049   */\n    tag_361:\n        /* \"#utility.yul\":11088:11089   */\n      0x00\n        /* \"#utility.yul\":11113:11177   */\n      tag_363\n        /* \"#utility.yul\":11169:11176   */\n      dup5\n        /* \"#utility.yul\":11160:11166   */\n      dup3\n        /* \"#utility.yul\":11149:11158   */\n      dup6\n        /* \"#utility.yul\":11145:11167   */\n      add\n        /* \"#utility.yul\":11113:11177   */\n      tag_232\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11103:11177   */\n      swap2\n      pop\n        /* \"#utility.yul\":11059:11187   */\n      pop\n        /* \"#utility.yul\":10843:11194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11200:11380   */\n    tag_233:\n        /* \"#utility.yul\":11248:11325   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11245:11246   */\n      0x00\n        /* \"#utility.yul\":11238:11326   */\n      mstore\n        /* \"#utility.yul\":11345:11349   */\n      0x11\n        /* \"#utility.yul\":11342:11343   */\n      0x04\n        /* \"#utility.yul\":11335:11350   */\n      mstore\n        /* \"#utility.yul\":11369:11373   */\n      0x24\n        /* \"#utility.yul\":11366:11367   */\n      0x00\n        /* \"#utility.yul\":11359:11374   */\n      revert\n        /* \"#utility.yul\":11386:11734   */\n    tag_145:\n        /* \"#utility.yul\":11426:11433   */\n      0x00\n        /* \"#utility.yul\":11449:11469   */\n      tag_366\n        /* \"#utility.yul\":11467:11468   */\n      dup3\n        /* \"#utility.yul\":11449:11469   */\n      tag_220\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11444:11469   */\n      swap2\n      pop\n        /* \"#utility.yul\":11483:11503   */\n      tag_367\n        /* \"#utility.yul\":11501:11502   */\n      dup4\n        /* \"#utility.yul\":11483:11503   */\n      tag_220\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11478:11503   */\n      swap3\n      pop\n        /* \"#utility.yul\":11671:11672   */\n      dup2\n        /* \"#utility.yul\":11603:11669   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11599:11673   */\n      div\n        /* \"#utility.yul\":11596:11597   */\n      dup4\n        /* \"#utility.yul\":11593:11674   */\n      gt\n        /* \"#utility.yul\":11588:11589   */\n      dup3\n        /* \"#utility.yul\":11581:11590   */\n      iszero\n        /* \"#utility.yul\":11574:11591   */\n      iszero\n        /* \"#utility.yul\":11570:11675   */\n      and\n        /* \"#utility.yul\":11567:11698   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":11678:11696   */\n      tag_369\n      tag_233\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11567:11698   */\n    tag_368:\n        /* \"#utility.yul\":11726:11727   */\n      dup3\n        /* \"#utility.yul\":11723:11724   */\n      dup3\n        /* \"#utility.yul\":11719:11728   */\n      mul\n        /* \"#utility.yul\":11708:11728   */\n      swap1\n      pop\n        /* \"#utility.yul\":11386:11734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11740:12045   */\n    tag_147:\n        /* \"#utility.yul\":11780:11783   */\n      0x00\n        /* \"#utility.yul\":11799:11819   */\n      tag_371\n        /* \"#utility.yul\":11817:11818   */\n      dup3\n        /* \"#utility.yul\":11799:11819   */\n      tag_220\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11794:11819   */\n      swap2\n      pop\n        /* \"#utility.yul\":11833:11853   */\n      tag_372\n        /* \"#utility.yul\":11851:11852   */\n      dup4\n        /* \"#utility.yul\":11833:11853   */\n      tag_220\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11828:11853   */\n      swap3\n      pop\n        /* \"#utility.yul\":11987:11988   */\n      dup3\n        /* \"#utility.yul\":11919:11985   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11915:11989   */\n      sub\n        /* \"#utility.yul\":11912:11913   */\n      dup3\n        /* \"#utility.yul\":11909:11990   */\n      gt\n        /* \"#utility.yul\":11906:12013   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_374\n      tag_233\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11906:12013   */\n    tag_373:\n        /* \"#utility.yul\":12037:12038   */\n      dup3\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12030:12039   */\n      add\n        /* \"#utility.yul\":12023:12039   */\n      swap1\n      pop\n        /* \"#utility.yul\":11740:12045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12051:12231   */\n    tag_150:\n        /* \"#utility.yul\":12099:12176   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12096:12097   */\n      0x00\n        /* \"#utility.yul\":12089:12177   */\n      mstore\n        /* \"#utility.yul\":12196:12200   */\n      0x41\n        /* \"#utility.yul\":12193:12194   */\n      0x04\n        /* \"#utility.yul\":12186:12201   */\n      mstore\n        /* \"#utility.yul\":12220:12224   */\n      0x24\n        /* \"#utility.yul\":12217:12218   */\n      0x00\n        /* \"#utility.yul\":12210:12225   */\n      revert\n        /* \"#utility.yul\":12237:12417   */\n    tag_154:\n        /* \"#utility.yul\":12285:12362   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12282:12283   */\n      0x00\n        /* \"#utility.yul\":12275:12363   */\n      mstore\n        /* \"#utility.yul\":12382:12386   */\n      0x32\n        /* \"#utility.yul\":12379:12380   */\n      0x04\n        /* \"#utility.yul\":12372:12387   */\n      mstore\n        /* \"#utility.yul\":12406:12410   */\n      0x24\n        /* \"#utility.yul\":12403:12404   */\n      0x00\n        /* \"#utility.yul\":12396:12411   */\n      revert\n        /* \"#utility.yul\":12423:12594   */\n    tag_167:\n        /* \"#utility.yul\":12462:12465   */\n      0x00\n        /* \"#utility.yul\":12485:12509   */\n      tag_378\n        /* \"#utility.yul\":12503:12508   */\n      dup3\n        /* \"#utility.yul\":12485:12509   */\n      tag_220\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12476:12509   */\n      swap2\n      pop\n        /* \"#utility.yul\":12531:12535   */\n      0x00\n        /* \"#utility.yul\":12524:12529   */\n      dup3\n        /* \"#utility.yul\":12521:12536   */\n      sub\n        /* \"#utility.yul\":12518:12559   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":12539:12557   */\n      tag_380\n      tag_233\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12518:12559   */\n    tag_379:\n        /* \"#utility.yul\":12586:12587   */\n      0x01\n        /* \"#utility.yul\":12579:12584   */\n      dup3\n        /* \"#utility.yul\":12575:12588   */\n      sub\n        /* \"#utility.yul\":12568:12588   */\n      swap1\n      pop\n        /* \"#utility.yul\":12423:12594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12600:12782   */\n    tag_234:\n        /* \"#utility.yul\":12740:12774   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":12736:12737   */\n      0x00\n        /* \"#utility.yul\":12728:12734   */\n      dup3\n        /* \"#utility.yul\":12724:12738   */\n      add\n        /* \"#utility.yul\":12717:12775   */\n      mstore\n        /* \"#utility.yul\":12600:12782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12788:13154   */\n    tag_235:\n        /* \"#utility.yul\":12930:12933   */\n      0x00\n        /* \"#utility.yul\":12951:13018   */\n      tag_383\n        /* \"#utility.yul\":13015:13017   */\n      0x20\n        /* \"#utility.yul\":13010:13013   */\n      dup4\n        /* \"#utility.yul\":12951:13018   */\n      tag_222\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12944:13018   */\n      swap2\n      pop\n        /* \"#utility.yul\":13027:13120   */\n      tag_384\n        /* \"#utility.yul\":13116:13119   */\n      dup3\n        /* \"#utility.yul\":13027:13120   */\n      tag_234\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":13145:13147   */\n      0x20\n        /* \"#utility.yul\":13140:13143   */\n      dup3\n        /* \"#utility.yul\":13136:13148   */\n      add\n        /* \"#utility.yul\":13129:13148   */\n      swap1\n      pop\n        /* \"#utility.yul\":12788:13154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13160:13579   */\n    tag_170:\n        /* \"#utility.yul\":13326:13330   */\n      0x00\n        /* \"#utility.yul\":13364:13366   */\n      0x20\n        /* \"#utility.yul\":13353:13362   */\n      dup3\n        /* \"#utility.yul\":13349:13367   */\n      add\n        /* \"#utility.yul\":13341:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":13413:13422   */\n      dup2\n        /* \"#utility.yul\":13407:13411   */\n      dup2\n        /* \"#utility.yul\":13403:13423   */\n      sub\n        /* \"#utility.yul\":13399:13400   */\n      0x00\n        /* \"#utility.yul\":13388:13397   */\n      dup4\n        /* \"#utility.yul\":13384:13401   */\n      add\n        /* \"#utility.yul\":13377:13424   */\n      mstore\n        /* \"#utility.yul\":13441:13572   */\n      tag_386\n        /* \"#utility.yul\":13567:13571   */\n      dup2\n        /* \"#utility.yul\":13441:13572   */\n      tag_235\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13433:13572   */\n      swap1\n      pop\n        /* \"#utility.yul\":13160:13579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13585:13733   */\n    tag_236:\n        /* \"#utility.yul\":13687:13698   */\n      0x00\n        /* \"#utility.yul\":13724:13727   */\n      dup2\n        /* \"#utility.yul\":13709:13727   */\n      swap1\n      pop\n        /* \"#utility.yul\":13585:13733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13739:13912   */\n    tag_237:\n        /* \"#utility.yul\":13879:13904   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13875:13876   */\n      0x00\n        /* \"#utility.yul\":13867:13873   */\n      dup3\n        /* \"#utility.yul\":13863:13877   */\n      add\n        /* \"#utility.yul\":13856:13905   */\n      mstore\n        /* \"#utility.yul\":13739:13912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13918:14320   */\n    tag_238:\n        /* \"#utility.yul\":14078:14081   */\n      0x00\n        /* \"#utility.yul\":14099:14184   */\n      tag_390\n        /* \"#utility.yul\":14181:14183   */\n      0x17\n        /* \"#utility.yul\":14176:14179   */\n      dup4\n        /* \"#utility.yul\":14099:14184   */\n      tag_236\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":14092:14184   */\n      swap2\n      pop\n        /* \"#utility.yul\":14193:14286   */\n      tag_391\n        /* \"#utility.yul\":14282:14285   */\n      dup3\n        /* \"#utility.yul\":14193:14286   */\n      tag_237\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14311:14313   */\n      0x17\n        /* \"#utility.yul\":14306:14309   */\n      dup3\n        /* \"#utility.yul\":14302:14314   */\n      add\n        /* \"#utility.yul\":14295:14314   */\n      swap1\n      pop\n        /* \"#utility.yul\":13918:14320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14326:14425   */\n    tag_239:\n        /* \"#utility.yul\":14378:14384   */\n      0x00\n        /* \"#utility.yul\":14412:14417   */\n      dup2\n        /* \"#utility.yul\":14406:14418   */\n      mload\n        /* \"#utility.yul\":14396:14418   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14431:14738   */\n    tag_240:\n        /* \"#utility.yul\":14499:14500   */\n      0x00\n        /* \"#utility.yul\":14509:14622   */\n    tag_394:\n        /* \"#utility.yul\":14523:14529   */\n      dup4\n        /* \"#utility.yul\":14520:14521   */\n      dup2\n        /* \"#utility.yul\":14517:14530   */\n      lt\n        /* \"#utility.yul\":14509:14622   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":14608:14609   */\n      dup1\n        /* \"#utility.yul\":14603:14606   */\n      dup3\n        /* \"#utility.yul\":14599:14610   */\n      add\n        /* \"#utility.yul\":14593:14611   */\n      mload\n        /* \"#utility.yul\":14589:14590   */\n      dup2\n        /* \"#utility.yul\":14584:14587   */\n      dup5\n        /* \"#utility.yul\":14580:14591   */\n      add\n        /* \"#utility.yul\":14573:14612   */\n      mstore\n        /* \"#utility.yul\":14545:14547   */\n      0x20\n        /* \"#utility.yul\":14542:14543   */\n      dup2\n        /* \"#utility.yul\":14538:14548   */\n      add\n        /* \"#utility.yul\":14533:14548   */\n      swap1\n      pop\n        /* \"#utility.yul\":14509:14622   */\n      jump(tag_394)\n    tag_396:\n        /* \"#utility.yul\":14640:14646   */\n      dup4\n        /* \"#utility.yul\":14637:14638   */\n      dup2\n        /* \"#utility.yul\":14634:14647   */\n      gt\n        /* \"#utility.yul\":14631:14732   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":14720:14721   */\n      0x00\n        /* \"#utility.yul\":14711:14717   */\n      dup5\n        /* \"#utility.yul\":14706:14709   */\n      dup5\n        /* \"#utility.yul\":14702:14718   */\n      add\n        /* \"#utility.yul\":14695:14722   */\n      mstore\n        /* \"#utility.yul\":14631:14732   */\n    tag_397:\n        /* \"#utility.yul\":14480:14738   */\n      pop\n        /* \"#utility.yul\":14431:14738   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14744:15121   */\n    tag_241:\n        /* \"#utility.yul\":14850:14853   */\n      0x00\n        /* \"#utility.yul\":14878:14917   */\n      tag_399\n        /* \"#utility.yul\":14911:14916   */\n      dup3\n        /* \"#utility.yul\":14878:14917   */\n      tag_239\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14933:15022   */\n      tag_400\n        /* \"#utility.yul\":15015:15021   */\n      dup2\n        /* \"#utility.yul\":15010:15013   */\n      dup6\n        /* \"#utility.yul\":14933:15022   */\n      tag_236\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14926:15022   */\n      swap4\n      pop\n        /* \"#utility.yul\":15031:15083   */\n      tag_401\n        /* \"#utility.yul\":15076:15082   */\n      dup2\n        /* \"#utility.yul\":15071:15074   */\n      dup6\n        /* \"#utility.yul\":15064:15068   */\n      0x20\n        /* \"#utility.yul\":15057:15062   */\n      dup7\n        /* \"#utility.yul\":15053:15069   */\n      add\n        /* \"#utility.yul\":15031:15083   */\n      tag_240\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15108:15114   */\n      dup1\n        /* \"#utility.yul\":15103:15106   */\n      dup5\n        /* \"#utility.yul\":15099:15115   */\n      add\n        /* \"#utility.yul\":15092:15115   */\n      swap2\n      pop\n        /* \"#utility.yul\":14854:15121   */\n      pop\n        /* \"#utility.yul\":14744:15121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15127:15294   */\n    tag_242:\n        /* \"#utility.yul\":15267:15286   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":15263:15264   */\n      0x00\n        /* \"#utility.yul\":15255:15261   */\n      dup3\n        /* \"#utility.yul\":15251:15265   */\n      add\n        /* \"#utility.yul\":15244:15287   */\n      mstore\n        /* \"#utility.yul\":15127:15294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15300:15702   */\n    tag_243:\n        /* \"#utility.yul\":15460:15463   */\n      0x00\n        /* \"#utility.yul\":15481:15566   */\n      tag_404\n        /* \"#utility.yul\":15563:15565   */\n      0x11\n        /* \"#utility.yul\":15558:15561   */\n      dup4\n        /* \"#utility.yul\":15481:15566   */\n      tag_236\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15474:15566   */\n      swap2\n      pop\n        /* \"#utility.yul\":15575:15668   */\n      tag_405\n        /* \"#utility.yul\":15664:15667   */\n      dup3\n        /* \"#utility.yul\":15575:15668   */\n      tag_242\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15693:15695   */\n      0x11\n        /* \"#utility.yul\":15688:15691   */\n      dup3\n        /* \"#utility.yul\":15684:15696   */\n      add\n        /* \"#utility.yul\":15677:15696   */\n      swap1\n      pop\n        /* \"#utility.yul\":15300:15702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15708:16675   */\n    tag_191:\n        /* \"#utility.yul\":16090:16093   */\n      0x00\n        /* \"#utility.yul\":16112:16260   */\n      tag_407\n        /* \"#utility.yul\":16256:16259   */\n      dup3\n        /* \"#utility.yul\":16112:16260   */\n      tag_238\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16105:16260   */\n      swap2\n      pop\n        /* \"#utility.yul\":16277:16372   */\n      tag_408\n        /* \"#utility.yul\":16368:16371   */\n      dup3\n        /* \"#utility.yul\":16359:16365   */\n      dup6\n        /* \"#utility.yul\":16277:16372   */\n      tag_241\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":16270:16372   */\n      swap2\n      pop\n        /* \"#utility.yul\":16389:16537   */\n      tag_409\n        /* \"#utility.yul\":16533:16536   */\n      dup3\n        /* \"#utility.yul\":16389:16537   */\n      tag_243\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":16382:16537   */\n      swap2\n      pop\n        /* \"#utility.yul\":16554:16649   */\n      tag_410\n        /* \"#utility.yul\":16645:16648   */\n      dup3\n        /* \"#utility.yul\":16636:16642   */\n      dup5\n        /* \"#utility.yul\":16554:16649   */\n      tag_241\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16547:16649   */\n      swap2\n      pop\n        /* \"#utility.yul\":16666:16669   */\n      dup2\n        /* \"#utility.yul\":16659:16669   */\n      swap1\n      pop\n        /* \"#utility.yul\":15708:16675   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16681:16783   */\n    tag_244:\n        /* \"#utility.yul\":16722:16728   */\n      0x00\n        /* \"#utility.yul\":16773:16775   */\n      0x1f\n        /* \"#utility.yul\":16769:16776   */\n      not\n        /* \"#utility.yul\":16764:16766   */\n      0x1f\n        /* \"#utility.yul\":16757:16762   */\n      dup4\n        /* \"#utility.yul\":16753:16767   */\n      add\n        /* \"#utility.yul\":16749:16777   */\n      and\n        /* \"#utility.yul\":16739:16777   */\n      swap1\n      pop\n        /* \"#utility.yul\":16681:16783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16789:17153   */\n    tag_245:\n        /* \"#utility.yul\":16877:16880   */\n      0x00\n        /* \"#utility.yul\":16905:16944   */\n      tag_413\n        /* \"#utility.yul\":16938:16943   */\n      dup3\n        /* \"#utility.yul\":16905:16944   */\n      tag_239\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":16960:17031   */\n      tag_414\n        /* \"#utility.yul\":17024:17030   */\n      dup2\n        /* \"#utility.yul\":17019:17022   */\n      dup6\n        /* \"#utility.yul\":16960:17031   */\n      tag_222\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16953:17031   */\n      swap4\n      pop\n        /* \"#utility.yul\":17040:17092   */\n      tag_415\n        /* \"#utility.yul\":17085:17091   */\n      dup2\n        /* \"#utility.yul\":17080:17083   */\n      dup6\n        /* \"#utility.yul\":17073:17077   */\n      0x20\n        /* \"#utility.yul\":17066:17071   */\n      dup7\n        /* \"#utility.yul\":17062:17078   */\n      add\n        /* \"#utility.yul\":17040:17092   */\n      tag_240\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":17117:17146   */\n      tag_416\n        /* \"#utility.yul\":17139:17145   */\n      dup2\n        /* \"#utility.yul\":17117:17146   */\n      tag_244\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":17112:17115   */\n      dup5\n        /* \"#utility.yul\":17108:17147   */\n      add\n        /* \"#utility.yul\":17101:17147   */\n      swap2\n      pop\n        /* \"#utility.yul\":16881:17153   */\n      pop\n        /* \"#utility.yul\":16789:17153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17159:17472   */\n    tag_193:\n        /* \"#utility.yul\":17272:17276   */\n      0x00\n        /* \"#utility.yul\":17310:17312   */\n      0x20\n        /* \"#utility.yul\":17299:17308   */\n      dup3\n        /* \"#utility.yul\":17295:17313   */\n      add\n        /* \"#utility.yul\":17287:17313   */\n      swap1\n      pop\n        /* \"#utility.yul\":17359:17368   */\n      dup2\n        /* \"#utility.yul\":17353:17357   */\n      dup2\n        /* \"#utility.yul\":17349:17369   */\n      sub\n        /* \"#utility.yul\":17345:17346   */\n      0x00\n        /* \"#utility.yul\":17334:17343   */\n      dup4\n        /* \"#utility.yul\":17330:17347   */\n      add\n        /* \"#utility.yul\":17323:17370   */\n      mstore\n        /* \"#utility.yul\":17387:17465   */\n      tag_418\n        /* \"#utility.yul\":17460:17464   */\n      dup2\n        /* \"#utility.yul\":17451:17457   */\n      dup5\n        /* \"#utility.yul\":17387:17465   */\n      tag_245\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":17379:17465   */\n      swap1\n      pop\n        /* \"#utility.yul\":17159:17472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d93279679cc0f2bf631239dfc59daf598485938f92520b424e9709b8ca5f5b3964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_873": {
									"entryPoint": null,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 588,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 552,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 107,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_591": {
									"entryPoint": 544,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeNagaKidsContract_887": {
									"entryPoint": 348,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 438,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_803": {
									"entryPoint": 784,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721Enumerable_$579_fromMemory": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721Enumerable_$579_fromMemory": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 2396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8012:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "677:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "659:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:10",
														"type": ""
													}
												],
												"src": "568:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:104:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "786:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "836:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721Enumerable_$579",
																					"nodeType": "YulIdentifier",
																					"src": "793:42:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "793:49:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "783:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:60:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:68:10"
															},
															"nodeType": "YulIf",
															"src": "773:88:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "756:5:10",
														"type": ""
													}
												],
												"src": "695:172:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "980:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1054:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721Enumerable_$579",
																	"nodeType": "YulIdentifier",
																	"src": "1002:51:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1002:58:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721Enumerable_$579_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "939:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "947:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "955:5:10",
														"type": ""
													}
												],
												"src": "873:193:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1174:299:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1220:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1222:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1222:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1222:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1195:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1187:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:32:10"
															},
															"nodeType": "YulIf",
															"src": "1184:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1313:153:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1328:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1342:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1332:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1357:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1428:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1439:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1424:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1424:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1448:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721Enumerable_$579_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1367:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1367:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1357:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721Enumerable_$579_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1144:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1155:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1167:6:10",
														"type": ""
													}
												],
												"src": "1072:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1593:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1603:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1618:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1603:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1565:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1581:11:10",
														"type": ""
													}
												],
												"src": "1479:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1761:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1769:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1757:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1773:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1750:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1731:6:10",
														"type": ""
													}
												],
												"src": "1633:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1976:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1986:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2070:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2075:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1993:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1986:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2176:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "2087:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2189:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2196:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1964:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1972:3:10",
														"type": ""
													}
												],
												"src": "1812:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2290:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2306:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2300:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2272:6:10",
														"type": ""
													}
												],
												"src": "2220:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2374:258:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2384:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2393:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2388:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2453:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2478:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2483:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2474:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2474:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2497:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2502:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2493:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2493:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2487:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2487:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2467:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2467:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2414:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2417:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2411:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2425:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2427:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2436:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2439:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2432:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2427:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2407:3:10",
																"statements": []
															},
															"src": "2403:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2550:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2600:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2605:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2596:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2596:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2614:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2589:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2589:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2531:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2534:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2528:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:13:10"
															},
															"nodeType": "YulIf",
															"src": "2525:101:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2356:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2361:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2366:6:10",
														"type": ""
													}
												],
												"src": "2325:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2748:267:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2758:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2805:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2772:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2762:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2820:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2904:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2909:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2827:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2951:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2958:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2965:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2970:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2925:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2986:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2997:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2993:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2729:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2736:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2744:3:10",
														"type": ""
													}
												],
												"src": "2638:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3157:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3145:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3161:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3119:6:10",
														"type": ""
													}
												],
												"src": "3021:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3358:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3368:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3452:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3375:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3558:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "3469:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3571:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3582:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3578:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3571:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3346:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3354:3:10",
														"type": ""
													}
												],
												"src": "3194:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3988:581:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3999:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4150:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4006:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4164:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4253:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4262:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4171:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4164:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4276:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4427:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4283:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4441:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4530:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4539:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4448:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4441:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4553:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4560:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4553:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3959:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3965:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3973:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3984:3:10",
														"type": ""
													}
												],
												"src": "3602:967:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4671:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4688:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4693:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4681:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4709:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4728:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4709:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4643:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4648:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4659:11:10",
														"type": ""
													}
												],
												"src": "4575:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4798:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4808:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4826:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4842:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4818:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4808:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4781:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4791:6:10",
														"type": ""
													}
												],
												"src": "4750:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4950:272:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4960:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5007:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4974:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4964:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5022:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5088:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5093:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5029:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5135:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5142:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5149:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5154:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5109:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5170:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5181:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5208:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5186:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5186:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4931:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4938:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4946:3:10",
														"type": ""
													}
												],
												"src": "4858:364:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5356:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5368:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5356:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5403:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5414:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5399:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5399:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5422:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5428:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5418:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5392:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5529:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5456:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5448:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5318:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5330:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5341:4:10",
														"type": ""
													}
												],
												"src": "5228:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5592:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5602:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5613:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5602:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5574:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5584:7:10",
														"type": ""
													}
												],
												"src": "5547:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5658:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5772:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5775:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5630:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5864:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5874:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5897:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5879:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5874:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5931:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5913:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5908:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6106:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6108:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6108:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6108:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6018:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6011:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6011:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6004:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6026:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6033:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6101:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6029:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6029:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6023:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6023:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6000:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:105:10"
															},
															"nodeType": "YulIf",
															"src": "5997:131:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6138:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6153:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6156:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6149:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6138:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5847:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5850:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5856:7:10",
														"type": ""
													}
												],
												"src": "5816:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6214:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6224:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6247:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6229:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6224:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6258:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6281:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6263:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6263:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6258:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6421:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6423:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6423:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6342:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:66:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6417:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6345:74:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6339:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:81:10"
															},
															"nodeType": "YulIf",
															"src": "6336:107:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6464:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6467:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6460:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6201:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6204:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6210:3:10",
														"type": ""
													}
												],
												"src": "6170:305:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6509:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6529:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6626:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6616:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6647:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6650:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6640:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6481:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6695:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6705:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6809:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6812:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6802:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6802:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6802:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6833:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6836:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6826:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6826:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6667:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6896:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6906:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6933:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6915:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6915:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6906:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6967:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6969:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6969:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6969:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6954:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6961:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6951:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:15:10"
															},
															"nodeType": "YulIf",
															"src": "6948:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6998:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7009:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6998:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6882:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6892:3:10",
														"type": ""
													}
												],
												"src": "6853:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7136:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7158:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7166:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7154:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7154:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7170:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7147:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7147:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7128:6:10",
														"type": ""
													}
												],
												"src": "7030:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7364:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7374:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7440:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7381:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7374:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7546:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "7457:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7457:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7559:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7570:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7566:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7559:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7360:3:10",
														"type": ""
													}
												],
												"src": "7218:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7761:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7771:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7783:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7794:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7779:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7771:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7818:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7837:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7843:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7833:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7833:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7807:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7807:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7863:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7997:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7871:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7863:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7741:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7756:4:10",
														"type": ""
													}
												],
												"src": "7590:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC721Enumerable_$579(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721Enumerable_$579(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721Enumerable_$579(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721Enumerable_$579_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721Enumerable_$579(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721Enumerable_$579_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721Enumerable_$579_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2056 CODESIZE SUB DUP1 PUSH3 0x2056 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x5E9 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0x53 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x64 DUP2 PUSH3 0x15C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x9FC JUMP JUMPDEST PUSH3 0x7D DUP3 DUP3 PUSH3 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x158 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xFD PUSH3 0x220 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH3 0x171 DUP2 PUSH3 0x228 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x249 DUP2 PUSH3 0x23D PUSH3 0x220 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x25E DUP3 DUP3 PUSH3 0x1B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x30C JUMPI PUSH3 0x291 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH3 0x310 PUSH1 0x20 SHL PUSH3 0x7CD OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2AC DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH3 0x310 PUSH1 0x20 SHL PUSH3 0x7CD OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2BF SWAP3 SWAP2 SWAP1 PUSH3 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x303 SWAP2 SWAP1 PUSH3 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH3 0x325 SWAP2 SWAP1 PUSH3 0x840 JUMP JUMPDEST PUSH3 0x331 SWAP2 SWAP1 PUSH3 0x8A1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x34D JUMPI PUSH3 0x34C PUSH3 0x8FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x380 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x3BB JUMPI PUSH3 0x3BA PUSH3 0x92D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x422 JUMPI PUSH3 0x421 PUSH3 0x92D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH3 0x464 SWAP2 SWAP1 PUSH3 0x840 JUMP JUMPDEST PUSH3 0x470 SWAP2 SWAP1 PUSH3 0x8A1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x51A JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH3 0x4B6 JUMPI PUSH3 0x4B5 PUSH3 0x92D JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x4D0 JUMPI PUSH3 0x4CF PUSH3 0x92D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH3 0x512 SWAP1 PUSH3 0x95C JUMP JUMPDEST SWAP1 POP PUSH3 0x473 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH3 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x558 SWAP1 PUSH3 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x59D DUP3 PUSH3 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B1 DUP3 PUSH3 0x590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C3 DUP2 PUSH3 0x5A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5E3 DUP2 PUSH3 0x5B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x602 JUMPI PUSH3 0x601 PUSH3 0x56B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x612 DUP5 DUP3 DUP6 ADD PUSH3 0x5D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x65E PUSH1 0x17 DUP4 PUSH3 0x61B JUMP JUMPDEST SWAP2 POP PUSH3 0x66B DUP3 PUSH3 0x626 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x6A1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x684 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x6B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6C4 DUP3 PUSH3 0x676 JUMP JUMPDEST PUSH3 0x6D0 DUP2 DUP6 PUSH3 0x61B JUMP JUMPDEST SWAP4 POP PUSH3 0x6E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x681 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x726 PUSH1 0x11 DUP4 PUSH3 0x61B JUMP JUMPDEST SWAP2 POP PUSH3 0x733 DUP3 PUSH3 0x6EE JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x74B DUP3 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP PUSH3 0x759 DUP3 DUP6 PUSH3 0x6B7 JUMP JUMPDEST SWAP2 POP PUSH3 0x766 DUP3 PUSH3 0x717 JUMP JUMPDEST SWAP2 POP PUSH3 0x774 DUP3 DUP5 PUSH3 0x6B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7AF DUP3 PUSH3 0x676 JUMP JUMPDEST PUSH3 0x7BB DUP2 DUP6 PUSH3 0x780 JUMP JUMPDEST SWAP4 POP PUSH3 0x7CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x681 JUMP JUMPDEST PUSH3 0x7D8 DUP2 PUSH3 0x791 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7FF DUP2 DUP5 PUSH3 0x7A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x84D DUP3 PUSH3 0x807 JUMP JUMPDEST SWAP2 POP PUSH3 0x85A DUP4 PUSH3 0x807 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x896 JUMPI PUSH3 0x895 PUSH3 0x811 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8AE DUP3 PUSH3 0x807 JUMP JUMPDEST SWAP2 POP PUSH3 0x8BB DUP4 PUSH3 0x807 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x8F3 JUMPI PUSH3 0x8F2 PUSH3 0x811 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x969 DUP3 PUSH3 0x807 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH3 0x97F JUMPI PUSH3 0x97E PUSH3 0x811 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C2 PUSH1 0x20 DUP4 PUSH3 0x780 JUMP JUMPDEST SWAP2 POP PUSH3 0x9CF DUP3 PUSH3 0x98A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x9F5 DUP2 PUSH3 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164A DUP1 PUSH3 0xA0C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x804F43CD GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6F5F014 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA6F5F014 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDD31A7BA EQ PUSH2 0x352 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x804F43CD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x94F4504D EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A8 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x28438F68 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x28438F68 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x61AEC205 EQ PUSH2 0x20D JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x27C25C20 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x55B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EE JUMPI POP PUSH2 0x3ED DUP3 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x447 DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x46E DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x477 DUP2 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x481 DUP4 DUP4 PUSH2 0xA87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x48E PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x505 DUP3 DUP3 PUSH2 0xB6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x516 DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x457 PUSH2 0x609 PUSH2 0x6E9 JUMP JUMPDEST LT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x78A DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x793 DUP2 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x79D DUP4 DUP4 PUSH2 0xB6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7AF DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0x1369 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x835 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9BB JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x1398 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x974 JUMPI PUSH2 0x973 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x9B4 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x91E JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F6 SWAP1 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA84 DUP2 PUSH2 0xA7F PUSH2 0xB67 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA91 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB08 PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF1 PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5A DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST PUSH2 0xCE9 JUMPI PUSH2 0xC7F DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0xC8D DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9E SWAP3 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP2 EQ PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP5 DUP3 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8C DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP2 EQ PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDD DUP2 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE07 DUP5 DUP3 DUP6 ADD PUSH2 0xDCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH2 0xE7A PUSH2 0xE75 DUP5 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xE64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF48 DUP2 PUSH2 0xF2D JUMP JUMPDEST DUP2 EQ PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF65 DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF90 DUP6 DUP3 DUP7 ADD PUSH2 0xDCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA1 DUP6 DUP3 DUP7 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB6 DUP3 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE3 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFF JUMPI PUSH2 0xFFE PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100D DUP5 DUP3 DUP6 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1029 DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1044 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 PUSH1 0x2F DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x10C2 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E6 DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1123 PUSH1 0x1F DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x112E DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1152 DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118F PUSH1 0x1B DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x119A DUP3 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11BE DUP2 PUSH2 0x1182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F76657220737570706C79000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0xB DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123A DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1257 DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH2 0x1272 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1281 DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP4 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x128A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131E DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP4 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x128A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D2 DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH1 0x20 DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x1431 DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1455 DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D PUSH1 0x17 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP3 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14DC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14C1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x1506 DUP2 DUP6 PUSH2 0x145C JUMP JUMPDEST SWAP4 POP PUSH2 0x1516 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1558 PUSH1 0x11 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1563 DUP3 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1585 DUP3 DUP6 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1590 DUP3 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x159C DUP3 DUP5 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C4 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x15CE DUP2 DUP6 PUSH2 0x104A JUMP JUMPDEST SWAP4 POP PUSH2 0x15DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x15E7 DUP2 PUSH2 0x15A8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160C DUP2 DUP5 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 ORIGIN PUSH26 0x679CC0F2BF631239DFC59DAF598485938F92520B424E9709B8CA 0x5F JUMPDEST CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "268:1260:9:-:0;;;448:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;;;;500:42:9;2072:4:0;511:18:9;;531:10;500;;;:42;;:::i;:::-;553:33;576:9;553:22;;;:33;;:::i;:::-;448:146;268:1260;;7244:233:0;7327:22;7335:4;7341:7;7327;;;:22;;:::i;:::-;7322:149;;7397:4;7365:6;:12;7372:4;7365:12;;;;;;;;;;;:20;;:29;7386:7;7365:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7447:12;:10;;;:12;;:::i;:::-;7420:40;;7438:7;7420:40;;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;602:167:9:-;2072:4:0;697:18:9;;2505:16:0;2516:4;2505:10;;;:16;;:::i;:::-;752:9:9::1;733:16;;:28;;;;;;;;;;;;;;;;;;602:167:::0;;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;;;:12;;:::i;:::-;3400:10;;;:30;;:::i;:::-;3334:103;:::o;3718:492::-;3806:22;3814:4;3820:7;3806;;;:22;;:::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;;;;;:41;;:::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;;;;;:38;;:::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;1588:441:6:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;:::i;:::-;;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:121::-;630:7;659:24;677:5;659:24;:::i;:::-;648:35;;568:121;;;:::o;695:172::-;793:49;836:5;793:49;:::i;:::-;786:5;783:60;773:88;;857:1;854;847:12;773:88;695:172;:::o;873:193::-;955:5;986:6;980:13;971:22;;1002:58;1054:5;1002:58;:::i;:::-;873:193;;;;:::o;1072:401::-;1167:6;1216:2;1204:9;1195:7;1191:23;1187:32;1184:119;;;1222:79;;:::i;:::-;1184:119;1342:1;1367:89;1448:7;1439:6;1428:9;1424:22;1367:89;:::i;:::-;1357:99;;1313:153;1072:401;;;;:::o;1479:148::-;1581:11;1618:3;1603:18;;1479:148;;;;:::o;1633:173::-;1773:25;1769:1;1761:6;1757:14;1750:49;1633:173;:::o;1812:402::-;1972:3;1993:85;2075:2;2070:3;1993:85;:::i;:::-;1986:92;;2087:93;2176:3;2087:93;:::i;:::-;2205:2;2200:3;2196:12;2189:19;;1812:402;;;:::o;2220:99::-;2272:6;2306:5;2300:12;2290:22;;2220:99;;;:::o;2325:307::-;2393:1;2403:113;2417:6;2414:1;2411:13;2403:113;;;2502:1;2497:3;2493:11;2487:18;2483:1;2478:3;2474:11;2467:39;2439:2;2436:1;2432:10;2427:15;;2403:113;;;2534:6;2531:1;2528:13;2525:101;;;2614:1;2605:6;2600:3;2596:16;2589:27;2525:101;2374:258;2325:307;;;:::o;2638:377::-;2744:3;2772:39;2805:5;2772:39;:::i;:::-;2827:89;2909:6;2904:3;2827:89;:::i;:::-;2820:96;;2925:52;2970:6;2965:3;2958:4;2951:5;2947:16;2925:52;:::i;:::-;3002:6;2997:3;2993:16;2986:23;;2748:267;2638:377;;;;:::o;3021:167::-;3161:19;3157:1;3149:6;3145:14;3138:43;3021:167;:::o;3194:402::-;3354:3;3375:85;3457:2;3452:3;3375:85;:::i;:::-;3368:92;;3469:93;3558:3;3469:93;:::i;:::-;3587:2;3582:3;3578:12;3571:19;;3194:402;;;:::o;3602:967::-;3984:3;4006:148;4150:3;4006:148;:::i;:::-;3999:155;;4171:95;4262:3;4253:6;4171:95;:::i;:::-;4164:102;;4283:148;4427:3;4283:148;:::i;:::-;4276:155;;4448:95;4539:3;4530:6;4448:95;:::i;:::-;4441:102;;4560:3;4553:10;;3602:967;;;;;:::o;4575:169::-;4659:11;4693:6;4688:3;4681:19;4733:4;4728:3;4724:14;4709:29;;4575:169;;;;:::o;4750:102::-;4791:6;4842:2;4838:7;4833:2;4826:5;4822:14;4818:28;4808:38;;4750:102;;;:::o;4858:364::-;4946:3;4974:39;5007:5;4974:39;:::i;:::-;5029:71;5093:6;5088:3;5029:71;:::i;:::-;5022:78;;5109:52;5154:6;5149:3;5142:4;5135:5;5131:16;5109:52;:::i;:::-;5186:29;5208:6;5186:29;:::i;:::-;5181:3;5177:39;5170:46;;4950:272;4858:364;;;;:::o;5228:313::-;5341:4;5379:2;5368:9;5364:18;5356:26;;5428:9;5422:4;5418:20;5414:1;5403:9;5399:17;5392:47;5456:78;5529:4;5520:6;5456:78;:::i;:::-;5448:86;;5228:313;;;;:::o;5547:77::-;5584:7;5613:5;5602:16;;5547:77;;;:::o;5630:180::-;5678:77;5675:1;5668:88;5775:4;5772:1;5765:15;5799:4;5796:1;5789:15;5816:348;5856:7;5879:20;5897:1;5879:20;:::i;:::-;5874:25;;5913:20;5931:1;5913:20;:::i;:::-;5908:25;;6101:1;6033:66;6029:74;6026:1;6023:81;6018:1;6011:9;6004:17;6000:105;5997:131;;;6108:18;;:::i;:::-;5997:131;6156:1;6153;6149:9;6138:20;;5816:348;;;;:::o;6170:305::-;6210:3;6229:20;6247:1;6229:20;:::i;:::-;6224:25;;6263:20;6281:1;6263:20;:::i;:::-;6258:25;;6417:1;6349:66;6345:74;6342:1;6339:81;6336:107;;;6423:18;;:::i;:::-;6336:107;6467:1;6464;6460:9;6453:16;;6170:305;;;;:::o;6481:180::-;6529:77;6526:1;6519:88;6626:4;6623:1;6616:15;6650:4;6647:1;6640:15;6667:180;6715:77;6712:1;6705:88;6812:4;6809:1;6802:15;6836:4;6833:1;6826:15;6853:171;6892:3;6915:24;6933:5;6915:24;:::i;:::-;6906:33;;6961:4;6954:5;6951:15;6948:41;;6969:18;;:::i;:::-;6948:41;7016:1;7009:5;7005:13;6998:20;;6853:171;;;:::o;7030:182::-;7170:34;7166:1;7158:6;7154:14;7147:58;7030:182;:::o;7218:366::-;7360:3;7381:67;7445:2;7440:3;7381:67;:::i;:::-;7374:74;;7457:93;7546:3;7457:93;:::i;:::-;7575:2;7570:3;7566:12;7559:19;;7218:366;;;:::o;7590:419::-;7756:4;7794:2;7783:9;7779:18;7771:26;;7843:9;7837:4;7833:20;7829:1;7818:9;7814:17;7807:47;7871:131;7997:4;7871:131;:::i;:::-;7863:139;;7590:419;;;:::o;268:1260:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1743,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 3152,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2675,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 2695,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_591": {
									"entryPoint": 2919,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_318": {
									"entryPoint": 2927,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeFreeMintOpen_913": {
									"entryPoint": 1082,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeNagaKidsContract_887": {
									"entryPoint": 1289,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeWhitelistMintOpen_900": {
									"entryPoint": 1954,
									"id": 900,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_150": {
									"entryPoint": 1013,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_944": {
									"entryPoint": 1769,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 1125,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1618,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isFreeMintOpen_854": {
									"entryPoint": 1750,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelistOpen_856": {
									"entryPoint": 1724,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nagaKidsContract_852": {
									"entryPoint": 1044,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_213": {
									"entryPoint": 1158,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 1921,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 891,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_827": {
									"entryPoint": 2569,
									"id": 827,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_803": {
									"entryPoint": 1997,
									"id": 803,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@whitelistMint_934": {
									"entryPoint": 1371,
									"id": 934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721Enumerable_$579_to_t_address_fromStack": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Enumerable_$579__to_t_address__fromStack_reversed": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721Enumerable_$579_to_t_address": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721Enumerable_$579": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17475:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:10",
														"type": ""
													}
												],
												"src": "1518:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:10"
															},
															"nodeType": "YulIf",
															"src": "1654:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:10",
														"type": ""
													}
												],
												"src": "1601:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:10",
														"type": ""
													}
												],
												"src": "1729:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:10"
															},
															"nodeType": "YulIf",
															"src": "1950:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:10",
														"type": ""
													}
												],
												"src": "1874:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:10",
														"type": ""
													}
												],
												"src": "2209:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:10",
														"type": ""
													}
												],
												"src": "2333:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:10",
														"type": ""
													}
												],
												"src": "2561:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2735:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2742:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2711:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2721:3:10",
														"type": ""
													}
												],
												"src": "2693:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2819:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2829:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2887:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2869:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2869:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2860:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2860:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2842:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2829:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2799:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2809:9:10",
														"type": ""
													}
												],
												"src": "2759:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3021:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2990:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2977:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2947:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2957:9:10",
														"type": ""
													}
												],
												"src": "2907:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3124:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3134:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3178:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3147:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3134:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721Enumerable_$579_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3104:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3114:9:10",
														"type": ""
													}
												],
												"src": "3039:151:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3286:91:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3303:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721Enumerable_$579_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3308:55:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:62:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:75:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3296:75:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721Enumerable_$579_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3274:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3281:3:10",
														"type": ""
													}
												],
												"src": "3196:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3516:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3528:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3539:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3524:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3516:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3621:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3634:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3645:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721Enumerable_$579_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3552:68:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3552:96:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3552:96:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Enumerable_$579__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3478:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3490:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3501:4:10",
														"type": ""
													}
												],
												"src": "3383:272:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3701:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3755:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3757:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3757:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3724:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3746:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3731:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3731:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3721:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3721:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:40:10"
															},
															"nodeType": "YulIf",
															"src": "3711:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3694:5:10",
														"type": ""
													}
												],
												"src": "3661:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3832:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3842:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3864:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3851:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3842:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3904:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3880:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3810:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3818:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3826:5:10",
														"type": ""
													}
												],
												"src": "3783:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3985:260:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4031:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4033:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4033:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4033:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4006:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3998:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:32:10"
															},
															"nodeType": "YulIf",
															"src": "3995:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:114:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4168:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4178:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4178:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4168:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3955:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3966:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3978:6:10",
														"type": ""
													}
												],
												"src": "3922:323:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4296:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4306:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4335:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4317:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4306:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4278:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4288:7:10",
														"type": ""
													}
												],
												"src": "4251:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4396:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4453:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4465:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4455:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4455:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4419:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4444:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4426:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4426:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4416:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:43:10"
															},
															"nodeType": "YulIf",
															"src": "4406:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4389:5:10",
														"type": ""
													}
												],
												"src": "4353:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4533:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4543:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4565:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4552:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4543:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4608:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4581:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4581:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4581:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4511:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4519:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4527:5:10",
														"type": ""
													}
												],
												"src": "4481:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4709:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4755:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4757:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4757:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4757:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4730:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4739:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4726:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:32:10"
															},
															"nodeType": "YulIf",
															"src": "4719:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4848:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4863:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4877:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4867:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4892:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4927:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4938:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4923:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4923:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4947:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4902:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4902:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4892:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4975:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4990:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5004:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4994:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5020:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5055:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5030:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4671:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4682:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4694:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4702:6:10",
														"type": ""
													}
												],
												"src": "4626:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5176:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5186:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5215:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5197:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5186:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5158:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5168:7:10",
														"type": ""
													}
												],
												"src": "5106:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5301:104:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5383:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5392:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5395:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5385:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5385:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5385:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5324:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5374:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721Enumerable_$579",
																					"nodeType": "YulIdentifier",
																					"src": "5331:42:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5331:49:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5321:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5321:60:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:68:10"
															},
															"nodeType": "YulIf",
															"src": "5311:88:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5294:5:10",
														"type": ""
													}
												],
												"src": "5233:172:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5488:112:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5498:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5507:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5498:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5588:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721Enumerable_$579",
																	"nodeType": "YulIdentifier",
																	"src": "5536:51:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5536:58:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5466:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5474:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5482:5:10",
														"type": ""
													}
												],
												"src": "5411:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5697:288:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5743:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5745:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5718:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5727:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5739:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:32:10"
															},
															"nodeType": "YulIf",
															"src": "5707:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5836:142:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5851:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5855:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5880:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5940:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5951:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5936:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5936:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5960:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721Enumerable_$579",
																			"nodeType": "YulIdentifier",
																			"src": "5890:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5880:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721Enumerable_$579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5667:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5678:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5690:6:10",
														"type": ""
													}
												],
												"src": "5606:379:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6036:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6046:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6057:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6046:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6018:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6028:7:10",
														"type": ""
													}
												],
												"src": "5991:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6139:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6179:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6161:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6161:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6149:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6127:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6134:3:10",
														"type": ""
													}
												],
												"src": "6074:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6296:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6306:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6318:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6314:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6306:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6399:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6410:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6395:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6342:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6342:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6268:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6280:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6291:4:10",
														"type": ""
													}
												],
												"src": "6198:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6522:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6539:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6544:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6532:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6532:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6560:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6584:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6560:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6494:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6499:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6510:11:10",
														"type": ""
													}
												],
												"src": "6426:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6707:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6729:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6737:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6725:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6741:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6718:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6718:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6718:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6797:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6805:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6793:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6810:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6699:6:10",
														"type": ""
													}
												],
												"src": "6601:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6987:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6997:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7063:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7068:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7004:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7169:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "7080:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7080:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7080:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7182:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7193:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7198:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7189:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7189:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6975:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6983:3:10",
														"type": ""
													}
												],
												"src": "6841:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7384:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7394:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7406:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7402:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7402:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7394:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7441:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7452:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7437:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7437:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7460:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7466:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7456:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7456:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7430:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7486:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7620:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7494:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7494:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7486:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7364:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7379:4:10",
														"type": ""
													}
												],
												"src": "7213:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7744:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7766:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7774:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7762:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7778:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7736:6:10",
														"type": ""
													}
												],
												"src": "7638:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7971:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7981:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8047:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8052:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7988:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7988:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8153:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "8064:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8064:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8166:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8177:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8182:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8173:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7959:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7967:3:10",
														"type": ""
													}
												],
												"src": "7825:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8368:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8378:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8390:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8401:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8386:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8378:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8436:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8421:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8444:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8450:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8470:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8604:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8478:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8478:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8470:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8348:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8363:4:10",
														"type": ""
													}
												],
												"src": "8197:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8728:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8750:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8758:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8746:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8746:14:10"
																	},
																	{
																		"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8762:29:10",
																		"type": "",
																		"value": "Whitelist not open to mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8739:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8739:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8720:6:10",
														"type": ""
													}
												],
												"src": "8622:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8951:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8961:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9027:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9032:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8968:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8961:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9133:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																	"nodeType": "YulIdentifier",
																	"src": "9044:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9146:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9157:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9162:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9146:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8939:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8947:3:10",
														"type": ""
													}
												],
												"src": "8805:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9348:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9358:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9370:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9381:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9366:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9366:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9358:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9405:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9416:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9401:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9424:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9394:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9450:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9584:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9458:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9458:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9450:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9328:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9343:4:10",
														"type": ""
													}
												],
												"src": "9177:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9708:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9730:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9726:14:10"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9742:13:10",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9700:6:10",
														"type": ""
													}
												],
												"src": "9602:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9915:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9925:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9991:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9932:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10097:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																	"nodeType": "YulIdentifier",
																	"src": "10008:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10110:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10121:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10110:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9903:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9911:3:10",
														"type": ""
													}
												],
												"src": "9769:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10312:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10380:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10365:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10388:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10394:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10384:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10358:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10358:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10414:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10548:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10422:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10422:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10414:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10292:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10307:4:10",
														"type": ""
													}
												],
												"src": "10141:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10609:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10666:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10675:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10678:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10668:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10668:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10668:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10632:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10657:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10639:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10639:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10629:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10629:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10622:43:10"
															},
															"nodeType": "YulIf",
															"src": "10619:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10602:5:10",
														"type": ""
													}
												],
												"src": "10566:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10757:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10767:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10782:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10776:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10776:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10767:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10798:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10798:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10798:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10735:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10743:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10751:5:10",
														"type": ""
													}
												],
												"src": "10694:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10920:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10966:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10968:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10968:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10968:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10941:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10950:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10937:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10962:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10933:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:32:10"
															},
															"nodeType": "YulIf",
															"src": "10930:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "11059:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11074:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11088:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11078:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11103:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11149:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11160:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11145:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11145:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11169:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11113:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11113:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11103:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10890:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10901:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10913:6:10",
														"type": ""
													}
												],
												"src": "10843:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11228:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11245:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11248:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11238:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11238:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11342:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11345:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11335:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11335:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11366:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11369:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11359:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11359:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11359:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11200:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11434:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11444:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11467:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11449:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11444:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11478:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11501:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11483:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11478:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11676:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11678:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11678:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11678:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11588:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11581:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11581:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11574:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11574:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11596:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11603:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11671:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11599:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11599:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11593:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11593:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:105:10"
															},
															"nodeType": "YulIf",
															"src": "11567:131:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11708:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11723:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11726:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11719:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11708:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11417:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11420:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11426:7:10",
														"type": ""
													}
												],
												"src": "11386:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11784:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11794:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11817:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11799:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11794:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11851:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11833:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11833:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11828:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11991:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11912:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11919:66:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11987:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11915:74:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11909:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11909:81:10"
															},
															"nodeType": "YulIf",
															"src": "11906:107:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12023:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12037:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12030:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12023:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11771:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11774:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11780:3:10",
														"type": ""
													}
												],
												"src": "11740:305:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12079:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12096:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12099:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12089:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12089:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12089:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12193:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12196:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12186:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12217:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12220:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12210:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12210:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12210:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12051:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12265:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12282:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12285:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12275:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12275:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12275:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12379:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12382:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12372:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12372:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12406:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12396:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12396:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12237:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12466:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12476:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12503:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12485:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12485:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12476:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12537:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12539:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12539:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12539:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12524:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12531:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12521:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12521:15:10"
															},
															"nodeType": "YulIf",
															"src": "12518:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12568:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12579:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12586:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12568:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12452:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12462:3:10",
														"type": ""
													}
												],
												"src": "12423:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12706:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12728:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12736:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12724:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12724:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12740:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12717:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12717:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12698:6:10",
														"type": ""
													}
												],
												"src": "12600:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12934:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12944:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13010:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13015:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12951:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12951:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12944:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13116:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "13027:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13027:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13129:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13140:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13136:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13129:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12922:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12930:3:10",
														"type": ""
													}
												],
												"src": "12788:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13331:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13341:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13353:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13364:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13349:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13349:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13341:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13388:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13399:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13384:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13407:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13413:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13403:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13403:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13377:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13377:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13433:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13567:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13441:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13441:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13433:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13311:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13326:4:10",
														"type": ""
													}
												],
												"src": "13160:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13699:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13709:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13724:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13709:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13671:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13676:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13687:11:10",
														"type": ""
													}
												],
												"src": "13585:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13845:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13867:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13875:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13863:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13863:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13879:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13856:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13856:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13837:6:10",
														"type": ""
													}
												],
												"src": "13739:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14082:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14092:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14176:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14181:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14099:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14099:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14092:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14282:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "14193:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14193:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14295:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14306:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14311:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14302:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14302:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14295:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14070:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14078:3:10",
														"type": ""
													}
												],
												"src": "13918:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14385:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14396:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14412:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14406:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14406:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14396:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14368:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14378:6:10",
														"type": ""
													}
												],
												"src": "14326:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14480:258:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14490:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14499:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14494:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14559:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14584:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14589:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14580:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14580:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14603:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14608:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14599:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14599:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14593:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14593:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14573:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14573:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14573:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14520:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14523:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14517:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14531:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14533:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14542:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14545:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14538:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14538:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14533:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14513:3:10",
																"statements": []
															},
															"src": "14509:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14656:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14706:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14711:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14702:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14702:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14720:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14695:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14695:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14695:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14637:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14640:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14634:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14634:13:10"
															},
															"nodeType": "YulIf",
															"src": "14631:101:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14462:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14467:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14472:6:10",
														"type": ""
													}
												],
												"src": "14431:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14854:267:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14864:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14911:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14878:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14878:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14868:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14926:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15010:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15015:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14933:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14933:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14926:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15057:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15064:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15053:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15053:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15071:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15076:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15031:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15031:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15031:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15092:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15103:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15108:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15099:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15099:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15092:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14835:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14842:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14850:3:10",
														"type": ""
													}
												],
												"src": "14744:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15233:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15255:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15263:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15251:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15267:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15244:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15244:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15244:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15225:6:10",
														"type": ""
													}
												],
												"src": "15127:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15464:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15474:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15558:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15563:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15481:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15481:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15474:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15664:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "15575:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15575:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15575:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15677:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15688:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15693:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15684:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15684:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15677:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15452:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15460:3:10",
														"type": ""
													}
												],
												"src": "15300:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16094:581:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16105:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16256:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16112:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16112:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16105:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16270:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16359:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16368:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16277:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16277:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16270:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16382:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16533:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16389:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16389:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16382:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16547:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16636:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16645:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16554:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16554:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16547:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16659:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16666:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16659:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16065:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16071:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16079:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16090:3:10",
														"type": ""
													}
												],
												"src": "15708:967:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16729:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16739:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16757:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16764:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16753:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16753:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16773:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16769:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16749:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16749:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16739:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16712:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16722:6:10",
														"type": ""
													}
												],
												"src": "16681:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16881:272:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16891:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16938:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16905:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16905:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16895:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16953:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17019:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17024:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16960:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16960:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16953:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17066:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17073:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17062:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17062:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17080:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17085:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "17040:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17040:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17040:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17101:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17112:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17139:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "17117:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17117:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17108:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17101:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16862:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16869:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16877:3:10",
														"type": ""
													}
												],
												"src": "16789:364:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17277:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17287:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17299:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17310:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17295:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17287:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17334:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17345:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17330:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17353:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17359:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17349:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17349:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17323:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17323:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17379:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17451:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17460:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17387:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17387:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17379:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17249:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17261:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17272:4:10",
														"type": ""
													}
												],
												"src": "17159:313:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721Enumerable_$579_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721Enumerable_$579_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721Enumerable_$579_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721Enumerable_$579__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721Enumerable_$579_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC721Enumerable_$579(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721Enumerable_$579(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721Enumerable_$579(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721Enumerable_$579(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721Enumerable_$579(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721Enumerable_$579(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721Enumerable_$579(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Whitelist not open to mint.\")\n\n    }\n\n    function abi_encode_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Over supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c8063804f43cd1161008a578063a6f5f01411610059578063a6f5f014146102d3578063c4e41b22146102fe578063d547741f14610329578063dd31a7ba14610352576100e8565b8063804f43cd1461023657806391d148541461024057806394f4504d1461027d578063a217fddf146102a8576100e8565b806328438f68116100c657806328438f68146101925780632f2ff15d146101bb57806336568abe146101e457806361aec2051461020d576100e8565b806301ffc9a7146100ed578063248a9ca31461012a57806327c25c2014610167575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d4a565b61037b565b6040516101219190610d92565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610de3565b6103f5565b60405161015e9190610e1f565b60405180910390f35b34801561017357600080fd5b5061017c610414565b6040516101899190610eb9565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b49190610f00565b61043a565b005b3480156101c757600080fd5b506101e260048036038101906101dd9190610f6b565b610465565b005b3480156101f057600080fd5b5061020b60048036038101906102069190610f6b565b610486565b005b34801561021957600080fd5b50610234600480360381019061022f9190610fe9565b610509565b005b61023e61055b565b005b34801561024c57600080fd5b5061026760048036038101906102629190610f6b565b610652565b6040516102749190610d92565b60405180910390f35b34801561028957600080fd5b506102926106bc565b60405161029f9190610d92565b60405180910390f35b3480156102b457600080fd5b506102bd6106cf565b6040516102ca9190610e1f565b60405180910390f35b3480156102df57600080fd5b506102e86106d6565b6040516102f59190610d92565b60405180910390f35b34801561030a57600080fd5b506103136106e9565b604051610320919061102f565b60405180910390f35b34801561033557600080fd5b50610350600480360381019061034b9190610f6b565b610781565b005b34801561035e57600080fd5b5061037960048036038101906103749190610f00565b6107a2565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ee57506103ed82610a09565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000801b61044781610a73565b81600260146101000a81548160ff0219169083151502179055505050565b61046e826103f5565b61047781610a73565b6104818383610a87565b505050565b61048e610b67565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f2906110cd565b60405180910390fd5b6105058282610b6f565b5050565b6000801b61051681610a73565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6002600154036105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611139565b60405180910390fd5b600260018190555060011515600260159054906101000a900460ff161515146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f5906111a5565b60405180910390fd5b6104576106096106e9565b10610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064090611211565b60405180910390fd5b60018081905550565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600260159054906101000a900460ff1681565b6000801b81565b600260149054906101000a900460ff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c919061125d565b905090565b61078a826103f5565b61079381610a73565b61079d8383610b6f565b505050565b6000801b6107af81610a73565b81600260156101000a81548160ff0219169083151502179055505050565b6060600060028360026107e091906112b9565b6107ea9190611313565b67ffffffffffffffff81111561080357610802611369565b5b6040519080825280601f01601f1916602001820160405280156108355781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061086d5761086c611398565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106108d1576108d0611398565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261091191906112b9565b61091b9190611313565b90505b60018111156109bb577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061095d5761095c611398565b5b1a60f81b82828151811061097457610973611398565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806109b4906113c7565b905061091e565b50600084146109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f69061143c565b60405180910390fd5b8091505092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a8481610a7f610b67565b610c50565b50565b610a918282610652565b610b6357600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610b08610b67565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610b798282610652565b15610c4c57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610bf1610b67565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b610c5a8282610652565b610ce957610c7f8173ffffffffffffffffffffffffffffffffffffffff1660146107cd565b610c8d8360001c60206107cd565b604051602001610c9e92919061156e565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce091906115f2565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d2781610cf2565b8114610d3257600080fd5b50565b600081359050610d4481610d1e565b92915050565b600060208284031215610d6057610d5f610ced565b5b6000610d6e84828501610d35565b91505092915050565b60008115159050919050565b610d8c81610d77565b82525050565b6000602082019050610da76000830184610d83565b92915050565b6000819050919050565b610dc081610dad565b8114610dcb57600080fd5b50565b600081359050610ddd81610db7565b92915050565b600060208284031215610df957610df8610ced565b5b6000610e0784828501610dce565b91505092915050565b610e1981610dad565b82525050565b6000602082019050610e346000830184610e10565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e7f610e7a610e7584610e3a565b610e5a565b610e3a565b9050919050565b6000610e9182610e64565b9050919050565b6000610ea382610e86565b9050919050565b610eb381610e98565b82525050565b6000602082019050610ece6000830184610eaa565b92915050565b610edd81610d77565b8114610ee857600080fd5b50565b600081359050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610ced565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610e3a565b9050919050565b610f4881610f2d565b8114610f5357600080fd5b50565b600081359050610f6581610f3f565b92915050565b60008060408385031215610f8257610f81610ced565b5b6000610f9085828601610dce565b9250506020610fa185828601610f56565b9150509250929050565b6000610fb682610f2d565b9050919050565b610fc681610fab565b8114610fd157600080fd5b50565b600081359050610fe381610fbd565b92915050565b600060208284031215610fff57610ffe610ced565b5b600061100d84828501610fd4565b91505092915050565b6000819050919050565b61102981611016565b82525050565b60006020820190506110446000830184611020565b92915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006110b7602f8361104a565b91506110c28261105b565b604082019050919050565b600060208201905081810360008301526110e6816110aa565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611123601f8361104a565b915061112e826110ed565b602082019050919050565b6000602082019050818103600083015261115281611116565b9050919050565b7f57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000600082015250565b600061118f601b8361104a565b915061119a82611159565b602082019050919050565b600060208201905081810360008301526111be81611182565b9050919050565b7f4f76657220737570706c79000000000000000000000000000000000000000000600082015250565b60006111fb600b8361104a565b9150611206826111c5565b602082019050919050565b6000602082019050818103600083015261122a816111ee565b9050919050565b61123a81611016565b811461124557600080fd5b50565b60008151905061125781611231565b92915050565b60006020828403121561127357611272610ced565b5b600061128184828501611248565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112c482611016565b91506112cf83611016565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113085761130761128a565b5b828202905092915050565b600061131e82611016565b915061132983611016565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561135e5761135d61128a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113d282611016565b9150600082036113e5576113e461128a565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061142660208361104a565b9150611431826113f0565b602082019050919050565b6000602082019050818103600083015261145581611419565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061149d60178361145c565b91506114a882611467565b601782019050919050565b600081519050919050565b60005b838110156114dc5780820151818401526020810190506114c1565b838111156114eb576000848401525b50505050565b60006114fc826114b3565b611506818561145c565b93506115168185602086016114be565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061155860118361145c565b915061156382611522565b601182019050919050565b600061157982611490565b915061158582856114f1565b91506115908261154b565b915061159c82846114f1565b91508190509392505050565b6000601f19601f8301169050919050565b60006115c4826114b3565b6115ce818561104a565b93506115de8185602086016114be565b6115e7816115a8565b840191505092915050565b6000602082019050818103600083015261160c81846115b9565b90509291505056fea2646970667358221220d93279679cc0f2bf631239dfc59daf598485938f92520b424e9709b8ca5f5b3964736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x804F43CD GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6F5F014 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA6F5F014 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDD31A7BA EQ PUSH2 0x352 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x804F43CD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x94F4504D EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A8 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x28438F68 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x28438F68 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x61AEC205 EQ PUSH2 0x20D JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x27C25C20 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x55B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x7A2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EE JUMPI POP PUSH2 0x3ED DUP3 PUSH2 0xA09 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x447 DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x46E DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x477 DUP2 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x481 DUP4 DUP4 PUSH2 0xA87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x48E PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x505 DUP3 DUP3 PUSH2 0xB6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x516 DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP1 PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x457 PUSH2 0x609 PUSH2 0x6E9 JUMP JUMPDEST LT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x78A DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x793 DUP2 PUSH2 0xA73 JUMP JUMPDEST PUSH2 0x79D DUP4 DUP4 PUSH2 0xB6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7AF DUP2 PUSH2 0xA73 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x803 JUMPI PUSH2 0x802 PUSH2 0x1369 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x835 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x911 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1313 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9BB JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x1398 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x974 JUMPI PUSH2 0x973 PUSH2 0x1398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x9B4 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x91E JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F6 SWAP1 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA84 DUP2 PUSH2 0xA7F PUSH2 0xB67 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA91 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB08 PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB79 DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF1 PUSH2 0xB67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5A DUP3 DUP3 PUSH2 0x652 JUMP JUMPDEST PUSH2 0xCE9 JUMPI PUSH2 0xC7F DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0xC8D DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC9E SWAP3 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD27 DUP2 PUSH2 0xCF2 JUMP JUMPDEST DUP2 EQ PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0xD1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP5 DUP3 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8C DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP2 EQ PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDD DUP2 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE07 DUP5 DUP3 DUP6 ADD PUSH2 0xDCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH2 0xE7A PUSH2 0xE75 DUP5 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE91 DUP3 PUSH2 0xE64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xE3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF48 DUP2 PUSH2 0xF2D JUMP JUMPDEST DUP2 EQ PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF65 DUP2 PUSH2 0xF3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF90 DUP6 DUP3 DUP7 ADD PUSH2 0xDCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFA1 DUP6 DUP3 DUP7 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB6 DUP3 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0xFAB JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE3 DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFF JUMPI PUSH2 0xFFE PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100D DUP5 DUP3 DUP6 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1029 DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1044 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 PUSH1 0x2F DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x10C2 DUP3 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E6 DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1123 PUSH1 0x1F DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x112E DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1152 DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118F PUSH1 0x1B DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x119A DUP3 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11BE DUP2 PUSH2 0x1182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F76657220737570706C79000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0xB DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122A DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123A DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1257 DUP2 PUSH2 0x1231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1273 JUMPI PUSH2 0x1272 PUSH2 0xCED JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1281 DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CF DUP4 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x128A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x131E DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP4 PUSH2 0x1016 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x128A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D2 DUP3 PUSH2 0x1016 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x13E5 JUMPI PUSH2 0x13E4 PUSH2 0x128A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1426 PUSH1 0x20 DUP4 PUSH2 0x104A JUMP JUMPDEST SWAP2 POP PUSH2 0x1431 DUP3 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1455 DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D PUSH1 0x17 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x14A8 DUP3 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14DC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14C1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14EB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x1506 DUP2 DUP6 PUSH2 0x145C JUMP JUMPDEST SWAP4 POP PUSH2 0x1516 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1558 PUSH1 0x11 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1563 DUP3 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x1490 JUMP JUMPDEST SWAP2 POP PUSH2 0x1585 DUP3 DUP6 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1590 DUP3 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x159C DUP3 DUP5 PUSH2 0x14F1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C4 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x15CE DUP2 DUP6 PUSH2 0x104A JUMP JUMPDEST SWAP4 POP PUSH2 0x15DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x15E7 DUP2 PUSH2 0x15A8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160C DUP2 DUP5 PUSH2 0x15B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 ORIGIN PUSH26 0x679CC0F2BF631239DFC59DAF598485938F92520B424E9709B8CA 0x5F JUMPDEST CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "268:1260:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4391:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:41:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4770:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5787:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;602:167:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1087:193;;;:::i;:::-;;2895:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:27:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;379:26:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1288:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5149:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;777:150:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202:0;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4391:129::-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;331:41:9:-;;;;;;;;;;;;;:::o;935:144::-;2072:4:0;1011:18:9;;2505:16:0;2516:4;2505:10;:16::i;:::-;1064:7:9::1;1047:14;;:24;;;;;;;;;;;;;;;;;;935:144:::0;;:::o;4770:145:0:-;4853:18;4866:4;4853:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;5787:214::-;5893:12;:10;:12::i;:::-;5882:23;;:7;:23;;;5874:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;602:167:9:-;2072:4:0;697:18:9;;2505:16:0;2516:4;2505:10;:16::i;:::-;752:9:9::1;733:16;;:28;;;;;;;;;;;;;;;;;;602:167:::0;;:::o;1087:193::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1178:4:9::1;1159:23;;:15;;;;;;;;;;;:23;;;1151:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1252:4;1233:16;:14;:16::i;:::-;:23;1225:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1701:1:2::0;2628:7;:22;;;;1087:193:9:o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;412:27:9:-;;;;;;;;;;;;;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;379:26:9:-;;;;;;;;;;;;;:::o;1288:112::-;1335:7;1362:16;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1355:37;;1288:112;:::o;5149:147:0:-;5233:18;5246:4;5233:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;:::-;5149:147:::0;;;:::o;777:150:9:-;2072:4:0;858:18:9;;2505:16:0;2516:4;2505:10;:16::i;:::-;912:7:9::1;894:15;;:25;;;;;;;;;;;;;;;;;;777:150:::0;;:::o;1588:441:6:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;:::i;:::-;;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7397:4;7365:6;:12;7372:4;7365:12;;;;;;;;;;;:20;;:29;7386:7;7365:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7447:12;:10;:12::i;:::-;7420:40;;7438:7;7420:40;;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7602:234:0:-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:6;:12;7730:4;7723:12;;;;;;;;;;;:20;;:29;7744:7;7723:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7806:12;:10;:12::i;:::-;7779:40;;7797:7;7779:40;;7791:4;7779:40;;;;;;;;;;7681:149;7602:234;;:::o;3718:492::-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;88:117:10:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:60::-;2721:3;2742:5;2735:12;;2693:60;;;:::o;2759:142::-;2809:9;2842:53;2860:34;2869:24;2887:5;2869:24;:::i;:::-;2860:34;:::i;:::-;2842:53;:::i;:::-;2829:66;;2759:142;;;:::o;2907:126::-;2957:9;2990:37;3021:5;2990:37;:::i;:::-;2977:50;;2907:126;;;:::o;3039:151::-;3114:9;3147:37;3178:5;3147:37;:::i;:::-;3134:50;;3039:151;;;:::o;3196:181::-;3308:62;3364:5;3308:62;:::i;:::-;3303:3;3296:75;3196:181;;:::o;3383:272::-;3501:4;3539:2;3528:9;3524:18;3516:26;;3552:96;3645:1;3634:9;3630:17;3621:6;3552:96;:::i;:::-;3383:272;;;;:::o;3661:116::-;3731:21;3746:5;3731:21;:::i;:::-;3724:5;3721:32;3711:60;;3767:1;3764;3757:12;3711:60;3661:116;:::o;3783:133::-;3826:5;3864:6;3851:20;3842:29;;3880:30;3904:5;3880:30;:::i;:::-;3783:133;;;;:::o;3922:323::-;3978:6;4027:2;4015:9;4006:7;4002:23;3998:32;3995:119;;;4033:79;;:::i;:::-;3995:119;4153:1;4178:50;4220:7;4211:6;4200:9;4196:22;4178:50;:::i;:::-;4168:60;;4124:114;3922:323;;;;:::o;4251:96::-;4288:7;4317:24;4335:5;4317:24;:::i;:::-;4306:35;;4251:96;;;:::o;4353:122::-;4426:24;4444:5;4426:24;:::i;:::-;4419:5;4416:35;4406:63;;4465:1;4462;4455:12;4406:63;4353:122;:::o;4481:139::-;4527:5;4565:6;4552:20;4543:29;;4581:33;4608:5;4581:33;:::i;:::-;4481:139;;;;:::o;4626:474::-;4694:6;4702;4751:2;4739:9;4730:7;4726:23;4722:32;4719:119;;;4757:79;;:::i;:::-;4719:119;4877:1;4902:53;4947:7;4938:6;4927:9;4923:22;4902:53;:::i;:::-;4892:63;;4848:117;5004:2;5030:53;5075:7;5066:6;5055:9;5051:22;5030:53;:::i;:::-;5020:63;;4975:118;4626:474;;;;;:::o;5106:121::-;5168:7;5197:24;5215:5;5197:24;:::i;:::-;5186:35;;5106:121;;;:::o;5233:172::-;5331:49;5374:5;5331:49;:::i;:::-;5324:5;5321:60;5311:88;;5395:1;5392;5385:12;5311:88;5233:172;:::o;5411:189::-;5482:5;5520:6;5507:20;5498:29;;5536:58;5588:5;5536:58;:::i;:::-;5411:189;;;;:::o;5606:379::-;5690:6;5739:2;5727:9;5718:7;5714:23;5710:32;5707:119;;;5745:79;;:::i;:::-;5707:119;5865:1;5890:78;5960:7;5951:6;5940:9;5936:22;5890:78;:::i;:::-;5880:88;;5836:142;5606:379;;;;:::o;5991:77::-;6028:7;6057:5;6046:16;;5991:77;;;:::o;6074:118::-;6161:24;6179:5;6161:24;:::i;:::-;6156:3;6149:37;6074:118;;:::o;6198:222::-;6291:4;6329:2;6318:9;6314:18;6306:26;;6342:71;6410:1;6399:9;6395:17;6386:6;6342:71;:::i;:::-;6198:222;;;;:::o;6426:169::-;6510:11;6544:6;6539:3;6532:19;6584:4;6579:3;6575:14;6560:29;;6426:169;;;;:::o;6601:234::-;6741:34;6737:1;6729:6;6725:14;6718:58;6810:17;6805:2;6797:6;6793:15;6786:42;6601:234;:::o;6841:366::-;6983:3;7004:67;7068:2;7063:3;7004:67;:::i;:::-;6997:74;;7080:93;7169:3;7080:93;:::i;:::-;7198:2;7193:3;7189:12;7182:19;;6841:366;;;:::o;7213:419::-;7379:4;7417:2;7406:9;7402:18;7394:26;;7466:9;7460:4;7456:20;7452:1;7441:9;7437:17;7430:47;7494:131;7620:4;7494:131;:::i;:::-;7486:139;;7213:419;;;:::o;7638:181::-;7778:33;7774:1;7766:6;7762:14;7755:57;7638:181;:::o;7825:366::-;7967:3;7988:67;8052:2;8047:3;7988:67;:::i;:::-;7981:74;;8064:93;8153:3;8064:93;:::i;:::-;8182:2;8177:3;8173:12;8166:19;;7825:366;;;:::o;8197:419::-;8363:4;8401:2;8390:9;8386:18;8378:26;;8450:9;8444:4;8440:20;8436:1;8425:9;8421:17;8414:47;8478:131;8604:4;8478:131;:::i;:::-;8470:139;;8197:419;;;:::o;8622:177::-;8762:29;8758:1;8750:6;8746:14;8739:53;8622:177;:::o;8805:366::-;8947:3;8968:67;9032:2;9027:3;8968:67;:::i;:::-;8961:74;;9044:93;9133:3;9044:93;:::i;:::-;9162:2;9157:3;9153:12;9146:19;;8805:366;;;:::o;9177:419::-;9343:4;9381:2;9370:9;9366:18;9358:26;;9430:9;9424:4;9420:20;9416:1;9405:9;9401:17;9394:47;9458:131;9584:4;9458:131;:::i;:::-;9450:139;;9177:419;;;:::o;9602:161::-;9742:13;9738:1;9730:6;9726:14;9719:37;9602:161;:::o;9769:366::-;9911:3;9932:67;9996:2;9991:3;9932:67;:::i;:::-;9925:74;;10008:93;10097:3;10008:93;:::i;:::-;10126:2;10121:3;10117:12;10110:19;;9769:366;;;:::o;10141:419::-;10307:4;10345:2;10334:9;10330:18;10322:26;;10394:9;10388:4;10384:20;10380:1;10369:9;10365:17;10358:47;10422:131;10548:4;10422:131;:::i;:::-;10414:139;;10141:419;;;:::o;10566:122::-;10639:24;10657:5;10639:24;:::i;:::-;10632:5;10629:35;10619:63;;10678:1;10675;10668:12;10619:63;10566:122;:::o;10694:143::-;10751:5;10782:6;10776:13;10767:22;;10798:33;10825:5;10798:33;:::i;:::-;10694:143;;;;:::o;10843:351::-;10913:6;10962:2;10950:9;10941:7;10937:23;10933:32;10930:119;;;10968:79;;:::i;:::-;10930:119;11088:1;11113:64;11169:7;11160:6;11149:9;11145:22;11113:64;:::i;:::-;11103:74;;11059:128;10843:351;;;;:::o;11200:180::-;11248:77;11245:1;11238:88;11345:4;11342:1;11335:15;11369:4;11366:1;11359:15;11386:348;11426:7;11449:20;11467:1;11449:20;:::i;:::-;11444:25;;11483:20;11501:1;11483:20;:::i;:::-;11478:25;;11671:1;11603:66;11599:74;11596:1;11593:81;11588:1;11581:9;11574:17;11570:105;11567:131;;;11678:18;;:::i;:::-;11567:131;11726:1;11723;11719:9;11708:20;;11386:348;;;;:::o;11740:305::-;11780:3;11799:20;11817:1;11799:20;:::i;:::-;11794:25;;11833:20;11851:1;11833:20;:::i;:::-;11828:25;;11987:1;11919:66;11915:74;11912:1;11909:81;11906:107;;;11993:18;;:::i;:::-;11906:107;12037:1;12034;12030:9;12023:16;;11740:305;;;;:::o;12051:180::-;12099:77;12096:1;12089:88;12196:4;12193:1;12186:15;12220:4;12217:1;12210:15;12237:180;12285:77;12282:1;12275:88;12382:4;12379:1;12372:15;12406:4;12403:1;12396:15;12423:171;12462:3;12485:24;12503:5;12485:24;:::i;:::-;12476:33;;12531:4;12524:5;12521:15;12518:41;;12539:18;;:::i;:::-;12518:41;12586:1;12579:5;12575:13;12568:20;;12423:171;;;:::o;12600:182::-;12740:34;12736:1;12728:6;12724:14;12717:58;12600:182;:::o;12788:366::-;12930:3;12951:67;13015:2;13010:3;12951:67;:::i;:::-;12944:74;;13027:93;13116:3;13027:93;:::i;:::-;13145:2;13140:3;13136:12;13129:19;;12788:366;;;:::o;13160:419::-;13326:4;13364:2;13353:9;13349:18;13341:26;;13413:9;13407:4;13403:20;13399:1;13388:9;13384:17;13377:47;13441:131;13567:4;13441:131;:::i;:::-;13433:139;;13160:419;;;:::o;13585:148::-;13687:11;13724:3;13709:18;;13585:148;;;;:::o;13739:173::-;13879:25;13875:1;13867:6;13863:14;13856:49;13739:173;:::o;13918:402::-;14078:3;14099:85;14181:2;14176:3;14099:85;:::i;:::-;14092:92;;14193:93;14282:3;14193:93;:::i;:::-;14311:2;14306:3;14302:12;14295:19;;13918:402;;;:::o;14326:99::-;14378:6;14412:5;14406:12;14396:22;;14326:99;;;:::o;14431:307::-;14499:1;14509:113;14523:6;14520:1;14517:13;14509:113;;;14608:1;14603:3;14599:11;14593:18;14589:1;14584:3;14580:11;14573:39;14545:2;14542:1;14538:10;14533:15;;14509:113;;;14640:6;14637:1;14634:13;14631:101;;;14720:1;14711:6;14706:3;14702:16;14695:27;14631:101;14480:258;14431:307;;;:::o;14744:377::-;14850:3;14878:39;14911:5;14878:39;:::i;:::-;14933:89;15015:6;15010:3;14933:89;:::i;:::-;14926:96;;15031:52;15076:6;15071:3;15064:4;15057:5;15053:16;15031:52;:::i;:::-;15108:6;15103:3;15099:16;15092:23;;14854:267;14744:377;;;;:::o;15127:167::-;15267:19;15263:1;15255:6;15251:14;15244:43;15127:167;:::o;15300:402::-;15460:3;15481:85;15563:2;15558:3;15481:85;:::i;:::-;15474:92;;15575:93;15664:3;15575:93;:::i;:::-;15693:2;15688:3;15684:12;15677:19;;15300:402;;;:::o;15708:967::-;16090:3;16112:148;16256:3;16112:148;:::i;:::-;16105:155;;16277:95;16368:3;16359:6;16277:95;:::i;:::-;16270:102;;16389:148;16533:3;16389:148;:::i;:::-;16382:155;;16554:95;16645:3;16636:6;16554:95;:::i;:::-;16547:102;;16666:3;16659:10;;15708:967;;;;;:::o;16681:102::-;16722:6;16773:2;16769:7;16764:2;16757:5;16753:14;16749:28;16739:38;;16681:102;;;:::o;16789:364::-;16877:3;16905:39;16938:5;16905:39;:::i;:::-;16960:71;17024:6;17019:3;16960:71;:::i;:::-;16953:78;;17040:52;17085:6;17080:3;17073:4;17066:5;17062:16;17040:52;:::i;:::-;17117:29;17139:6;17117:29;:::i;:::-;17112:3;17108:39;17101:46;;16881:272;16789:364;;;;:::o;17159:313::-;17272:4;17310:2;17299:9;17295:18;17287:26;;17359:9;17353:4;17349:20;17345:1;17334:9;17330:17;17323:47;17387:78;17460:4;17451:6;17387:78;:::i;:::-;17379:86;;17159:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1141200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "424",
								"changeFreeMintOpen(bool)": "infinite",
								"changeNagaKidsContract(address)": "infinite",
								"changeWhitelistMintOpen(bool)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getTotalSupply()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3185",
								"isFreeMintOpen()": "2543",
								"isWhitelistOpen()": "2588",
								"nagaKidsContract()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"whitelistMint()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 448,
									"end": 594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 448,
									"end": 594,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 500,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 511,
									"end": 529,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 531,
									"end": 541,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 500,
									"end": 510,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 500,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 500,
									"end": 510,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 500,
									"end": 542,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 500,
									"end": 542,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 500,
									"end": 542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 500,
									"end": 542,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 500,
									"end": 542,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 553,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 576,
									"end": 585,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 553,
									"end": 575,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 553,
									"end": 575,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 553,
									"end": 575,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 553,
									"end": 586,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 553,
									"end": 586,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 553,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 553,
									"end": 586,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 553,
									"end": 586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 448,
									"end": 594,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7341,
									"end": 7348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7327,
									"end": 7334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7327,
									"end": 7334,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7327,
									"end": 7334,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7327,
									"end": 7349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7372,
									"end": 7376,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7386,
									"end": 7393,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 7447,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7447,
									"end": 7457,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7447,
									"end": 7457,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7447,
									"end": 7459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7438,
									"end": 7445,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7432,
									"end": 7436,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 769,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 602,
									"end": 769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 697,
									"end": 715,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 697,
									"end": 715,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2516,
									"end": 2520,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 752,
									"end": 761,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 733,
									"end": 749,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 733,
									"end": 761,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 602,
									"end": 769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 602,
									"end": 769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 602,
									"end": 769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 3411,
									"end": 3415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3417,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3417,
									"end": 3427,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3417,
									"end": 3427,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3417,
									"end": 3427,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3417,
									"end": 3429,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3417,
									"end": 3429,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3417,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3417,
									"end": 3429,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 3417,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3806,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3820,
									"end": 3827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3806,
									"end": 3813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3806,
									"end": 3813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3806,
									"end": 3813,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3806,
									"end": 3828,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3806,
									"end": 3828,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3806,
									"end": 3828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3806,
									"end": 3828,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 3806,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 4017,
									"end": 4024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4027,
									"end": 4029,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551706"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4121,
									"end": 4134,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4121,
									"end": 4134,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551706"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 3896,
									"end": 4161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3844,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1676,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1720,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1720,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1710,
									"end": 1735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATASIZE",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATACOPY",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 6,
									"value": "3000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1745,
									"end": 1751,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1752,
									"end": 1753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1745,
									"end": 1754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 6,
									"value": "7800000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1770,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1809,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1816,
									"end": 1822,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1812,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1812,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1832,
									"end": 1833,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1828,
									"end": 1829,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1833,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 6,
									"value": "3031323334353637383961626364656600000000000000000000000000000000"
								},
								{
									"begin": 1887,
									"end": 1890,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1879,
									"end": 1884,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1879,
									"end": 1890,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1866,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1861,
									"end": 1862,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1854,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 1916,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1835,
									"end": 1838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1944,
									"end": 1949,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1936,
									"end": 1991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2021,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2022,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2022,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2022,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1588,
									"end": 2029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 689,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 568,
									"end": 689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 677,
									"end": 682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 659,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 659,
									"end": 683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 659,
									"end": 683,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 659,
									"end": 683,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 648,
									"end": 683,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 648,
									"end": 683,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 568,
									"end": 689,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 568,
									"end": 689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 695,
									"end": 867,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 695,
									"end": 867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 836,
									"end": 841,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 793,
									"end": 842,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 793,
									"end": 842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 793,
									"end": 842,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 793,
									"end": 842,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 786,
									"end": 791,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 783,
									"end": 843,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 773,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 847,
									"end": 859,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 773,
									"end": 861,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 773,
									"end": 861,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 695,
									"end": 867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 695,
									"end": 867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 955,
									"end": 960,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 986,
									"end": 992,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 980,
									"end": 993,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 971,
									"end": 993,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 971,
									"end": 993,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 1054,
									"end": 1059,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1002,
									"end": 1060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 1002,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 873,
									"end": 1066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1218,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1204,
									"end": 1213,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1202,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1214,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1187,
									"end": 1219,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1184,
									"end": 1303,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1184,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1184,
									"end": 1303,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1222,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1222,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1301,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1222,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1184,
									"end": 1303,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1184,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 1448,
									"end": 1455,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1439,
									"end": 1445,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1437,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1424,
									"end": 1446,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1367,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1367,
									"end": 1456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1367,
									"end": 1456,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 1367,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1456,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1466,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1592,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1621,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1621,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1806,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1633,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1798,
									"name": "PUSH",
									"source": 10,
									"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
								},
								{
									"begin": 1769,
									"end": 1770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1771,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1750,
									"end": 1799,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1806,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1633,
									"end": 1806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 2214,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1812,
									"end": 2214,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1993,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 2075,
									"end": 2077,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2070,
									"end": 2073,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1993,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1993,
									"end": 2078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1993,
									"end": 2078,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 1993,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2078,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2078,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2087,
									"end": 2180,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2176,
									"end": 2179,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2087,
									"end": 2180,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2087,
									"end": 2180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2087,
									"end": 2180,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2087,
									"end": 2180,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2207,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2208,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2189,
									"end": 2208,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2189,
									"end": 2208,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 2214,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 2214,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 2214,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 2214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2319,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2220,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2272,
									"end": 2278,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2306,
									"end": 2311,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2312,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2312,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2319,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2319,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2319,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2220,
									"end": 2319,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2325,
									"end": 2632,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2325,
									"end": 2632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2393,
									"end": 2394,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2411,
									"end": 2424,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2503,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2497,
									"end": 2500,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2493,
									"end": 2504,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2487,
									"end": 2505,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2478,
									"end": 2481,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2474,
									"end": 2485,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2506,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2436,
									"end": 2437,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2432,
									"end": 2442,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2442,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2442,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 2403,
									"end": 2516,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2532,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2528,
									"end": 2541,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2626,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2525,
									"end": 2626,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2614,
									"end": 2615,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2605,
									"end": 2611,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2600,
									"end": 2603,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2612,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2589,
									"end": 2616,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2626,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2525,
									"end": 2626,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2325,
									"end": 2632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2325,
									"end": 2632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2325,
									"end": 2632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2325,
									"end": 2632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2744,
									"end": 2747,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2805,
									"end": 2810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2772,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2772,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2772,
									"end": 2811,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2772,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2827,
									"end": 2916,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 2909,
									"end": 2915,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2904,
									"end": 2907,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2827,
									"end": 2916,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2827,
									"end": 2916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2827,
									"end": 2916,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 2827,
									"end": 2916,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2820,
									"end": 2916,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2820,
									"end": 2916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2925,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 2970,
									"end": 2976,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2968,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2958,
									"end": 2962,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2951,
									"end": 2956,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2947,
									"end": 2963,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2925,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2925,
									"end": 2977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2925,
									"end": 2977,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 2925,
									"end": 2977,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2997,
									"end": 3000,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2993,
									"end": 3009,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2986,
									"end": 3009,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2986,
									"end": 3009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2748,
									"end": 3015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 3015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3021,
									"end": 3188,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3021,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3161,
									"end": 3180,
									"name": "PUSH",
									"source": 10,
									"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
								},
								{
									"begin": 3157,
									"end": 3158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3149,
									"end": 3155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3145,
									"end": 3159,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3021,
									"end": 3188,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3021,
									"end": 3188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3596,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3194,
									"end": 3596,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3357,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3375,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 3457,
									"end": 3459,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3452,
									"end": 3455,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3375,
									"end": 3460,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3375,
									"end": 3460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3375,
									"end": 3460,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 3375,
									"end": 3460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3368,
									"end": 3460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3558,
									"end": 3561,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3469,
									"end": 3562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3562,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3469,
									"end": 3562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3587,
									"end": 3589,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 3582,
									"end": 3585,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3578,
									"end": 3590,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3590,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3571,
									"end": 3590,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3596,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3596,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3596,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3984,
									"end": 3987,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4006,
									"end": 4154,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4150,
									"end": 4153,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4006,
									"end": 4154,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 4006,
									"end": 4154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4006,
									"end": 4154,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4006,
									"end": 4154,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4154,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4154,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4171,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 4262,
									"end": 4265,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4253,
									"end": 4259,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4171,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4171,
									"end": 4266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4171,
									"end": 4266,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 4171,
									"end": 4266,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4266,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4266,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4283,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 4427,
									"end": 4430,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4283,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 4283,
									"end": 4431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4283,
									"end": 4431,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 4283,
									"end": 4431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4276,
									"end": 4431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4276,
									"end": 4431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4539,
									"end": 4542,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4536,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4543,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4448,
									"end": 4543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4543,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4448,
									"end": 4543,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4441,
									"end": 4543,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4441,
									"end": 4543,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4560,
									"end": 4563,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4553,
									"end": 4563,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4553,
									"end": 4563,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3602,
									"end": 4569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4659,
									"end": 4670,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4693,
									"end": 4699,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4688,
									"end": 4691,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4700,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4733,
									"end": 4737,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4728,
									"end": 4731,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4724,
									"end": 4738,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4709,
									"end": 4738,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4709,
									"end": 4738,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4744,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4750,
									"end": 4852,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 4750,
									"end": 4852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4791,
									"end": 4797,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4842,
									"end": 4844,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4838,
									"end": 4845,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4835,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4826,
									"end": 4831,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4822,
									"end": 4836,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4846,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4846,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4846,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4750,
									"end": 4852,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4750,
									"end": 4852,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4750,
									"end": 4852,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4750,
									"end": 4852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4946,
									"end": 4949,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4974,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 5007,
									"end": 5012,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 5013,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 4974,
									"end": 5013,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4974,
									"end": 5013,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 4974,
									"end": 5013,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5029,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 5093,
									"end": 5099,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5029,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 5029,
									"end": 5100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5029,
									"end": 5100,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 5029,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5100,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5100,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5109,
									"end": 5161,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 5154,
									"end": 5160,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5149,
									"end": 5152,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5142,
									"end": 5146,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5135,
									"end": 5140,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5147,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5109,
									"end": 5161,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 5109,
									"end": 5161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5109,
									"end": 5161,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 5109,
									"end": 5161,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5186,
									"end": 5215,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 5208,
									"end": 5214,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5186,
									"end": 5215,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 5186,
									"end": 5215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5186,
									"end": 5215,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 5186,
									"end": 5215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5181,
									"end": 5184,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5177,
									"end": 5216,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 5222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5341,
									"end": 5345,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5379,
									"end": 5381,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5368,
									"end": 5377,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5364,
									"end": 5382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5356,
									"end": 5382,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5356,
									"end": 5382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5428,
									"end": 5437,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5422,
									"end": 5426,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5418,
									"end": 5438,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5414,
									"end": 5415,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5403,
									"end": 5412,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5416,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5392,
									"end": 5439,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5456,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 5529,
									"end": 5533,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5520,
									"end": 5526,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5456,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 5456,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5456,
									"end": 5534,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 5456,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5448,
									"end": 5534,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5448,
									"end": 5534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5228,
									"end": 5541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5624,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5547,
									"end": 5624,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5584,
									"end": 5591,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5618,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5602,
									"end": 5618,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5602,
									"end": 5618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5624,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5624,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5624,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5547,
									"end": 5624,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5630,
									"end": 5810,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 5630,
									"end": 5810,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5678,
									"end": 5755,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5675,
									"end": 5676,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5668,
									"end": 5756,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5775,
									"end": 5779,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5772,
									"end": 5773,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5765,
									"end": 5780,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5799,
									"end": 5803,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5796,
									"end": 5797,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5789,
									"end": 5804,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5856,
									"end": 5863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5879,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 5897,
									"end": 5898,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5879,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5879,
									"end": 5899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5879,
									"end": 5899,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 5879,
									"end": 5899,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5874,
									"end": 5899,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5874,
									"end": 5899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5913,
									"end": 5933,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5913,
									"end": 5933,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 5913,
									"end": 5933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5913,
									"end": 5933,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5913,
									"end": 5933,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5933,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5933,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6101,
									"end": 6102,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6033,
									"end": 6099,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6029,
									"end": 6103,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6026,
									"end": 6027,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6023,
									"end": 6104,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6018,
									"end": 6019,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6011,
									"end": 6020,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6004,
									"end": 6021,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6000,
									"end": 6105,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6128,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6128,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5997,
									"end": 6128,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6108,
									"end": 6126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 6108,
									"end": 6126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 6108,
									"end": 6126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6108,
									"end": 6126,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 6108,
									"end": 6126,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6128,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5997,
									"end": 6128,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6156,
									"end": 6157,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6153,
									"end": 6154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6149,
									"end": 6158,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6138,
									"end": 6158,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6138,
									"end": 6158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5816,
									"end": 6164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6210,
									"end": 6213,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6229,
									"end": 6249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6247,
									"end": 6248,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6229,
									"end": 6249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 6229,
									"end": 6249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6229,
									"end": 6249,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6229,
									"end": 6249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6224,
									"end": 6249,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6224,
									"end": 6249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6281,
									"end": 6282,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 6263,
									"end": 6283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6263,
									"end": 6283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6258,
									"end": 6283,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6258,
									"end": 6283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6418,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6349,
									"end": 6415,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6345,
									"end": 6419,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6342,
									"end": 6343,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6339,
									"end": 6420,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6443,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6336,
									"end": 6443,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6423,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6423,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 6423,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6423,
									"end": 6441,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 6423,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6336,
									"end": 6443,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 6336,
									"end": 6443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6464,
									"end": 6465,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6460,
									"end": 6469,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6481,
									"end": 6661,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 6481,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6606,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6526,
									"end": 6527,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6519,
									"end": 6607,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6626,
									"end": 6630,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6623,
									"end": 6624,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 6616,
									"end": 6631,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6650,
									"end": 6654,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6647,
									"end": 6648,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6640,
									"end": 6655,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6667,
									"end": 6847,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 6667,
									"end": 6847,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6715,
									"end": 6792,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6712,
									"end": 6713,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6705,
									"end": 6793,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6812,
									"end": 6816,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 6809,
									"end": 6810,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 6802,
									"end": 6817,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6836,
									"end": 6840,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6833,
									"end": 6834,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6826,
									"end": 6841,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 7024,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 6853,
									"end": 7024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6915,
									"end": 6939,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6933,
									"end": 6938,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6915,
									"end": 6939,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 6915,
									"end": 6939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6915,
									"end": 6939,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6915,
									"end": 6939,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6906,
									"end": 6939,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6906,
									"end": 6939,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6961,
									"end": 6965,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6954,
									"end": 6959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6951,
									"end": 6966,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6948,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6948,
									"end": 6989,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6969,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6969,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 6969,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6969,
									"end": 6987,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6969,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6948,
									"end": 6989,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6948,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7016,
									"end": 7017,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7009,
									"end": 7014,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7005,
									"end": 7018,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7018,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7018,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 7024,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 7024,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 7024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 7024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7030,
									"end": 7212,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 7030,
									"end": 7212,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7170,
									"end": 7204,
									"name": "PUSH",
									"source": 10,
									"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
								},
								{
									"begin": 7166,
									"end": 7167,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7158,
									"end": 7164,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7154,
									"end": 7168,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7147,
									"end": 7205,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7030,
									"end": 7212,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7030,
									"end": 7212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7218,
									"end": 7584,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 7218,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7360,
									"end": 7363,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7381,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7445,
									"end": 7447,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7440,
									"end": 7443,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7381,
									"end": 7448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7448,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 7381,
									"end": 7448,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7374,
									"end": 7448,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7374,
									"end": 7448,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7457,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7546,
									"end": 7549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7457,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 7457,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7457,
									"end": 7550,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 7457,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7575,
									"end": 7577,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7570,
									"end": 7573,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7566,
									"end": 7578,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7559,
									"end": 7578,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7559,
									"end": 7578,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7218,
									"end": 7584,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7218,
									"end": 7584,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7218,
									"end": 7584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7218,
									"end": 7584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7590,
									"end": 8009,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 7590,
									"end": 8009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7756,
									"end": 7760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7794,
									"end": 7796,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7783,
									"end": 7792,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7779,
									"end": 7797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7771,
									"end": 7797,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7771,
									"end": 7797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7843,
									"end": 7852,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7837,
									"end": 7841,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7833,
									"end": 7853,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7829,
									"end": 7830,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7818,
									"end": 7827,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7814,
									"end": 7831,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7807,
									"end": 7854,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7871,
									"end": 8002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 7997,
									"end": 8001,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7871,
									"end": 8002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 7871,
									"end": 8002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7871,
									"end": 8002,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 7871,
									"end": 8002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7863,
									"end": 8002,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7863,
									"end": 8002,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7590,
									"end": 8009,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7590,
									"end": 8009,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7590,
									"end": 8009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7590,
									"end": 8009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 1528,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d93279679cc0f2bf631239dfc59daf598485938f92520b424e9709b8ca5f5b3964736f6c634300080f0033",
									".code": [
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "804F43CD"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "A6F5F014"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "A6F5F014"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "C4E41B22"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "DD31A7BA"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "804F43CD"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "94F4504D"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "28438F68"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "28438F68"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "61AEC205"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "27C25C20"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 1528,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 331,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 331,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 331,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 935,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 935,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 602,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 602,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1087,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 412,
											"end": 439,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 412,
											"end": 439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 412,
											"end": 439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 379,
											"end": 405,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 379,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1288,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1288,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 777,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 777,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 331,
											"end": 372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 331,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1029,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1029,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1047,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 935,
											"end": 1079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4866,
											"end": 4870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4853,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4894,
											"end": 4898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4883,
											"end": 4908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5893,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5893,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 5905,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5893,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5874,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5968,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 602,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 715,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 752,
											"end": 761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 733,
											"end": 749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1087,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1159,
											"end": 1174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1182,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1182,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1151,
											"end": 1214,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1151,
											"end": 1214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 1233,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1233,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1233,
											"end": 1249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1233,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1233,
											"end": 1256,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1225,
											"end": 1272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1225,
											"end": 1272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 439,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 412,
											"end": 439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 405,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 379,
											"end": 405,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 379,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1378,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1390,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1390,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1362,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1362,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5233,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5275,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5288,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5263,
											"end": 5289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 777,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 858,
											"end": 876,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1720,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1720,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1710,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1745,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1770,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1812,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1812,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1866,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1854,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1835,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1936,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2001,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7327,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7386,
											"end": 7393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7447,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7447,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7685,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7806,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7806,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7797,
											"end": 7804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3989,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4101,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3896,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3844,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2869,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2860,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2842,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2990,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2907,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3039,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3114,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3178,
											"end": 3183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3147,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3147,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3377,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3196,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3364,
											"end": 3369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3308,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3552,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3648,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3552,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3777,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3661,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3731,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3769,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3711,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3871,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3880,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3880,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4013,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4025,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4030,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4114,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3995,
											"end": 4114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4033,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4114,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3995,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4178,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4228,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4178,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4228,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4347,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4251,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4317,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4341,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4317,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4475,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4353,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4426,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4426,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4451,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4406,
											"end": 4469,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4469,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4406,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4552,
											"end": 4572,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4581,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4614,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4581,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4694,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4739,
											"end": 4748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4737,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4749,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4754,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4838,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4719,
											"end": 4838,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4757,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4757,
											"end": 4836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4836,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4757,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4719,
											"end": 4838,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4719,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4936,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 4945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4902,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4902,
											"end": 4955,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4902,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5006,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5030,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5083,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 5030,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5020,
											"end": 5083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 5093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 5100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5227,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5106,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5215,
											"end": 5220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5197,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5405,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5233,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5374,
											"end": 5379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5331,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5331,
											"end": 5380,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5331,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5381,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5311,
											"end": 5399,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5397,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5399,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5311,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5588,
											"end": 5593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5536,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5594,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5536,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5690,
											"end": 5696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5737,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5742,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5745,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5960,
											"end": 5967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5890,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5968,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5890,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6192,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6074,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6161,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 6161,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6149,
											"end": 6186,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6329,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6318,
											"end": 6327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6410,
											"end": 6411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6342,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 6413,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 6342,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6198,
											"end": 6420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6575,
											"end": 6589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6835,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6601,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6775,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6797,
											"end": 6803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6786,
											"end": 6828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 7207,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6841,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7068,
											"end": 7070,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 7063,
											"end": 7066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 7004,
											"end": 7071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7071,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7004,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6997,
											"end": 7071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6997,
											"end": 7071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 7169,
											"end": 7172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 7080,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 7080,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7198,
											"end": 7200,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7189,
											"end": 7201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7182,
											"end": 7201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 7207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 7207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 7207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6841,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7632,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7213,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7379,
											"end": 7383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7476,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 7494,
											"end": 7625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7625,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7494,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7486,
											"end": 7625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7213,
											"end": 7632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7638,
											"end": 7819,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 7638,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7811,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 7776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7755,
											"end": 7812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7638,
											"end": 7819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7638,
											"end": 7819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 8191,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7825,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7967,
											"end": 7970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8047,
											"end": 8050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 7988,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 8055,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7988,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7981,
											"end": 8055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7981,
											"end": 8055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8153,
											"end": 8156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 8064,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8064,
											"end": 8157,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8064,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8177,
											"end": 8180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 8191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 8191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 8191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 8191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8378,
											"end": 8404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8378,
											"end": 8404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8414,
											"end": 8461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 8478,
											"end": 8609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8799,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8622,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8762,
											"end": 8791,
											"name": "PUSH",
											"source": 10,
											"value": "57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000"
										},
										{
											"begin": 8758,
											"end": 8759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8739,
											"end": 8792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8947,
											"end": 8950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 9032,
											"end": 9034,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 8968,
											"end": 9035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8968,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 9035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 9035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 9133,
											"end": 9136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 9044,
											"end": 9137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 9044,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9164,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 9171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 9171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9343,
											"end": 9347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9420,
											"end": 9440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9401,
											"end": 9418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9394,
											"end": 9441,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 9584,
											"end": 9588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9458,
											"end": 9589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 9458,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9763,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9602,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9742,
											"end": 9755,
											"name": "PUSH",
											"source": 10,
											"value": "4F76657220737570706C79000000000000000000000000000000000000000000"
										},
										{
											"begin": 9738,
											"end": 9739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9911,
											"end": 9914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 9991,
											"end": 9994,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 9932,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 9932,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 10008,
											"end": 10101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10008,
											"end": 10101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10126,
											"end": 10128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10110,
											"end": 10129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 10135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9769,
											"end": 10135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10334,
											"end": 10343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10322,
											"end": 10348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10322,
											"end": 10348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10394,
											"end": 10403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10384,
											"end": 10404,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10405,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 10422,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10422,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10688,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 10566,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 10657,
											"end": 10662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 10639,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10639,
											"end": 10663,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 10639,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10664,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10619,
											"end": 10682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10619,
											"end": 10682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10619,
											"end": 10682,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10619,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10566,
											"end": 10688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10782,
											"end": 10788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10776,
											"end": 10789,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 10798,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10831,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10798,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 10964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10950,
											"end": 10959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10933,
											"end": 10965,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 11049,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10930,
											"end": 11049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10968,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10968,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 10968,
											"end": 11047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10968,
											"end": 11047,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10968,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10930,
											"end": 11049,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 10930,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11088,
											"end": 11089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11169,
											"end": 11176,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11158,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 11113,
											"end": 11177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11177,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11113,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11103,
											"end": 11177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11103,
											"end": 11177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 11194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11380,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 11200,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11248,
											"end": 11325,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11245,
											"end": 11246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11326,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11349,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11335,
											"end": 11350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11366,
											"end": 11367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11426,
											"end": 11433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11467,
											"end": 11468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 11449,
											"end": 11469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11501,
											"end": 11502,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 11483,
											"end": 11503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11483,
											"end": 11503,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11483,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11478,
											"end": 11503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11478,
											"end": 11503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11671,
											"end": 11672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11669,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11599,
											"end": 11673,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11593,
											"end": 11674,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11591,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11675,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11567,
											"end": 11698,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 11678,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11698,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11567,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11723,
											"end": 11724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11719,
											"end": 11728,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11708,
											"end": 11728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 11799,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 11819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 11819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11851,
											"end": 11852,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 11833,
											"end": 11853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11987,
											"end": 11988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11919,
											"end": 11985,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11915,
											"end": 11989,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11912,
											"end": 11913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11990,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 12013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11906,
											"end": 12013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 11993,
											"end": 12011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 12013,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11906,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12030,
											"end": 12039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12023,
											"end": 12039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 12045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 12051,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12099,
											"end": 12176,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12096,
											"end": 12097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12196,
											"end": 12200,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12186,
											"end": 12201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12220,
											"end": 12224,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12210,
											"end": 12225,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12237,
											"end": 12417,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 12237,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12362,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12382,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12379,
											"end": 12380,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12372,
											"end": 12387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12410,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12594,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 12423,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12462,
											"end": 12465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12503,
											"end": 12508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12485,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 12485,
											"end": 12509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12485,
											"end": 12509,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12485,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12476,
											"end": 12509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12521,
											"end": 12536,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12518,
											"end": 12559,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12539,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12559,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12518,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12586,
											"end": 12587,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12579,
											"end": 12584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12588,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12568,
											"end": 12588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12600,
											"end": 12782,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 12600,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12740,
											"end": 12774,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 12736,
											"end": 12737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12728,
											"end": 12734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12724,
											"end": 12738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12717,
											"end": 12775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12600,
											"end": 12782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12600,
											"end": 12782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12930,
											"end": 12933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 13015,
											"end": 13017,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13010,
											"end": 13013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 12951,
											"end": 13018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 13018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 13018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 13116,
											"end": 13119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 13027,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13136,
											"end": 13148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 13154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13366,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13341,
											"end": 13367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13413,
											"end": 13422,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13403,
											"end": 13423,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13399,
											"end": 13400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13388,
											"end": 13397,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13384,
											"end": 13401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13377,
											"end": 13424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13567,
											"end": 13571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 13441,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13433,
											"end": 13572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13433,
											"end": 13572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13687,
											"end": 13698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13727,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13912,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 13739,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 13904,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13875,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13867,
											"end": 13873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13863,
											"end": 13877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 13905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 14320,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 13918,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14099,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14181,
											"end": 14183,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 14176,
											"end": 14179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14099,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 14099,
											"end": 14184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14099,
											"end": 14184,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 14099,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14193,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14282,
											"end": 14285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14193,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 14193,
											"end": 14286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14193,
											"end": 14286,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14193,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14313,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 14306,
											"end": 14309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14302,
											"end": 14314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14295,
											"end": 14314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14295,
											"end": 14314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 14320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 14320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 14320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 14320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14425,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 14326,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14412,
											"end": 14417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14406,
											"end": 14418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14738,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 14431,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14517,
											"end": 14530,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14608,
											"end": 14609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14603,
											"end": 14606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14573,
											"end": 14612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14545,
											"end": 14547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14542,
											"end": 14543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 14509,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14647,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14732,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 14631,
											"end": 14732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14717,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14706,
											"end": 14709,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14732,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 14631,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14850,
											"end": 14853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14878,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14911,
											"end": 14916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14878,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 14878,
											"end": 14917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14878,
											"end": 14917,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14878,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 15015,
											"end": 15021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15010,
											"end": 15013,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 14933,
											"end": 15022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14933,
											"end": 15022,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 14933,
											"end": 15022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14926,
											"end": 15022,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14926,
											"end": 15022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 15076,
											"end": 15082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15071,
											"end": 15074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15064,
											"end": 15068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15057,
											"end": 15062,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15053,
											"end": 15069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 15031,
											"end": 15083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15083,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 15031,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15108,
											"end": 15114,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15103,
											"end": 15106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15099,
											"end": 15115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15092,
											"end": 15115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15092,
											"end": 15115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14854,
											"end": 15121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14744,
											"end": 15121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15294,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 15127,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15267,
											"end": 15286,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 15263,
											"end": 15264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15255,
											"end": 15261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15251,
											"end": 15265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15244,
											"end": 15287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15702,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 15300,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15481,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15563,
											"end": 15565,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15558,
											"end": 15561,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15481,
											"end": 15566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 15481,
											"end": 15566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15481,
											"end": 15566,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15481,
											"end": 15566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15664,
											"end": 15667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 15575,
											"end": 15668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15668,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15575,
											"end": 15668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15688,
											"end": 15691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15684,
											"end": 15696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16090,
											"end": 16093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16112,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16256,
											"end": 16259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 16112,
											"end": 16260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16260,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16112,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16105,
											"end": 16260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16105,
											"end": 16260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16277,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 16368,
											"end": 16371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16359,
											"end": 16365,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16277,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 16277,
											"end": 16372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16277,
											"end": 16372,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 16277,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16270,
											"end": 16372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16270,
											"end": 16372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16533,
											"end": 16536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 16389,
											"end": 16537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16537,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16389,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16382,
											"end": 16537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16382,
											"end": 16537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16645,
											"end": 16648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16636,
											"end": 16642,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 16554,
											"end": 16649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16649,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16554,
											"end": 16649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16666,
											"end": 16669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16659,
											"end": 16669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16659,
											"end": 16669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 16675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16783,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 16681,
											"end": 16783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16722,
											"end": 16728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16769,
											"end": 16776,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16764,
											"end": 16766,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16757,
											"end": 16762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16753,
											"end": 16767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16749,
											"end": 16777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16739,
											"end": 16777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16739,
											"end": 16777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16938,
											"end": 16943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 16905,
											"end": 16944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16905,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16960,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 17024,
											"end": 17030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17019,
											"end": 17022,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16960,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 16960,
											"end": 17031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16960,
											"end": 17031,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 16960,
											"end": 17031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16953,
											"end": 17031,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16953,
											"end": 17031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17040,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 17085,
											"end": 17091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17080,
											"end": 17083,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17073,
											"end": 17077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17066,
											"end": 17071,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17062,
											"end": 17078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17040,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 17040,
											"end": 17092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17040,
											"end": 17092,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 17040,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17117,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17139,
											"end": 17145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17117,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 17117,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17117,
											"end": 17146,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17117,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17112,
											"end": 17115,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17147,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17101,
											"end": 17147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16881,
											"end": 17153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16789,
											"end": 17153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17272,
											"end": 17276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17310,
											"end": 17312,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17299,
											"end": 17308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17295,
											"end": 17313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17287,
											"end": 17313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17287,
											"end": 17313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17359,
											"end": 17368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17349,
											"end": 17369,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17345,
											"end": 17346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17334,
											"end": 17343,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17330,
											"end": 17347,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17323,
											"end": 17370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17387,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 17460,
											"end": 17464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17451,
											"end": 17457,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17387,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 17387,
											"end": 17465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17387,
											"end": 17465,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 17387,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17379,
											"end": 17465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17379,
											"end": 17465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17159,
											"end": 17472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MintNagaKids.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"changeFreeMintOpen(bool)": "28438f68",
							"changeNagaKidsContract(address)": "61aec205",
							"changeWhitelistMintOpen(bool)": "dd31a7ba",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalSupply()": "c4e41b22",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isFreeMintOpen()": "a6f5f014",
							"isWhitelistOpen()": "94f4504d",
							"nagaKidsContract()": "27c25c20",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"whitelistMint()": "804f43cd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"_nagaKids\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"changeFreeMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"_nagaKids\",\"type\":\"address\"}],\"name\":\"changeNagaKidsContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"changeWhitelistMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFreeMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nagaKidsContract\",\"outputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MintNagaKids.sol\":\"MintNagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"MintNagaKids.sol\":{\"keccak256\":\"0x02e59a66cf08eaf2dd9b2df2bd9d6a533499d5bffcb9000b0beb6c737d3bbf51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19a96381ca021958534baf52d99be1f2d0ae01150ab0263eb9c442ba1dd24153\",\"dweb:/ipfs/QmdtKSCYKpF8DFEJ7N3RcMohXnvjBPW8REVUmuoohsFpvS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 403,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 852,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "nagaKidsContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721Enumerable)579"
							},
							{
								"astId": 854,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "isFreeMintOpen",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 856,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "isWhitelistOpen",
								"offset": 21,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC721Enumerable)579": {
								"encoding": "inplace",
								"label": "contract IERC721Enumerable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "MintNagaKids.sol:MintNagaKids",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "MintNagaKids.sol:MintNagaKids",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							601
						],
						"ERC165": [
							828
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							840
						],
						"Strings": [
							804
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 602,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 805,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 829,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 601,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 828,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								828,
								840,
								392,
								601
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										827
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 827,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 804,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$804_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 803,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 804,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$804_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 803,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							840
						],
						"IERC721": [
							548
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 841,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "271:7:3"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								840
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 447,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 456,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 465,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 548,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 548,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 548,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 548,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 548,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 548,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 548,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 548,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 548,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 549,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							840
						],
						"IERC721": [
							548
						],
						"IERC721Enumerable": [
							579
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 549,
							"src": "154:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 553,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 548,
										"src": "348:7:4"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:4"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 552,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								548,
								840
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:4",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "495:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:4"
									},
									"scope": 579,
									"src": "449:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:4",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "715:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "730:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "768:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:4"
									},
									"scope": 579,
									"src": "686:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:4",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "974:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1012:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:4"
									},
									"scope": 579,
									"src": "952:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 580,
							"src": "317:706:4",
							"usedErrors": []
						}
					],
					"src": "129:895:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 582,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 587,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 586,
												"id": 589,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 601,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 595,
												"id": 598,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 601,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 602,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 604,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 607,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 804,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 605,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 614,
															"id": 619,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"id": 624,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 610,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 639,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 632,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 634,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 635,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 641,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 678,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 651,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 655,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 657,
																	"indexExpression": {
																		"id": 656,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 669,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 662,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 667,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 665,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 610,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 666,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 664,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 663,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 668,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 660,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 658,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 680,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 684,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 804,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 693,
															"id": 698,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"id": 703,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 689,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"hexValue": "30",
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 719,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 712,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 714,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 715,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 718,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 723,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															727,
															803
														],
														"referencedDeclaration": 803,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 693,
												"id": 725,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 804,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 737,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 742,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 748,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 750,
														"indexExpression": {
															"hexValue": "30",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 754,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 756,
														"indexExpression": {
															"hexValue": "31",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 788,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 774,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 776,
																	"indexExpression": {
																		"id": 775,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 777,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 781,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 784,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"initializationExpression": {
													"assignments": [
														761
													],
													"declarations": [
														{
															"constant": false,
															"id": 761,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 789,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 760,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 767,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 763,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 771,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 773,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 797,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 736,
												"id": 801,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 804,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 805,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							828
						],
						"IERC165": [
							840
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 807,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 841,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 809,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 840,
										"src": "754:7:7"
									},
									"id": 810,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 828,
							"linearizedBaseContracts": [
								828,
								840
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										839
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 819,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 821,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$840_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$840_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 820,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$840",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 818,
												"id": 825,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 815,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 812,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 828,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 829,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 831,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 833,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 840,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 841,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"MintNagaKids.sol": {
				"ast": {
					"absolutePath": "MintNagaKids.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							601
						],
						"ERC165": [
							828
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							840
						],
						"IERC721": [
							548
						],
						"IERC721Enumerable": [
							579
						],
						"MintNagaKids": [
							945
						],
						"ReentrancyGuard": [
							432
						],
						"Strings": [
							804
						]
					},
					"id": 946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 433,
							"src": "61:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 580,
							"src": "125:79:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 946,
							"sourceUnit": 320,
							"src": "206:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 846,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "293:13:9"
									},
									"id": 847,
									"nodeType": "InheritanceSpecifier",
									"src": "293:13:9"
								},
								{
									"baseName": {
										"id": 848,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "308:15:9"
									},
									"id": 849,
									"nodeType": "InheritanceSpecifier",
									"src": "308:15:9"
								}
							],
							"canonicalName": "MintNagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 945,
							"linearizedBaseContracts": [
								945,
								432,
								319,
								828,
								840,
								392,
								601
							],
							"name": "MintNagaKids",
							"nameLocation": "277:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27c25c20",
									"id": 852,
									"mutability": "mutable",
									"name": "nagaKidsContract",
									"nameLocation": "356:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "331:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
										"typeString": "contract IERC721Enumerable"
									},
									"typeName": {
										"id": 851,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 850,
											"name": "IERC721Enumerable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 579,
											"src": "331:17:9"
										},
										"referencedDeclaration": 579,
										"src": "331:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
											"typeString": "contract IERC721Enumerable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6f5f014",
									"id": 854,
									"mutability": "mutable",
									"name": "isFreeMintOpen",
									"nameLocation": "391:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "379:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 853,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "379:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94f4504d",
									"id": 856,
									"mutability": "mutable",
									"name": "isWhitelistOpen",
									"nameLocation": "424:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 945,
									"src": "412:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 855,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "412:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "489:105:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "511:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 864,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "531:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "531:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 862,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "500:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "500:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "500:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "_nagaKids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "576:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
																"typeString": "contract IERC721Enumerable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
																"typeString": "contract IERC721Enumerable"
															}
														],
														"id": 868,
														"name": "changeNagaKidsContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "553:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC721Enumerable_$579_$returns$__$",
															"typeString": "function (contract IERC721Enumerable)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "553:33:9"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "_nagaKids",
												"nameLocation": "478:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "460:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
													"typeString": "contract IERC721Enumerable"
												},
												"typeName": {
													"id": 858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 857,
														"name": "IERC721Enumerable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 579,
														"src": "460:17:9"
													},
													"referencedDeclaration": 579,
													"src": "460:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:29:9"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:0:9"
									},
									"scope": 945,
									"src": "448:146:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "722:47:9",
										"statements": [
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "nagaKidsContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "733:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 883,
														"name": "_nagaKids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "752:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"src": "733:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "733:28:9"
											}
										]
									},
									"functionSelector": "61aec205",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 879,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "697:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 880,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "688:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "688:28:9"
										}
									],
									"name": "changeNagaKidsContract",
									"nameLocation": "611:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_nagaKids",
												"nameLocation": "652:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "634:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
													"typeString": "contract IERC721Enumerable"
												},
												"typeName": {
													"id": 875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 874,
														"name": "IERC721Enumerable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 579,
														"src": "634:17:9"
													},
													"referencedDeclaration": 579,
													"src": "634:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:29:9"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:0:9"
									},
									"scope": 945,
									"src": "602:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "883:44:9",
										"statements": [
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "isWhitelistOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "894:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "912:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "894:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "894:25:9"
											}
										]
									},
									"functionSelector": "dd31a7ba",
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 892,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "858:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 893,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "849:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "849:28:9"
										}
									],
									"name": "changeWhitelistMintOpen",
									"nameLocation": "786:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "815:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "810:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:14:9"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:0:9"
									},
									"scope": 945,
									"src": "777:150:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "1036:43:9",
										"statements": [
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 908,
														"name": "isFreeMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "1047:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 909,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1064:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1047:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "1047:24:9"
											}
										]
									},
									"functionSelector": "28438f68",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 905,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1011:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 904,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1002:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1002:28:9"
										}
									],
									"name": "changeFreeMintOpen",
									"nameLocation": "944:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "968:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "963:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "963:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:14:9"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:9"
									},
									"scope": 945,
									"src": "935:144:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1140:140:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "isWhitelistOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "1159:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1178:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1159:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															},
															"value": "Whitelist not open to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1151:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "1151:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 926,
																	"name": "getTotalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1233:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1233:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31313131",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1252:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1111_by_1",
																	"typeString": "int_const 1111"
																},
																"value": "1111"
															},
															"src": "1233:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1258:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1225:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "1225:47:9"
											}
										]
									},
									"functionSelector": "804f43cd",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "1127:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1127:12:9"
										}
									],
									"name": "whitelistMint",
									"nameLocation": "1096:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:2:9"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:9"
									},
									"scope": 945,
									"src": "1087:193:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "1344:56:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 939,
															"name": "nagaKidsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1362:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Enumerable_$579",
																"typeString": "contract IERC721Enumerable"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "1362:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 938,
												"id": 942,
												"nodeType": "Return",
												"src": "1355:37:9"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "1297:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:2:9"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1335:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:9:9"
									},
									"scope": 945,
									"src": "1288:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 946,
							"src": "268:1260:9",
							"usedErrors": []
						}
					],
					"src": "33:1497:9"
				},
				"id": 9
			}
		}
	}
}