{
	"id": "2614851cee888a8b1463b8af99ee4ce9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"MintNagaKid.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"./VerifySignature.sol\";\r\nimport \"./Whitelist.sol\";\r\nimport \"./INagaKidNFT.sol\";\r\n\r\ncontract MintNagaKid is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {\r\n\r\n    INagaKidNFT public NagaKidContract;\r\n    bool public isPublicMintOpen;\r\n    bool public isWhitelistMintOpen;\r\n\r\n    address public signer;\r\n\r\n    mapping(address => bool) _isWhitelistMinted;\r\n    mapping(address => uint256) _isWhitelistMintedAmount;\r\n    mapping(address => bool) _isPublicMinted;\r\n\r\n    event WhitelistMinted(address indexed user,uint256 amount,uint256 timestamp);\r\n    event PublicMinted(address indexed user,uint256 timestamp);\r\n    event SetNagaKidContract(address NagaKidBefore,address NagaKidAfter);\r\n    event SetSigner(address signerBefore, address signerAfter);\r\n    event SetWhitelistMintOpen(bool isOpen);\r\n    event SetPublicMintOpen(bool isOpen);\r\n    event SetMerkleRoot(bytes32 merkleRootBefore, bytes32 merkleRootAfter);\r\n\r\n    constructor(INagaKidNFT _NagaKid,bytes32 _merkleRoot) {\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        setNagaKidContract(_NagaKid);\r\n        setMerkleRoot(_merkleRoot);\r\n\r\n    }\r\n\r\n    modifier Paused() {\r\n        require(isPause() == false,\"NagaKid was Paused.\");\r\n        _;\r\n    }\r\n\r\n    function setNagaKidContract(INagaKidNFT _NagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        address NagaKidBefore = address(NagaKidContract);\r\n        \r\n        NagaKidContract = _NagaKid;\r\n\r\n        emit SetNagaKidContract(NagaKidBefore,address(_NagaKid));\r\n    }\r\n    \r\n    function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        address signerBefore = signer;\r\n        signer = _signer;\r\n\r\n        emit SetSigner(signerBefore,_signer);\r\n    } \r\n\r\n    function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        isWhitelistMintOpen = _isOpen;\r\n\r\n        emit SetWhitelistMintOpen(_isOpen);\r\n    }\r\n\r\n    function setPublicMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        isPublicMintOpen = _isOpen;\r\n\r\n        emit SetPublicMintOpen(_isOpen);\r\n    }\r\n    \r\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        bytes32 _merkleRootBefore = merkleRoot;\r\n        merkleRoot = _merkleRoot;\r\n\r\n        emit SetMerkleRoot(_merkleRootBefore,_merkleRoot);\r\n    }\r\n\r\n\r\n    function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {\r\n        require(isWhitelistMintOpen == true, \"Whitelist not open to mint.\");\r\n        require(getTotalSupply() + _amount < 1111, \"Over supply\");\r\n        require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\");\r\n        require(NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\");\r\n        require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\");\r\n\r\n        _isWhitelistMinted[msg.sender] = true;\r\n        _isWhitelistMintedAmount[msg.sender] += _amount;\r\n\r\n        for(uint i = 0; i< _amount; i++){\r\n            NagaKidContract.safeMint(msg.sender);\r\n        }\r\n\r\n        emit WhitelistMinted(msg.sender,_amount,block.timestamp);\r\n    }\r\n\r\n    function publicMint(bytes calldata _sig) public payable nonReentrant Paused {\r\n\r\n        require(isPublicMintOpen == true, \"Whitelist not open to mint.\");\r\n        require(tx.origin == msg.sender, \"haha Contract can't call me\");\r\n        require(isPublicMinted(msg.sender) != true, \"You are already minted.\");\r\n        require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\");\r\n        require(NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\");\r\n        require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\");\r\n\r\n        _isPublicMinted[msg.sender] = true;\r\n        NagaKidContract.safeMint(msg.sender);\r\n\r\n        \r\n        emit PublicMinted(msg.sender,block.timestamp);\r\n    }\r\n\r\n    function isWhitelistMinted(address _user) public view returns(bool) {\r\n        return _isWhitelistMinted[_user];\r\n    }\r\n\r\n    function isWhitelistMintedAmount(address _user) public view returns(uint256) {\r\n        return _isWhitelistMintedAmount[_user];\r\n    }\r\n\r\n    function isPublicMinted(address _user) public view returns(bool) {\r\n        return _isPublicMinted[_user];\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return NagaKidContract.totalSupply();\r\n    }\r\n\r\n    function getMaxSupply() public view returns (uint256) {\r\n        return NagaKidContract.maxSupply();\r\n    }\r\n\r\n    function isPause() public view returns (bool) {\r\n        return NagaKidContract.paused();\r\n    }\r\n}\r\n"
			},
			"INagaKidNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/IAccessControl.sol\";\r\n\r\ninterface INagaKidNFT is IERC721,IAccessControl {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n    function maxSupply() external view returns (uint256);\r\n    function paused() external view returns (bool);\r\n    function safeMint(address to) external;\r\n    function PAUSER_ROLE() external view returns (bytes32);\r\n    function MINTER_ROLE() external view returns (bytes32);\r\n\r\n}"
			},
			"Whitelist.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract Whitelist {\r\n\r\n    bytes32 public merkleRoot;\r\n\r\n    function isWhitelist(\r\n        bytes32[] calldata _proof,\r\n        address _user,\r\n        uint256 _amount\r\n    ) internal view returns (bool) {\r\n        if (merkleRoot == 0) {\r\n            return false;\r\n        }\r\n\r\n        return\r\n            MerkleProof.verify(\r\n                _proof,\r\n                merkleRoot,\r\n                keccak256(abi.encodePacked(_user, _amount))\r\n            );\r\n    }\r\n\r\n}\r\n"
			},
			"VerifySignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\ncontract VerifySignature {\r\n    \r\n    function getMessageHash(\r\n        address _user\r\n    ) public view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_user, address(this)));\r\n    }\r\n\r\n    function getEthSignedMessageHash(bytes32 _messageHash)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        /*\r\n        Signature is produced by signing a keccak256 hash with the following format:\r\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\r\n        */\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n32\",\r\n                    _messageHash\r\n                )\r\n            );\r\n    }\r\n\r\n    function verify(\r\n        address _signer,\r\n        address _user,\r\n        bytes memory signature\r\n    ) public view returns (bool) {\r\n        bytes32 messageHash = getMessageHash(_user);\r\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\r\n\r\n        return recoverSigner(ethSignedMessageHash, signature) == _signer;\r\n    }\r\n\r\n    function recoverSigner(\r\n        bytes32 _ethSignedMessageHash,\r\n        bytes memory _signature\r\n    ) public pure returns (address) {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_ethSignedMessageHash, v, r, s);\r\n    }\r\n\r\n    function splitSignature(bytes memory sig)\r\n        public\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidNFT.sol",
								"MintNagaKid.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;800:1777:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
									".code": [
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidNFT.sol",
								"MintNagaKid.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"INagaKidNFT.sol": {
				"INagaKidNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"INagaKidNFT.sol\":\"INagaKidNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"INagaKidNFT.sol\":{\"keccak256\":\"0x3f574b5b1ea03505ad7b06809e1ece1979bfb6643b93af7158416d59515fa121\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1af90a40676404bf47e3d4446a10c7f52f98b10b636e54e235446222ab6ad3b\",\"dweb:/ipfs/QmYG7tgNXNer6FdU2czpskwJws5KNzrgFB6TvFgNXyEysv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MintNagaKid.sol": {
				"MintNagaKid": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INagaKidNFT",
									"name": "_NagaKid",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PublicMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootBefore",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRootAfter",
									"type": "bytes32"
								}
							],
							"name": "SetMerkleRoot",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "NagaKidBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "NagaKidAfter",
									"type": "address"
								}
							],
							"name": "SetNagaKidContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "SetPublicMintOpen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerBefore",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "signerAfter",
									"type": "address"
								}
							],
							"name": "SetSigner",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "SetWhitelistMintOpen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WhitelistMinted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NagaKidContract",
							"outputs": [
								{
									"internalType": "contract INagaKidNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPublicMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isPublicMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isWhitelistMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isWhitelistMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isWhitelistMintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "publicMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract INagaKidNFT",
									"name": "_NagaKid",
									"type": "address"
								}
							],
							"name": "setNagaKidContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "setPublicMintOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "setWhitelistMintOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proofMerkle",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "whitelistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MintNagaKid.sol\":276:4917  contract MintNagaKid is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"MintNagaKid.sol\":1128:1323  constructor(INagaKidNFT _NagaKid,bytes32 _merkleRoot) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x02\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"MintNagaKid.sol\":1195:1237  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"MintNagaKid.sol\":1226:1236  msg.sender */\n  caller\n    /* \"MintNagaKid.sol\":1195:1205  _grantRole */\n  tag_9\n    /* \"MintNagaKid.sol\":1195:1237  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n    /* \"MintNagaKid.sol\":1248:1276  setNagaKidContract(_NagaKid) */\n  tag_10\n    /* \"MintNagaKid.sol\":1267:1275  _NagaKid */\n  dup3\n    /* \"MintNagaKid.sol\":1248:1266  setNagaKidContract */\n  tag_11\n    /* \"MintNagaKid.sol\":1248:1276  setNagaKidContract(_NagaKid) */\n  jump\t// in\ntag_10:\n    /* \"MintNagaKid.sol\":1287:1313  setMerkleRoot(_merkleRoot) */\n  tag_12\n    /* \"MintNagaKid.sol\":1301:1312  _merkleRoot */\n  dup2\n    /* \"MintNagaKid.sol\":1287:1300  setMerkleRoot */\n  tag_13\n    /* \"MintNagaKid.sol\":1287:1313  setMerkleRoot(_merkleRoot) */\n  jump\t// in\ntag_12:\n    /* \"MintNagaKid.sol\":1128:1323  constructor(INagaKidNFT _NagaKid,bytes32 _merkleRoot) {... */\n  pop\n  pop\n    /* \"MintNagaKid.sol\":276:4917  contract MintNagaKid is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  jump(tag_78)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  dup7\n  and\n  dup1\n  dup7\n  mstore\n  swap3\n  mstore\n  dup1\n  dup5\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  swap1\n  mload\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup6\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MintNagaKid.sol\":1437:1706  function setNagaKidContract(INagaKidNFT _NagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_22:\n    /* \"MintNagaKid.sol\":1566:1581  NagaKidContract */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"MintNagaKid.sol\":1603:1629  NagaKidContract = _NagaKid */\n  dup5\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\n  0x40\n  dup1\n  mload\n    /* \"MintNagaKid.sol\":1566:1581  NagaKidContract */\n  swap2\n  swap1\n  swap3\n  and\n    /* \"#utility.yul\":601:635   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":666:668   */\n  0x20\n    /* \"#utility.yul\":651:669   */\n  dup3\n  add\n    /* \"#utility.yul\":644:687   */\n  swap4\n  swap1\n  swap4\n  mstore\n    /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\n  0x92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e541\n  swap2\n    /* \"#utility.yul\":536:554   */\n  add\n    /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"MintNagaKid.sol\":1523:1706  {... */\n  pop\n    /* \"MintNagaKid.sol\":1437:1706  function setNagaKidContract(INagaKidNFT _NagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MintNagaKid.sol\":2284:2518  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_28:\n    /* \"MintNagaKid.sol\":2375:2400  bytes32 _merkleRootBefore */\n  0x00\n    /* \"MintNagaKid.sol\":2403:2413  merkleRoot */\n  dup1\n  sload\n    /* \"MintNagaKid.sol\":2424:2448  merkleRoot = _merkleRoot */\n  swap1\n  dup4\n  swap1\n  sstore\n    /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":872:897   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":928:930   */\n  0x20\n    /* \"#utility.yul\":913:931   */\n  dup2\n  add\n    /* \"#utility.yul\":906:940   */\n  dup6\n  swap1\n  mstore\n    /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n  0x8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb65\n  swap2\n    /* \"#utility.yul\":845:863   */\n  add\n    /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n  tag_25\n    /* \"#utility.yul\":698:946   */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  tag_35\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n  tag_37\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  tag_41\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n  0x14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n  or(tag_0_185, shl(0x20, tag_42))\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  tag_43\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n  tag_0_185\n  tag_42\n  dup3\n  shl\n  or\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  dup2\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n  add(0x20, mload(0x40))\n  tag_44\n  swap3\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  0x40\n  dup1\n  mload\n  not(0x1f)\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n  swap1\n  dup3\n  swap1\n  mstore\n  shl(0xe5, 0x461bcd)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n  dup3\n  mstore\n  tag_46\n  swap2\n  0x04\n  add\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_49\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_51\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_52\n  jump\t// in\ntag_51:\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n  dup2\n  gt\n  iszero\n  tag_54\n  jumpi\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_56\n  jumpi\n  0x20\n  dup3\n  add\n  dup2\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\ntag_56:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n  swap1\n  pop\n  shl(0xfc, 0x03)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_58\n  jumpi\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n  shl(0xfb, 0x0f)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_61\n  jumpi\n  tag_61\n  tag_59\n  jump\t// in\ntag_61:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_65\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_50\n  jump\t// in\ntag_65:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_66\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_52\n  jump\t// in\ntag_66:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\ntag_62:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  iszero\n  tag_63\n  jumpi\n  shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n  0x0f\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n  and\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n  0x10\n  dup2\n  lt\n  tag_68\n  jumpi\n  tag_68\n  tag_59\n  jump\t// in\ntag_68:\n  byte\n  0xf8\n  shl\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_70\n  jumpi\n  tag_70\n  tag_59\n  jump\t// in\ntag_70:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n  0x04\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n  swap5\n  swap1\n  swap5\n  shr\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n  tag_71\n  dup2\n  tag_72\n  jump\t// in\ntag_71:\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  jump(tag_62)\ntag_63:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n  dup4\n  iszero\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_73\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3438:3440   */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3420:3441   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":3457:3475   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3450:3480   */\n  mstore\n    /* \"#utility.yul\":3516:3550   */\n  0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n    /* \"#utility.yul\":3496:3514   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3489:3551   */\n  mstore\n    /* \"#utility.yul\":3568:3586   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_46\n    /* \"#utility.yul\":3236:3592   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\ntag_73:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:384   */\ntag_3:\n    /* \"#utility.yul\":112:118   */\n  0x00\n    /* \"#utility.yul\":120:126   */\n  dup1\n    /* \"#utility.yul\":173:175   */\n  0x40\n    /* \"#utility.yul\":161:170   */\n  dup4\n    /* \"#utility.yul\":152:159   */\n  dup6\n    /* \"#utility.yul\":148:171   */\n  sub\n    /* \"#utility.yul\":144:176   */\n  slt\n    /* \"#utility.yul\":141:193   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":189:190   */\n  0x00\n    /* \"#utility.yul\":186:187   */\n  dup1\n    /* \"#utility.yul\":179:191   */\n  revert\n    /* \"#utility.yul\":141:193   */\ntag_80:\n    /* \"#utility.yul\":215:231   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":260:291   */\n  dup2\n  and\n    /* \"#utility.yul\":250:292   */\n  dup2\n  eq\n    /* \"#utility.yul\":240:310   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":306:307   */\n  0x00\n    /* \"#utility.yul\":303:304   */\n  dup1\n    /* \"#utility.yul\":296:308   */\n  revert\n    /* \"#utility.yul\":240:310   */\ntag_81:\n    /* \"#utility.yul\":374:376   */\n  0x20\n    /* \"#utility.yul\":359:377   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":353:378   */\n  mload\n    /* \"#utility.yul\":329:334   */\n  swap3\n  swap5\n    /* \"#utility.yul\":353:378   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:384   */\n  jump\t// out\n    /* \"#utility.yul\":951:1209   */\ntag_76:\n    /* \"#utility.yul\":1023:1024   */\n  0x00\n    /* \"#utility.yul\":1033:1146   */\ntag_85:\n    /* \"#utility.yul\":1047:1053   */\n  dup4\n    /* \"#utility.yul\":1044:1045   */\n  dup2\n    /* \"#utility.yul\":1041:1054   */\n  lt\n    /* \"#utility.yul\":1033:1146   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1123:1134   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":1117:1135   */\n  mload\n    /* \"#utility.yul\":1104:1115   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":1097:1136   */\n  mstore\n    /* \"#utility.yul\":1069:1071   */\n  0x20\n    /* \"#utility.yul\":1062:1072   */\n  add\n    /* \"#utility.yul\":1033:1146   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":1164:1170   */\n  dup4\n    /* \"#utility.yul\":1161:1162   */\n  dup2\n    /* \"#utility.yul\":1158:1171   */\n  gt\n    /* \"#utility.yul\":1155:1203   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1190:1196   */\n  dup5\n    /* \"#utility.yul\":1185:1188   */\n  dup5\n    /* \"#utility.yul\":1181:1197   */\n  add\n    /* \"#utility.yul\":1174:1201   */\n  mstore\n    /* \"#utility.yul\":1155:1203   */\ntag_88:\n  pop\n    /* \"#utility.yul\":951:1209   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1214:2000   */\ntag_45:\n    /* \"#utility.yul\":1625:1650   */\n  0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n    /* \"#utility.yul\":1620:1623   */\n  dup2\n    /* \"#utility.yul\":1613:1651   */\n  mstore\n    /* \"#utility.yul\":1595:1598   */\n  0x00\n    /* \"#utility.yul\":1680:1686   */\n  dup4\n    /* \"#utility.yul\":1674:1687   */\n  mload\n    /* \"#utility.yul\":1696:1758   */\n  tag_90\n    /* \"#utility.yul\":1751:1757   */\n  dup2\n    /* \"#utility.yul\":1746:1748   */\n  0x17\n    /* \"#utility.yul\":1741:1744   */\n  dup6\n    /* \"#utility.yul\":1737:1749   */\n  add\n    /* \"#utility.yul\":1730:1734   */\n  0x20\n    /* \"#utility.yul\":1722:1728   */\n  dup9\n    /* \"#utility.yul\":1718:1735   */\n  add\n    /* \"#utility.yul\":1696:1758   */\n  tag_76\n  jump\t// in\ntag_90:\n  shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n    /* \"#utility.yul\":1817:1819   */\n  0x17\n    /* \"#utility.yul\":1777:1793   */\n  swap2\n  dup5\n  add\n    /* \"#utility.yul\":1809:1820   */\n  swap2\n  dup3\n  add\n    /* \"#utility.yul\":1802:1842   */\n  mstore\n    /* \"#utility.yul\":1867:1880   */\n  dup4\n  mload\n    /* \"#utility.yul\":1889:1952   */\n  tag_91\n    /* \"#utility.yul\":1867:1880   */\n  dup2\n    /* \"#utility.yul\":1938:1940   */\n  0x28\n    /* \"#utility.yul\":1930:1941   */\n  dup5\n  add\n    /* \"#utility.yul\":1923:1927   */\n  0x20\n    /* \"#utility.yul\":1911:1928   */\n  dup9\n  add\n    /* \"#utility.yul\":1889:1952   */\n  tag_76\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1972:1989   */\n  add\n    /* \"#utility.yul\":1991:1993   */\n  0x28\n    /* \"#utility.yul\":1968:1994   */\n  add\n  swap5\n    /* \"#utility.yul\":1214:2000   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2388   */\ntag_47:\n    /* \"#utility.yul\":2154:2156   */\n  0x20\n    /* \"#utility.yul\":2143:2152   */\n  dup2\n    /* \"#utility.yul\":2136:2157   */\n  mstore\n    /* \"#utility.yul\":2117:2121   */\n  0x00\n    /* \"#utility.yul\":2186:2192   */\n  dup3\n    /* \"#utility.yul\":2180:2193   */\n  mload\n    /* \"#utility.yul\":2229:2235   */\n  dup1\n    /* \"#utility.yul\":2224:2226   */\n  0x20\n    /* \"#utility.yul\":2213:2222   */\n  dup5\n    /* \"#utility.yul\":2209:2227   */\n  add\n    /* \"#utility.yul\":2202:2236   */\n  mstore\n    /* \"#utility.yul\":2245:2311   */\n  tag_93\n    /* \"#utility.yul\":2304:2310   */\n  dup2\n    /* \"#utility.yul\":2299:2301   */\n  0x40\n    /* \"#utility.yul\":2288:2297   */\n  dup6\n    /* \"#utility.yul\":2284:2302   */\n  add\n    /* \"#utility.yul\":2279:2281   */\n  0x20\n    /* \"#utility.yul\":2271:2277   */\n  dup8\n    /* \"#utility.yul\":2267:2282   */\n  add\n    /* \"#utility.yul\":2245:2311   */\n  tag_76\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2372:2374   */\n  0x1f\n    /* \"#utility.yul\":2351:2366   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2347:2376   */\n  and\n    /* \"#utility.yul\":2332:2377   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":2379:2381   */\n  0x40\n    /* \"#utility.yul\":2328:2382   */\n  add\n  swap3\n    /* \"#utility.yul\":2005:2388   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2393:2520   */\ntag_77:\n    /* \"#utility.yul\":2454:2464   */\n  0x4e487b71\n    /* \"#utility.yul\":2449:2452   */\n  0xe0\n    /* \"#utility.yul\":2445:2465   */\n  shl\n    /* \"#utility.yul\":2442:2443   */\n  0x00\n    /* \"#utility.yul\":2435:2466   */\n  mstore\n    /* \"#utility.yul\":2485:2489   */\n  0x11\n    /* \"#utility.yul\":2482:2483   */\n  0x04\n    /* \"#utility.yul\":2475:2490   */\n  mstore\n    /* \"#utility.yul\":2509:2513   */\n  0x24\n    /* \"#utility.yul\":2506:2507   */\n  0x00\n    /* \"#utility.yul\":2499:2514   */\n  revert\n    /* \"#utility.yul\":2525:2693   */\ntag_50:\n    /* \"#utility.yul\":2565:2572   */\n  0x00\n    /* \"#utility.yul\":2631:2632   */\n  dup2\n    /* \"#utility.yul\":2627:2628   */\n  0x00\n    /* \"#utility.yul\":2623:2629   */\n  not\n    /* \"#utility.yul\":2619:2633   */\n  div\n    /* \"#utility.yul\":2616:2617   */\n  dup4\n    /* \"#utility.yul\":2613:2634   */\n  gt\n    /* \"#utility.yul\":2608:2609   */\n  dup3\n    /* \"#utility.yul\":2601:2610   */\n  iszero\n    /* \"#utility.yul\":2594:2611   */\n  iszero\n    /* \"#utility.yul\":2590:2635   */\n  and\n    /* \"#utility.yul\":2587:2658   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2638:2656   */\n  tag_97\n  tag_77\n  jump\t// in\ntag_97:\n  pop\n    /* \"#utility.yul\":2678:2687   */\n  mul\n  swap1\n    /* \"#utility.yul\":2525:2693   */\n  jump\t// out\n    /* \"#utility.yul\":2698:2826   */\ntag_52:\n    /* \"#utility.yul\":2738:2741   */\n  0x00\n    /* \"#utility.yul\":2769:2770   */\n  dup3\n    /* \"#utility.yul\":2765:2771   */\n  not\n    /* \"#utility.yul\":2762:2763   */\n  dup3\n    /* \"#utility.yul\":2759:2772   */\n  gt\n    /* \"#utility.yul\":2756:2795   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2775:2793   */\n  tag_100\n  tag_77\n  jump\t// in\ntag_100:\n  pop\n    /* \"#utility.yul\":2811:2820   */\n  add\n  swap1\n    /* \"#utility.yul\":2698:2826   */\n  jump\t// out\n    /* \"#utility.yul\":2831:2958   */\ntag_55:\n    /* \"#utility.yul\":2892:2902   */\n  0x4e487b71\n    /* \"#utility.yul\":2887:2890   */\n  0xe0\n    /* \"#utility.yul\":2883:2903   */\n  shl\n    /* \"#utility.yul\":2880:2881   */\n  0x00\n    /* \"#utility.yul\":2873:2904   */\n  mstore\n    /* \"#utility.yul\":2923:2927   */\n  0x41\n    /* \"#utility.yul\":2920:2921   */\n  0x04\n    /* \"#utility.yul\":2913:2928   */\n  mstore\n    /* \"#utility.yul\":2947:2951   */\n  0x24\n    /* \"#utility.yul\":2944:2945   */\n  0x00\n    /* \"#utility.yul\":2937:2952   */\n  revert\n    /* \"#utility.yul\":2963:3090   */\ntag_59:\n    /* \"#utility.yul\":3024:3034   */\n  0x4e487b71\n    /* \"#utility.yul\":3019:3022   */\n  0xe0\n    /* \"#utility.yul\":3015:3035   */\n  shl\n    /* \"#utility.yul\":3012:3013   */\n  0x00\n    /* \"#utility.yul\":3005:3036   */\n  mstore\n    /* \"#utility.yul\":3055:3059   */\n  0x32\n    /* \"#utility.yul\":3052:3053   */\n  0x04\n    /* \"#utility.yul\":3045:3060   */\n  mstore\n    /* \"#utility.yul\":3079:3083   */\n  0x24\n    /* \"#utility.yul\":3076:3077   */\n  0x00\n    /* \"#utility.yul\":3069:3084   */\n  revert\n    /* \"#utility.yul\":3095:3231   */\ntag_72:\n    /* \"#utility.yul\":3134:3137   */\n  0x00\n    /* \"#utility.yul\":3162:3167   */\n  dup2\n    /* \"#utility.yul\":3152:3191   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3171:3189   */\n  tag_105\n  tag_77\n  jump\t// in\ntag_105:\n  pop\n  not(0x00)\n    /* \"#utility.yul\":3207:3225   */\n  add\n  swap1\n    /* \"#utility.yul\":3095:3231   */\n  jump\t// out\n    /* \"#utility.yul\":3236:3592   */\ntag_78:\n    /* \"MintNagaKid.sol\":276:4917  contract MintNagaKid is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MintNagaKid.sol\":276:4917  contract MintNagaKid is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cb64759\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa7bb5803\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf055c7a9\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf055c7a9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfade63c9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xff0938a7\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa7bb5803\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xde6892c8\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x97aba7f9\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9e6c8855\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa4435dfd\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x7cb64759\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8b7b80b7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x2eb4a7ab\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4c0f38c2\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4c0f38c2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5997bbee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6387f804\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6c19e783\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1f5ac1b2\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2904e6d9\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18f52c48\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d2d3b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKid.sol\":444:475  bool public isWhitelistMintOpen */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      sload(0x03)\n      tag_40\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"MintNagaKid.sol\":4321:4455  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4416:4447  _isWhitelistMintedAmount[_user] */\n      and\n        /* \"MintNagaKid.sol\":4389:4396  uint256 */\n      0x00\n        /* \"MintNagaKid.sol\":4416:4447  _isWhitelistMintedAmount[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4416:4440  _isWhitelistMintedAmount */\n      0x06\n        /* \"MintNagaKid.sol\":4416:4447  _isWhitelistMintedAmount[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MintNagaKid.sol\":4321:4455  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1031:1056   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1019:1021   */\n      0x20\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"MintNagaKid.sol\":4321:4455  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n      tag_44\n        /* \"#utility.yul\":885:1062   */\n      jump\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_51\n      tag_59\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"MintNagaKid.sol\":484:505  address public signer */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sload(0x04)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1413:1445   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1395:1446   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1368:1386   */\n      add\n        /* \"MintNagaKid.sol\":484:505  address public signer */\n      tag_44\n        /* \"#utility.yul\":1249:1452   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_51\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"MintNagaKid.sol\":2528:3403  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n    tag_8:\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_51\n      sload(0x00)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_74\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_74\n      tag_89\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_40\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"MintNagaKid.sol\":4703:4810  function getMaxSupply() public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_51\n      tag_99\n      jump\t// in\n        /* \"MintNagaKid.sol\":4194:4313  function isWhitelistMinted(address _user) public view returns(bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_40\n      tag_103\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4280:4305  _isWhitelistMinted[_user] */\n      and\n        /* \"MintNagaKid.sol\":4256:4260  bool */\n      0x00\n        /* \"MintNagaKid.sol\":4280:4305  _isWhitelistMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4280:4298  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKid.sol\":4280:4305  _isWhitelistMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MintNagaKid.sol\":4194:4313  function isWhitelistMinted(address _user) public view returns(bool) {... */\n      jump\n        /* \"MintNagaKid.sol\":2106:2272  function setPublicMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_74\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"MintNagaKid.sol\":1718:1914  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_74\n      tag_113\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"MintNagaKid.sol\":2284:2518  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_74\n      tag_117\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"MintNagaKid.sol\":368:402  INagaKidNFT public NagaKidContract */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sload(0x03)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_40\n      tag_126\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_64\n      tag_131\n      calldatasize\n      0x04\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n        /* \"MintNagaKid.sol\":1437:1706  function setNagaKidContract(INagaKidNFT _NagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_74\n      tag_137\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"MintNagaKid.sol\":409:437  bool public isPublicMintOpen */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      sload(0x03)\n      tag_40\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5895:5920   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5951:5953   */\n      0x20\n        /* \"#utility.yul\":5936:5954   */\n      dup5\n      add\n        /* \"#utility.yul\":5929:5963   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6011:6015   */\n      0xff\n        /* \"#utility.yul\":5999:6016   */\n      and\n        /* \"#utility.yul\":5979:5997   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5972:6017   */\n      mstore\n        /* \"#utility.yul\":5883:5885   */\n      0x60\n        /* \"#utility.yul\":5868:5886   */\n      add\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_44\n        /* \"#utility.yul\":5697:6023   */\n      jump\n        /* \"MintNagaKid.sol\":4584:4695  function getTotalSupply() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_51\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_74\n      tag_161\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"MintNagaKid.sol\":3411:4186  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n    tag_27:\n      tag_74\n      tag_164\n      calldatasize\n      0x04\n      tag_165\n      jump\t// in\n    tag_164:\n      tag_166\n      jump\t// in\n        /* \"MintNagaKid.sol\":4463:4576  function isPublicMinted(address _user) public view returns(bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_40\n      tag_169\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4546:4568  _isPublicMinted[_user] */\n      and\n        /* \"MintNagaKid.sol\":4522:4526  bool */\n      0x00\n        /* \"MintNagaKid.sol\":4546:4568  _isPublicMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4546:4561  _isPublicMinted */\n      0x07\n        /* \"MintNagaKid.sol\":4546:4568  _isPublicMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MintNagaKid.sol\":4463:4576  function isPublicMinted(address _user) public view returns(bool) {... */\n      jump\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_51\n      tag_174\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"MintNagaKid.sol\":1923:2098  function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_74\n      tag_179\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"MintNagaKid.sol\":4818:4914  function isPause() public view returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_40\n      tag_183\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_188\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_60:\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":6851:6853   */\n      0x60\n        /* \"#utility.yul\":6847:6862   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":6843:6867   */\n      dup3\n      and\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":6831:6868   */\n      mstore\n        /* \"VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":6902:6917   */\n      swap1\n      shl\n        /* \"#utility.yul\":6898:6922   */\n      and\n        /* \"#utility.yul\":6884:6896   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":6877:6923   */\n      mstore\n        /* \"VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":6939:6951   */\n      0x48\n      add\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_192:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MintNagaKid.sol\":2528:3403  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7164:7166   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7146:7167   */\n      mstore\n        /* \"#utility.yul\":7203:7205   */\n      0x1f\n        /* \"#utility.yul\":7183:7201   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7176:7206   */\n      mstore\n        /* \"#utility.yul\":7242:7275   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7222:7240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7215:7276   */\n      mstore\n        /* \"#utility.yul\":7293:7311   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"MintNagaKid.sol\":1368:1377  isPause() */\n      tag_200\n        /* \"MintNagaKid.sol\":1368:1375  isPause */\n      tag_183\n        /* \"MintNagaKid.sol\":1368:1377  isPause() */\n      jump\t// in\n    tag_200:\n        /* \"MintNagaKid.sol\":1368:1386  isPause() == false */\n      iszero\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7524:7526   */\n      0x20\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7506:7527   */\n      mstore\n        /* \"#utility.yul\":7563:7565   */\n      0x13\n        /* \"#utility.yul\":7543:7561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7536:7566   */\n      mstore\n      shl(0x69, 0x2730b3b0a5b4b2103bb0b9902830bab9b2b217)\n        /* \"#utility.yul\":7582:7600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7575:7624   */\n      mstore\n        /* \"#utility.yul\":7641:7659   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      tag_197\n        /* \"#utility.yul\":7322:7665   */\n      jump\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n    tag_201:\n        /* \"MintNagaKid.sol\":2654:2673  isWhitelistMintOpen */\n      sload(0x03)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"MintNagaKid.sol\":2654:2681  isWhitelistMintOpen == true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":2677:2681  true */\n      0x01\n        /* \"MintNagaKid.sol\":2654:2681  isWhitelistMintOpen == true */\n      eq\n        /* \"MintNagaKid.sol\":2646:2713  require(isWhitelistMintOpen == true, \"Whitelist not open to mint.\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7872:7874   */\n      0x20\n        /* \"MintNagaKid.sol\":2646:2713  require(isWhitelistMintOpen == true, \"Whitelist not open to mint.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7854:7875   */\n      mstore\n        /* \"#utility.yul\":7911:7913   */\n      0x1b\n        /* \"#utility.yul\":7891:7909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7884:7914   */\n      mstore\n        /* \"#utility.yul\":7950:7979   */\n      0x57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000\n        /* \"#utility.yul\":7930:7948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7923:7980   */\n      mstore\n        /* \"#utility.yul\":7997:8015   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":2646:2713  require(isWhitelistMintOpen == true, \"Whitelist not open to mint.\") */\n      tag_197\n        /* \"#utility.yul\":7670:8021   */\n      jump\n        /* \"MintNagaKid.sol\":2646:2713  require(isWhitelistMintOpen == true, \"Whitelist not open to mint.\") */\n    tag_205:\n        /* \"MintNagaKid.sol\":2761:2765  1111 */\n      0x0457\n        /* \"MintNagaKid.sol\":2751:2758  _amount */\n      dup2\n        /* \"MintNagaKid.sol\":2732:2748  getTotalSupply() */\n      tag_208\n        /* \"MintNagaKid.sol\":2732:2746  getTotalSupply */\n      tag_157\n        /* \"MintNagaKid.sol\":2732:2748  getTotalSupply() */\n      jump\t// in\n    tag_208:\n        /* \"MintNagaKid.sol\":2732:2758  getTotalSupply() + _amount */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"MintNagaKid.sol\":2732:2765  getTotalSupply() + _amount < 1111 */\n      lt\n        /* \"MintNagaKid.sol\":2724:2781  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8493:8495   */\n      0x20\n        /* \"MintNagaKid.sol\":2724:2781  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8475:8496   */\n      mstore\n        /* \"#utility.yul\":8532:8534   */\n      0x0b\n        /* \"#utility.yul\":8512:8530   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8505:8535   */\n      mstore\n      shl(0xa8, 0x4f76657220737570706c79)\n        /* \"#utility.yul\":8551:8569   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8544:8585   */\n      mstore\n        /* \"#utility.yul\":8602:8620   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":2724:2781  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      tag_197\n        /* \"#utility.yul\":8291:8626   */\n      jump\n        /* \"MintNagaKid.sol\":2724:2781  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n    tag_211:\n        /* \"MintNagaKid.sol\":2818:2828  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":4256:4260  bool */\n      0x00\n        /* \"MintNagaKid.sol\":4280:4305  _isWhitelistMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4280:4298  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKid.sol\":4280:4305  _isWhitelistMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MintNagaKid.sol\":2800:2837  isWhitelistMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":2833:2837  true */\n      0x01\n        /* \"MintNagaKid.sol\":2800:2837  isWhitelistMinted(msg.sender) != true */\n      sub\n        /* \"MintNagaKid.sol\":2792:2865  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8833:8835   */\n      0x20\n        /* \"MintNagaKid.sol\":2792:2865  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8815:8836   */\n      mstore\n        /* \"#utility.yul\":8872:8874   */\n      0x17\n        /* \"#utility.yul\":8852:8870   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8845:8875   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":8891:8909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8884:8937   */\n      mstore\n        /* \"#utility.yul\":8954:8972   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":2792:2865  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_197\n        /* \"#utility.yul\":8631:8978   */\n      jump\n        /* \"MintNagaKid.sol\":2792:2865  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_215:\n        /* \"MintNagaKid.sol\":2884:2899  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":2908:2937  NagaKidContract.MINTER_ROLE() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5391393)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":2884:2899  NagaKidContract */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"MintNagaKid.sol\":2884:2907  NagaKidContract.hasRole */\n      0x91d14854\n      swap2\n        /* \"MintNagaKid.sol\":2884:2899  NagaKidContract */\n      dup4\n      swap2\n        /* \"MintNagaKid.sol\":2908:2935  NagaKidContract.MINTER_ROLE */\n      0xd5391393\n      swap2\n        /* \"MintNagaKid.sol\":2908:2937  NagaKidContract.MINTER_ROLE() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKid.sol\":2884:2899  NagaKidContract */\n      dup7\n        /* \"MintNagaKid.sol\":2908:2937  NagaKidContract.MINTER_ROLE() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"MintNagaKid.sol\":2884:2952  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9346:9371   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"MintNagaKid.sol\":2946:2950  this */\n      address\n        /* \"#utility.yul\":9387:9405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9380:9440   */\n      mstore\n        /* \"#utility.yul\":9319:9337   */\n      0x44\n      add\n        /* \"MintNagaKid.sol\":2884:2952  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"MintNagaKid.sol\":2884:2960  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":2956:2960  true */\n      0x01\n        /* \"MintNagaKid.sol\":2884:2960  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true */\n      eq\n        /* \"MintNagaKid.sol\":2876:3006  require(NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_230\n      jump\t// in\n    tag_228:\n        /* \"MintNagaKid.sol\":3025:3069  isWhitelist(_proofMerkle,msg.sender,_amount) */\n      tag_231\n        /* \"MintNagaKid.sol\":3037:3049  _proofMerkle */\n      dup4\n      dup4\n        /* \"MintNagaKid.sol\":3050:3060  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":3061:3068  _amount */\n      dup5\n        /* \"MintNagaKid.sol\":3025:3036  isWhitelist */\n      tag_232\n        /* \"MintNagaKid.sol\":3025:3069  isWhitelist(_proofMerkle,msg.sender,_amount) */\n      jump\t// in\n    tag_231:\n        /* \"MintNagaKid.sol\":3017:3111  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10314:10316   */\n      0x20\n        /* \"MintNagaKid.sol\":3017:3111  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10296:10317   */\n      mstore\n        /* \"#utility.yul\":10353:10355   */\n      0x25\n        /* \"#utility.yul\":10333:10351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10326:10356   */\n      mstore\n        /* \"#utility.yul\":10392:10426   */\n      0x556e617574686f72697a65642057686974656c6973744d696e74205468697320\n        /* \"#utility.yul\":10372:10390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10365:10427   */\n      mstore\n      shl(0xd9, 0x2ab9b2b917)\n        /* \"#utility.yul\":10443:10461   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10436:10471   */\n      mstore\n        /* \"#utility.yul\":10488:10507   */\n      0x84\n      add\n        /* \"MintNagaKid.sol\":3017:3111  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      tag_197\n        /* \"#utility.yul\":10112:10513   */\n      jump\n        /* \"MintNagaKid.sol\":3017:3111  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n    tag_233:\n        /* \"MintNagaKid.sol\":3143:3153  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":3124:3154  _isWhitelistMinted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":3124:3142  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKid.sol\":3124:3154  _isWhitelistMinted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MintNagaKid.sol\":3124:3161  _isWhitelistMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"MintNagaKid.sol\":3157:3161  true */\n      0x01\n        /* \"MintNagaKid.sol\":3124:3161  _isWhitelistMinted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"MintNagaKid.sol\":3172:3196  _isWhitelistMintedAmount */\n      0x06\n        /* \"MintNagaKid.sol\":3172:3208  _isWhitelistMintedAmount[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"MintNagaKid.sol\":3172:3219  _isWhitelistMintedAmount[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"MintNagaKid.sol\":3212:3219  _amount */\n      dup4\n      swap3\n        /* \"MintNagaKid.sol\":3124:3154  _isWhitelistMinted[msg.sender] */\n      swap1\n        /* \"MintNagaKid.sol\":3172:3219  _isWhitelistMintedAmount[msg.sender] += _amount */\n      tag_236\n      swap1\n        /* \"MintNagaKid.sol\":3212:3219  _amount */\n      dup5\n      swap1\n        /* \"MintNagaKid.sol\":3172:3219  _isWhitelistMintedAmount[msg.sender] += _amount */\n      tag_210\n      jump\t// in\n    tag_236:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"MintNagaKid.sol\":3236:3242  uint i */\n      0x00\n      swap1\n      pop\n        /* \"MintNagaKid.sol\":3232:3327  for(uint i = 0; i< _amount; i++){... */\n    tag_237:\n        /* \"MintNagaKid.sol\":3251:3258  _amount */\n      dup2\n        /* \"MintNagaKid.sol\":3248:3249  i */\n      dup2\n        /* \"MintNagaKid.sol\":3248:3258  i< _amount */\n      lt\n        /* \"MintNagaKid.sol\":3232:3327  for(uint i = 0; i< _amount; i++){... */\n      iszero\n      tag_238\n      jumpi\n        /* \"MintNagaKid.sol\":3279:3294  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":3279:3315  NagaKidContract.safeMint(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x40d097c3)\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":3304:3314  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":3279:3315  NagaKidContract.safeMint(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1395:1446   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":3279:3294  NagaKidContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"MintNagaKid.sol\":3279:3303  NagaKidContract.safeMint */\n      0x40d097c3\n      swap1\n        /* \"#utility.yul\":1368:1386   */\n      0x24\n      add\n        /* \"MintNagaKid.sol\":3279:3315  NagaKidContract.safeMint(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n        /* \"MintNagaKid.sol\":3260:3263  i++ */\n      dup1\n      dup1\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n      pop\n        /* \"MintNagaKid.sol\":3232:3327  for(uint i = 0; i< _amount; i++){... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"MintNagaKid.sol\":3344:3395  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10832:10857   */\n      dup3\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":3379:3394  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10888:10890   */\n      0x20\n        /* \"#utility.yul\":10873:10891   */\n      dup3\n      add\n        /* \"#utility.yul\":10866:10900   */\n      mstore\n        /* \"MintNagaKid.sol\":3360:3370  msg.sender */\n      caller\n      swap2\n        /* \"MintNagaKid.sol\":3344:3395  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      0xb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938\n      swap2\n        /* \"#utility.yul\":10805:10823   */\n      add\n        /* \"MintNagaKid.sol\":3344:3395  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"MintNagaKid.sol\":2528:3403  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_253\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11113:11115   */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11095:11116   */\n      mstore\n        /* \"#utility.yul\":11152:11154   */\n      0x2f\n        /* \"#utility.yul\":11132:11150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11125:11155   */\n      mstore\n        /* \"#utility.yul\":11191:11225   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11171:11189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11164:11226   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":11242:11260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11235:11280   */\n      mstore\n        /* \"#utility.yul\":11297:11316   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_197\n        /* \"#utility.yul\":10911:11322   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_262\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_95:\n        /* \"VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_264\n        /* \"VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"VerifySignature.sol\":935:949  getMessageHash */\n      tag_60\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_264:\n        /* \"VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_265\n        /* \"VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_175\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_265:\n        /* \"VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_266\n        /* \"VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_133\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKid.sol\":4703:4810  function getMaxSupply() public view returns (uint256) {... */\n    tag_99:\n        /* \"MintNagaKid.sol\":4775:4790  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":4775:4802  NagaKidContract.maxSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5abeb01)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKid.sol\":4748:4755  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4775:4790  NagaKidContract */\n      and\n      swap2\n        /* \"MintNagaKid.sol\":4775:4800  NagaKidContract.maxSupply */\n      0xd5abeb01\n      swap2\n        /* \"MintNagaKid.sol\":4775:4802  NagaKidContract.maxSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKid.sol\":4775:4790  NagaKidContract */\n      dup7\n        /* \"MintNagaKid.sol\":4775:4802  NagaKidContract.maxSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_270:\n        /* \"MintNagaKid.sol\":4768:4802  return NagaKidContract.maxSupply() */\n      swap1\n      pop\n        /* \"MintNagaKid.sol\":4703:4810  function getMaxSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MintNagaKid.sol\":2106:2272  function setPublicMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_274:\n        /* \"MintNagaKid.sol\":2194:2210  isPublicMintOpen */\n      0x03\n        /* \"MintNagaKid.sol\":2194:2220  isPublicMintOpen = _isOpen */\n      dup1\n      sload\n      dup4\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"MintNagaKid.sol\":2238:2264  SetPublicMintOpen(_isOpen) */\n      mload(0x40)\n      0x7955b9c09440c823c45ec1ed87cd3f0860e31e9f5a8e65cff61bed27545bedd7\n      swap1\n      tag_276\n      swap1\n        /* \"MintNagaKid.sol\":2213:2220  _isOpen */\n      dup5\n        /* \"#utility.yul\":470:484   */\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n      swap1\n        /* \"#utility.yul\":305:492   */\n      jump\n        /* \"MintNagaKid.sol\":2238:2264  SetPublicMintOpen(_isOpen) */\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"MintNagaKid.sol\":2106:2272  function setPublicMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKid.sol\":1718:1914  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_278:\n        /* \"MintNagaKid.sol\":1824:1830  signer */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":1841:1857  signer = _signer */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"MintNagaKid.sol\":1875:1906  SetSigner(signerBefore,_signer) */\n      0x40\n      dup1\n      mload\n        /* \"MintNagaKid.sol\":1824:1830  signer */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11728:11762   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11793:11795   */\n      0x20\n        /* \"#utility.yul\":11778:11796   */\n      dup3\n      add\n        /* \"#utility.yul\":11771:11814   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"MintNagaKid.sol\":1875:1906  SetSigner(signerBefore,_signer) */\n      0x3271c8694494a7cc76cd185c743e9ee6b515a043ea98c0db7f5ca112f694add4\n      swap2\n        /* \"#utility.yul\":11663:11681   */\n      add\n        /* \"MintNagaKid.sol\":1875:1906  SetSigner(signerBefore,_signer) */\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"MintNagaKid.sol\":1790:1914  {... */\n      pop\n        /* \"MintNagaKid.sol\":1718:1914  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKid.sol\":2284:2518  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_283\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_283:\n        /* \"MintNagaKid.sol\":2375:2400  bytes32 _merkleRootBefore */\n      0x00\n        /* \"MintNagaKid.sol\":2403:2413  merkleRoot */\n      dup1\n      sload\n        /* \"MintNagaKid.sol\":2424:2448  merkleRoot = _merkleRoot */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10832:10857   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":10888:10890   */\n      0x20\n        /* \"#utility.yul\":10873:10891   */\n      dup2\n      add\n        /* \"#utility.yul\":10866:10900   */\n      dup6\n      swap1\n      mstore\n        /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n      0x8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb65\n      swap2\n        /* \"#utility.yul\":10805:10823   */\n      add\n        /* \"MintNagaKid.sol\":2466:2510  SetMerkleRoot(_merkleRootBefore,_merkleRoot) */\n      tag_280\n        /* \"#utility.yul\":10658:10906   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_133:\n        /* \"VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_289\n        /* \"VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"VerifySignature.sol\":1306:1320  splitSignature */\n      tag_152\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_289:\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":12305:12330   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":12378:12382   */\n      0xff\n        /* \"#utility.yul\":12366:12383   */\n      dup4\n      and\n        /* \"#utility.yul\":12346:12364   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":12339:12384   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12400:12418   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":12393:12427   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":12443:12461   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":12436:12470   */\n      dup4\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":12277:12296   */\n      0xa0\n      add\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKid.sol\":1437:1706  function setNagaKidContract(INagaKidNFT _NagaKid) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_295\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_295:\n        /* \"MintNagaKid.sol\":1566:1581  NagaKidContract */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":1603:1629  NagaKidContract = _NagaKid */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\n      0x40\n      dup1\n      mload\n        /* \"MintNagaKid.sol\":1566:1581  NagaKidContract */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11728:11762   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11793:11795   */\n      0x20\n        /* \"#utility.yul\":11778:11796   */\n      dup3\n      add\n        /* \"#utility.yul\":11771:11814   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\n      0x92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e541\n      swap2\n        /* \"#utility.yul\":11663:11681   */\n      add\n        /* \"MintNagaKid.sol\":1647:1698  SetNagaKidContract(NagaKidBefore,address(_NagaKid)) */\n      tag_280\n        /* \"#utility.yul\":11516:11820   */\n      jump\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_152:\n        /* \"VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12683:12685   */\n      0x20\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12665:12686   */\n      mstore\n        /* \"#utility.yul\":12722:12724   */\n      0x18\n        /* \"#utility.yul\":12702:12720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12695:12725   */\n      mstore\n        /* \"#utility.yul\":12761:12787   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":12741:12759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12734:12788   */\n      mstore\n        /* \"#utility.yul\":12805:12823   */\n      0x64\n      add\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_197\n        /* \"#utility.yul\":12481:12829   */\n      jump\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n    tag_299:\n      pop\n      pop\n      pop\n        /* \"VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"MintNagaKid.sol\":4584:4695  function getTotalSupply() public view returns (uint256) {... */\n    tag_157:\n        /* \"MintNagaKid.sol\":4658:4673  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":4658:4687  NagaKidContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKid.sol\":4631:4638  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4658:4673  NagaKidContract */\n      and\n      swap2\n        /* \"MintNagaKid.sol\":4658:4685  NagaKidContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"MintNagaKid.sol\":4658:4687  NagaKidContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKid.sol\":4658:4673  NagaKidContract */\n      dup7\n        /* \"MintNagaKid.sol\":4658:4687  NagaKidContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_253\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_262\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n        /* \"MintNagaKid.sol\":3411:4186  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7164:7166   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7146:7167   */\n      mstore\n        /* \"#utility.yul\":7203:7205   */\n      0x1f\n        /* \"#utility.yul\":7183:7201   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7176:7206   */\n      mstore\n        /* \"#utility.yul\":7242:7275   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7222:7240   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7215:7276   */\n      mstore\n        /* \"#utility.yul\":7293:7311   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_197\n        /* \"#utility.yul\":6962:7317   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_312:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"MintNagaKid.sol\":1368:1377  isPause() */\n      tag_315\n        /* \"MintNagaKid.sol\":1368:1375  isPause */\n      tag_183\n        /* \"MintNagaKid.sol\":1368:1377  isPause() */\n      jump\t// in\n    tag_315:\n        /* \"MintNagaKid.sol\":1368:1386  isPause() == false */\n      iszero\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7524:7526   */\n      0x20\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7506:7527   */\n      mstore\n        /* \"#utility.yul\":7563:7565   */\n      0x13\n        /* \"#utility.yul\":7543:7561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7536:7566   */\n      mstore\n      shl(0x69, 0x2730b3b0a5b4b2103bb0b9902830bab9b2b217)\n        /* \"#utility.yul\":7582:7600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7575:7624   */\n      mstore\n        /* \"#utility.yul\":7641:7659   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n      tag_197\n        /* \"#utility.yul\":7322:7665   */\n      jump\n        /* \"MintNagaKid.sol\":1360:1409  require(isPause() == false,\"NagaKid was Paused.\") */\n    tag_316:\n        /* \"MintNagaKid.sol\":3508:3524  isPublicMintOpen */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"MintNagaKid.sol\":3508:3532  isPublicMintOpen == true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":3528:3532  true */\n      0x01\n        /* \"MintNagaKid.sol\":3508:3532  isPublicMintOpen == true */\n      eq\n        /* \"MintNagaKid.sol\":3500:3564  require(isPublicMintOpen == true, \"Whitelist not open to mint.\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7872:7874   */\n      0x20\n        /* \"MintNagaKid.sol\":3500:3564  require(isPublicMintOpen == true, \"Whitelist not open to mint.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7854:7875   */\n      mstore\n        /* \"#utility.yul\":7911:7913   */\n      0x1b\n        /* \"#utility.yul\":7891:7909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7884:7914   */\n      mstore\n        /* \"#utility.yul\":7950:7979   */\n      0x57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000\n        /* \"#utility.yul\":7930:7948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7923:7980   */\n      mstore\n        /* \"#utility.yul\":7997:8015   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":3500:3564  require(isPublicMintOpen == true, \"Whitelist not open to mint.\") */\n      tag_197\n        /* \"#utility.yul\":7670:8021   */\n      jump\n        /* \"MintNagaKid.sol\":3500:3564  require(isPublicMintOpen == true, \"Whitelist not open to mint.\") */\n    tag_319:\n        /* \"MintNagaKid.sol\":3583:3592  tx.origin */\n      origin\n        /* \"MintNagaKid.sol\":3596:3606  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":3583:3606  tx.origin == msg.sender */\n      eq\n        /* \"MintNagaKid.sol\":3575:3638  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13036:13038   */\n      0x20\n        /* \"MintNagaKid.sol\":3575:3638  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13018:13039   */\n      mstore\n        /* \"#utility.yul\":13075:13077   */\n      0x1b\n        /* \"#utility.yul\":13055:13073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13048:13078   */\n      mstore\n        /* \"#utility.yul\":13114:13143   */\n      0x6861686120436f6e74726163742063616e27742063616c6c206d650000000000\n        /* \"#utility.yul\":13094:13112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13087:13144   */\n      mstore\n        /* \"#utility.yul\":13161:13179   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":3575:3638  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_197\n        /* \"#utility.yul\":12834:13185   */\n      jump\n        /* \"MintNagaKid.sol\":3575:3638  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n    tag_321:\n        /* \"MintNagaKid.sol\":3672:3682  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":4522:4526  bool */\n      0x00\n        /* \"MintNagaKid.sol\":4546:4568  _isPublicMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4546:4561  _isPublicMinted */\n      0x07\n        /* \"MintNagaKid.sol\":4546:4568  _isPublicMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MintNagaKid.sol\":3657:3691  isPublicMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":3687:3691  true */\n      0x01\n        /* \"MintNagaKid.sol\":3657:3691  isPublicMinted(msg.sender) != true */\n      sub\n        /* \"MintNagaKid.sol\":3649:3719  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8833:8835   */\n      0x20\n        /* \"MintNagaKid.sol\":3649:3719  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8815:8836   */\n      mstore\n        /* \"#utility.yul\":8872:8874   */\n      0x17\n        /* \"#utility.yul\":8852:8870   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8845:8875   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":8891:8909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8884:8937   */\n      mstore\n        /* \"#utility.yul\":8954:8972   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":3649:3719  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_197\n        /* \"#utility.yul\":8631:8978   */\n      jump\n        /* \"MintNagaKid.sol\":3649:3719  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_325:\n        /* \"MintNagaKid.sol\":3761:3765  1111 */\n      0x0457\n        /* \"MintNagaKid.sol\":3738:3754  getTotalSupply() */\n      tag_327\n        /* \"MintNagaKid.sol\":3738:3752  getTotalSupply */\n      tag_157\n        /* \"MintNagaKid.sol\":3738:3754  getTotalSupply() */\n      jump\t// in\n    tag_327:\n        /* \"MintNagaKid.sol\":3738:3758  getTotalSupply() + 1 */\n      tag_328\n      swap1\n        /* \"MintNagaKid.sol\":3757:3758  1 */\n      0x01\n        /* \"MintNagaKid.sol\":3738:3758  getTotalSupply() + 1 */\n      tag_210\n      jump\t// in\n    tag_328:\n        /* \"MintNagaKid.sol\":3738:3765  getTotalSupply() + 1 < 1111 */\n      lt\n        /* \"MintNagaKid.sol\":3730:3787  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13392:13394   */\n      0x20\n        /* \"MintNagaKid.sol\":3730:3787  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13374:13395   */\n      mstore\n        /* \"#utility.yul\":13431:13433   */\n      0x12\n        /* \"#utility.yul\":13411:13429   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13404:13434   */\n      mstore\n      shl(0x72, 0x13dd995c8814dd5c1c1b1e48105b5bdd5b9d)\n        /* \"#utility.yul\":13450:13468   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13443:13491   */\n      mstore\n        /* \"#utility.yul\":13508:13526   */\n      0x64\n      add\n        /* \"MintNagaKid.sol\":3730:3787  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      tag_197\n        /* \"#utility.yul\":13190:13532   */\n      jump\n        /* \"MintNagaKid.sol\":3730:3787  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n    tag_329:\n        /* \"MintNagaKid.sol\":3806:3821  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":3830:3859  NagaKidContract.MINTER_ROLE() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5391393)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":3806:3821  NagaKidContract */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"MintNagaKid.sol\":3806:3829  NagaKidContract.hasRole */\n      0x91d14854\n      swap2\n        /* \"MintNagaKid.sol\":3806:3821  NagaKidContract */\n      dup4\n      swap2\n        /* \"MintNagaKid.sol\":3830:3857  NagaKidContract.MINTER_ROLE */\n      0xd5391393\n      swap2\n        /* \"MintNagaKid.sol\":3830:3859  NagaKidContract.MINTER_ROLE() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKid.sol\":3806:3821  NagaKidContract */\n      dup7\n        /* \"MintNagaKid.sol\":3830:3859  NagaKidContract.MINTER_ROLE() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_334:\n        /* \"MintNagaKid.sol\":3806:3874  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9346:9371   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"MintNagaKid.sol\":3868:3872  this */\n      address\n        /* \"#utility.yul\":9387:9405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9380:9440   */\n      mstore\n        /* \"#utility.yul\":9319:9337   */\n      0x44\n      add\n        /* \"MintNagaKid.sol\":3806:3874  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_338\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_338:\n        /* \"MintNagaKid.sol\":3806:3882  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true */\n      iszero\n      iszero\n        /* \"MintNagaKid.sol\":3878:3882  true */\n      0x01\n        /* \"MintNagaKid.sol\":3806:3882  NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true */\n      eq\n        /* \"MintNagaKid.sol\":3798:3928  require(NagaKidContract.hasRole(NagaKidContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_230\n      jump\t// in\n    tag_339:\n        /* \"MintNagaKid.sol\":3954:3960  signer */\n      sload(0x04)\n        /* \"MintNagaKid.sol\":3947:3977  verify(signer,msg.sender,_sig) */\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      dup6\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup4\n      dup2\n      mstore\n      tag_341\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":3954:3960  signer */\n      and\n      swap2\n        /* \"MintNagaKid.sol\":3961:3971  msg.sender */\n      caller\n      swap2\n        /* \"MintNagaKid.sol\":3947:3977  verify(signer,msg.sender,_sig) */\n      swap1\n        /* \"MintNagaKid.sol\":3972:3976  _sig */\n      dup7\n      swap1\n      dup7\n      swap1\n      dup2\n      swap1\n        /* \"MintNagaKid.sol\":3947:3977  verify(signer,msg.sender,_sig) */\n      dup5\n      add\n        /* \"MintNagaKid.sol\":3972:3976  _sig */\n      dup4\n      dup3\n      dup1\n      dup3\n        /* \"MintNagaKid.sol\":3947:3977  verify(signer,msg.sender,_sig) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"MintNagaKid.sol\":3947:3953  verify */\n      tag_95\n      swap3\n      pop\n      pop\n      pop\n        /* \"MintNagaKid.sol\":3947:3977  verify(signer,msg.sender,_sig) */\n      jump\t// in\n    tag_341:\n        /* \"MintNagaKid.sol\":3939:4016  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13739:13741   */\n      0x20\n        /* \"MintNagaKid.sol\":3939:4016  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13721:13742   */\n      mstore\n        /* \"#utility.yul\":13778:13780   */\n      0x22\n        /* \"#utility.yul\":13758:13776   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13751:13781   */\n      mstore\n        /* \"#utility.yul\":13817:13851   */\n      0x556e617574686f72697a6564205075626c69634d696e74205468697320557365\n        /* \"#utility.yul\":13797:13815   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13790:13852   */\n      mstore\n      shl(0xf1, 0x3917)\n        /* \"#utility.yul\":13868:13886   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13861:13893   */\n      mstore\n        /* \"#utility.yul\":13910:13929   */\n      0x84\n      add\n        /* \"MintNagaKid.sol\":3939:4016  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_197\n        /* \"#utility.yul\":13537:13935   */\n      jump\n        /* \"MintNagaKid.sol\":3939:4016  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n    tag_342:\n        /* \"MintNagaKid.sol\":4045:4055  msg.sender */\n      caller\n        /* \"MintNagaKid.sol\":4029:4056  _isPublicMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4029:4044  _isPublicMinted */\n      0x07\n        /* \"MintNagaKid.sol\":4029:4056  _isPublicMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"MintNagaKid.sol\":4029:4063  _isPublicMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"MintNagaKid.sol\":4059:4063  true */\n      0x01\n        /* \"MintNagaKid.sol\":4029:4063  _isPublicMinted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"MintNagaKid.sol\":4074:4089  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":4074:4110  NagaKidContract.safeMint(msg.sender) */\n      swap1\n      mload\n      shl(0xe0, 0x40d097c3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1395:1446   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4074:4089  NagaKidContract */\n      and\n      swap1\n        /* \"MintNagaKid.sol\":4074:4098  NagaKidContract.safeMint */\n      0x40d097c3\n      swap1\n        /* \"#utility.yul\":1368:1386   */\n      0x24\n      add\n        /* \"MintNagaKid.sol\":4074:4110  NagaKidContract.safeMint(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_346:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n      pop\n        /* \"MintNagaKid.sol\":4138:4178  PublicMinted(msg.sender,block.timestamp) */\n      mload(0x40)\n        /* \"MintNagaKid.sol\":4162:4177  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1031:1056   */\n      dup2\n      mstore\n        /* \"MintNagaKid.sol\":4151:4161  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"MintNagaKid.sol\":4138:4178  PublicMinted(msg.sender,block.timestamp) */\n      0xab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b\n      swap2\n      pop\n        /* \"#utility.yul\":1019:1021   */\n      0x20\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"MintNagaKid.sol\":4138:4178  PublicMinted(msg.sender,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"MintNagaKid.sol\":3411:4186  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n      jump\t// out\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_175:\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":14182:14248   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":14170:14249   */\n      mstore\n        /* \"#utility.yul\":14265:14277   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":14258:14286   */\n      dup3\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":14302:14314   */\n      0x5c\n      add\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_192\n        /* \"#utility.yul\":13940:14320   */\n      jump\n        /* \"MintNagaKid.sol\":1923:2098  function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_355\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_355:\n        /* \"MintNagaKid.sol\":2014:2033  isWhitelistMintOpen */\n      0x03\n        /* \"MintNagaKid.sol\":2014:2043  isWhitelistMintOpen = _isOpen */\n      dup1\n      sload\n      dup4\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"MintNagaKid.sol\":2061:2090  SetWhitelistMintOpen(_isOpen) */\n      mload(0x40)\n      0x1e78b6fb38a6776b3b021a6298e924f52991aa2bb97dd89e0a8cd9765df86367\n      swap1\n      tag_276\n      swap1\n        /* \"MintNagaKid.sol\":2036:2043  _isOpen */\n      dup5\n        /* \"#utility.yul\":470:484   */\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n      swap1\n        /* \"#utility.yul\":305:492   */\n      jump\n        /* \"MintNagaKid.sol\":4818:4914  function isPause() public view returns (bool) {... */\n    tag_183:\n        /* \"MintNagaKid.sol\":4882:4897  NagaKidContract */\n      sload(0x03)\n        /* \"MintNagaKid.sol\":4882:4906  NagaKidContract.paused() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x5c975abb)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKid.sol\":4858:4862  bool */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKid.sol\":4882:4897  NagaKidContract */\n      and\n      swap2\n        /* \"MintNagaKid.sol\":4882:4904  NagaKidContract.paused */\n      0x5c975abb\n      swap2\n        /* \"MintNagaKid.sol\":4882:4906  NagaKidContract.paused() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKid.sol\":4882:4897  NagaKidContract */\n      dup7\n        /* \"MintNagaKid.sol\":4882:4906  NagaKidContract.paused() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_363\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_365\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_210\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_367\n      jumpi\n      tag_367\n      tag_368\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_369\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_369:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_371\n      tag_372\n      jump\t// in\n    tag_371:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_372\n      jump\t// in\n    tag_374:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_378\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_364\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_379\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_210\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_376\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_381\n      jumpi\n      tag_381\n      tag_372\n      jump\t// in\n    tag_381:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_383\n      jumpi\n      tag_383\n      tag_372\n      jump\t// in\n    tag_383:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n      tag_384\n      dup2\n      tag_385\n      jump\t// in\n    tag_384:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_375)\n    tag_376:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14973:14975   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14955:14976   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14992:15010   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14985:15015   */\n      mstore\n        /* \"#utility.yul\":15051:15085   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":15031:15049   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15024:15086   */\n      mstore\n        /* \"#utility.yul\":15103:15121   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_197\n        /* \"#utility.yul\":14771:15127   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Whitelist.sol\":195:598  function isWhitelist(... */\n    tag_232:\n        /* \"Whitelist.sol\":332:336  bool */\n      0x00\n        /* \"Whitelist.sol\":353:363  merkleRoot */\n      dup1\n      sload\n        /* \"Whitelist.sol\":353:368  merkleRoot == 0 */\n      dup2\n      sub\n        /* \"Whitelist.sol\":349:409  if (merkleRoot == 0) {... */\n      tag_391\n      jumpi\n      pop\n        /* \"Whitelist.sol\":392:397  false */\n      0x00\n        /* \"Whitelist.sol\":385:397  return false */\n      jump(tag_390)\n        /* \"Whitelist.sol\":349:409  if (merkleRoot == 0) {... */\n    tag_391:\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      tag_392\n        /* \"Whitelist.sol\":478:484  _proof */\n      dup6\n      dup6\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      dup3\n      swap1\n      mstore\n      pop\n        /* \"Whitelist.sol\":503:513  merkleRoot */\n      sload\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":15309:15311   */\n      0x60\n        /* \"#utility.yul\":15305:15320   */\n      dup12\n      swap1\n      shl\n        /* \"#utility.yul\":15301:15354   */\n      and\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":15289:15355   */\n      mstore\n        /* \"#utility.yul\":15371:15383   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":15364:15392   */\n      dup10\n      swap1\n      mstore\n        /* \"Whitelist.sol\":503:513  merkleRoot */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":15408:15420   */\n      0x54\n      add\n      swap2\n      pop\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      tag_393\n      swap1\n      pop\n        /* \"#utility.yul\":15132:15426   */\n      jump\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n    tag_393:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Whitelist.sol\":532:575  keccak256(abi.encodePacked(_user, _amount)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Whitelist.sol\":441:459  MerkleProof.verify */\n      tag_395\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      jump\t// in\n    tag_392:\n        /* \"Whitelist.sol\":421:590  return... */\n      swap1\n      pop\n        /* \"Whitelist.sol\":195:598  function isWhitelist(... */\n    tag_390:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_397\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_399\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_401\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      swap3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_406\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7729  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1275:1279  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1327:1331  root */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      tag_410\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1311:1316  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1318:1322  leaf */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1310  processProof */\n      tag_411\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1331  processProof(proof, leaf) == root */\n      eq\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_413\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_415\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_416\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_417\n      swap3\n      swap2\n      swap1\n      tag_418\n      jump\t// in\n    tag_417:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_197\n      swap2\n      0x04\n      add\n      tag_420\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1814:1818  leaf */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1857  proof */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1864  proof.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1849  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1864  i < proof.length */\n      lt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      iszero\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1905  bytes32 proofElement */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1913  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1914:1915  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1916  proof[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_426\n      jumpi\n      tag_426\n      tag_372\n      jump\t// in\n    tag_426:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1916  bytes32 proofElement = proof[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1950:1962  proofElement */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1946  computedHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1962  computedHash <= proofElement */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2060:2117  computedHash = _efficientHash(computedHash, proofElement) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      jump(tag_430)\n    tag_427:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2234:2291  computedHash = _efficientHash(proofElement, computedHash) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n    tag_430:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1866:1869  i++ */\n      dup1\n      tag_432\n      dup2\n      tag_245\n      jump\t// in\n    tag_432:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      jump(tag_422)\n    tag_423:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2332:2344  computedHash */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_42:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_441:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:628   */\n    tag_434:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":572:603   */\n      dup2\n      and\n        /* \"#utility.yul\":562:604   */\n      dup2\n      eq\n        /* \"#utility.yul\":552:622   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":618:619   */\n      0x00\n        /* \"#utility.yul\":615:616   */\n      dup1\n        /* \"#utility.yul\":608:620   */\n      revert\n        /* \"#utility.yul\":633:880   */\n    tag_53:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":745:747   */\n      0x20\n        /* \"#utility.yul\":733:742   */\n      dup3\n        /* \"#utility.yul\":724:731   */\n      dup5\n        /* \"#utility.yul\":720:743   */\n      sub\n        /* \"#utility.yul\":716:748   */\n      slt\n        /* \"#utility.yul\":713:765   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":758:759   */\n      dup1\n        /* \"#utility.yul\":751:763   */\n      revert\n        /* \"#utility.yul\":713:765   */\n    tag_447:\n        /* \"#utility.yul\":800:809   */\n      dup2\n        /* \"#utility.yul\":787:810   */\n      calldataload\n        /* \"#utility.yul\":819:850   */\n      tag_386\n        /* \"#utility.yul\":844:849   */\n      dup2\n        /* \"#utility.yul\":819:850   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":1457:1637   */\n    tag_71:\n        /* \"#utility.yul\":1516:1522   */\n      0x00\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1557:1566   */\n      dup3\n        /* \"#utility.yul\":1548:1555   */\n      dup5\n        /* \"#utility.yul\":1544:1567   */\n      sub\n        /* \"#utility.yul\":1540:1572   */\n      slt\n        /* \"#utility.yul\":1537:1589   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1582:1583   */\n      dup1\n        /* \"#utility.yul\":1575:1587   */\n      revert\n        /* \"#utility.yul\":1537:1589   */\n    tag_453:\n      pop\n        /* \"#utility.yul\":1608:1631   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1457:1637   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1642:2331   */\n    tag_76:\n        /* \"#utility.yul\":1737:1743   */\n      0x00\n        /* \"#utility.yul\":1745:1751   */\n      dup1\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1794:1803   */\n      dup5\n        /* \"#utility.yul\":1785:1792   */\n      dup7\n        /* \"#utility.yul\":1781:1804   */\n      sub\n        /* \"#utility.yul\":1777:1809   */\n      slt\n        /* \"#utility.yul\":1774:1826   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      dup1\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1774:1826   */\n    tag_455:\n        /* \"#utility.yul\":1862:1871   */\n      dup4\n        /* \"#utility.yul\":1849:1872   */\n      calldataload\n        /* \"#utility.yul\":1891:1909   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1932:1934   */\n      dup1\n        /* \"#utility.yul\":1924:1930   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      gt\n        /* \"#utility.yul\":1918:1952   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":1948:1949   */\n      0x00\n        /* \"#utility.yul\":1945:1946   */\n      dup1\n        /* \"#utility.yul\":1938:1950   */\n      revert\n        /* \"#utility.yul\":1918:1952   */\n    tag_456:\n        /* \"#utility.yul\":1986:1992   */\n      dup2\n        /* \"#utility.yul\":1975:1984   */\n      dup7\n        /* \"#utility.yul\":1971:1993   */\n      add\n        /* \"#utility.yul\":1961:1993   */\n      swap2\n      pop\n        /* \"#utility.yul\":2031:2038   */\n      dup7\n        /* \"#utility.yul\":2024:2028   */\n      0x1f\n        /* \"#utility.yul\":2020:2022   */\n      dup4\n        /* \"#utility.yul\":2016:2029   */\n      add\n        /* \"#utility.yul\":2012:2039   */\n      slt\n        /* \"#utility.yul\":2002:2057   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2053:2054   */\n      0x00\n        /* \"#utility.yul\":2050:2051   */\n      dup1\n        /* \"#utility.yul\":2043:2055   */\n      revert\n        /* \"#utility.yul\":2002:2057   */\n    tag_457:\n        /* \"#utility.yul\":2093:2095   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      calldataload\n        /* \"#utility.yul\":2119:2121   */\n      dup2\n        /* \"#utility.yul\":2111:2117   */\n      dup2\n        /* \"#utility.yul\":2108:2122   */\n      gt\n        /* \"#utility.yul\":2105:2139   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2132:2133   */\n      dup1\n        /* \"#utility.yul\":2125:2137   */\n      revert\n        /* \"#utility.yul\":2105:2139   */\n    tag_458:\n        /* \"#utility.yul\":2190:2197   */\n      dup8\n        /* \"#utility.yul\":2183:2187   */\n      0x20\n        /* \"#utility.yul\":2173:2179   */\n      dup3\n        /* \"#utility.yul\":2170:2171   */\n      0x05\n        /* \"#utility.yul\":2166:2180   */\n      shl\n        /* \"#utility.yul\":2162:2164   */\n      dup6\n        /* \"#utility.yul\":2158:2181   */\n      add\n        /* \"#utility.yul\":2154:2188   */\n      add\n        /* \"#utility.yul\":2151:2198   */\n      gt\n        /* \"#utility.yul\":2148:2215   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2208:2209   */\n      dup1\n        /* \"#utility.yul\":2201:2213   */\n      revert\n        /* \"#utility.yul\":2148:2215   */\n    tag_459:\n        /* \"#utility.yul\":2242:2246   */\n      0x20\n        /* \"#utility.yul\":2234:2247   */\n      swap3\n      dup4\n      add\n      swap9\n        /* \"#utility.yul\":2266:2272   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":2304:2324   */\n      swap6\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2291:2325   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":1642:2331   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2336:2651   */\n    tag_85:\n        /* \"#utility.yul\":2404:2410   */\n      0x00\n        /* \"#utility.yul\":2412:2418   */\n      dup1\n        /* \"#utility.yul\":2465:2467   */\n      0x40\n        /* \"#utility.yul\":2453:2462   */\n      dup4\n        /* \"#utility.yul\":2444:2451   */\n      dup6\n        /* \"#utility.yul\":2440:2463   */\n      sub\n        /* \"#utility.yul\":2436:2468   */\n      slt\n        /* \"#utility.yul\":2433:2485   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":2481:2482   */\n      0x00\n        /* \"#utility.yul\":2478:2479   */\n      dup1\n        /* \"#utility.yul\":2471:2483   */\n      revert\n        /* \"#utility.yul\":2433:2485   */\n    tag_461:\n        /* \"#utility.yul\":2517:2526   */\n      dup3\n        /* \"#utility.yul\":2504:2527   */\n      calldataload\n        /* \"#utility.yul\":2494:2527   */\n      swap2\n      pop\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2566:2575   */\n      dup4\n        /* \"#utility.yul\":2562:2580   */\n      add\n        /* \"#utility.yul\":2549:2581   */\n      calldataload\n        /* \"#utility.yul\":2590:2621   */\n      tag_462\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2590:2621   */\n      tag_434\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":2640:2645   */\n      dup1\n        /* \"#utility.yul\":2630:2645   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2336:2651   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2656:2783   */\n    tag_368:\n        /* \"#utility.yul\":2717:2727   */\n      0x4e487b71\n        /* \"#utility.yul\":2712:2715   */\n      0xe0\n        /* \"#utility.yul\":2708:2728   */\n      shl\n        /* \"#utility.yul\":2705:2706   */\n      0x00\n        /* \"#utility.yul\":2698:2729   */\n      mstore\n        /* \"#utility.yul\":2748:2752   */\n      0x41\n        /* \"#utility.yul\":2745:2746   */\n      0x04\n        /* \"#utility.yul\":2738:2753   */\n      mstore\n        /* \"#utility.yul\":2772:2776   */\n      0x24\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2762:2777   */\n      revert\n        /* \"#utility.yul\":2788:3506   */\n    tag_435:\n        /* \"#utility.yul\":2830:2835   */\n      0x00\n        /* \"#utility.yul\":2883:2886   */\n      dup3\n        /* \"#utility.yul\":2876:2880   */\n      0x1f\n        /* \"#utility.yul\":2868:2874   */\n      dup4\n        /* \"#utility.yul\":2864:2881   */\n      add\n        /* \"#utility.yul\":2860:2887   */\n      slt\n        /* \"#utility.yul\":2850:2905   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2898:2899   */\n      dup1\n        /* \"#utility.yul\":2891:2903   */\n      revert\n        /* \"#utility.yul\":2850:2905   */\n    tag_465:\n        /* \"#utility.yul\":2937:2943   */\n      dup2\n        /* \"#utility.yul\":2924:2944   */\n      calldataload\n        /* \"#utility.yul\":2963:2981   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3000:3002   */\n      dup1\n        /* \"#utility.yul\":2996:2998   */\n      dup3\n        /* \"#utility.yul\":2993:3003   */\n      gt\n        /* \"#utility.yul\":2990:3026   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3006:3024   */\n      tag_467\n      tag_368\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":3081:3083   */\n      0x40\n        /* \"#utility.yul\":3075:3084   */\n      mload\n        /* \"#utility.yul\":3049:3051   */\n      0x1f\n        /* \"#utility.yul\":3135:3148   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3131:3153   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3155:3157   */\n      0x3f\n        /* \"#utility.yul\":3127:3158   */\n      add\n        /* \"#utility.yul\":3123:3163   */\n      and\n        /* \"#utility.yul\":3111:3164   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3179:3197   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3199:3221   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3176:3222   */\n      or\n        /* \"#utility.yul\":3173:3245   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":3225:3243   */\n      tag_469\n      tag_368\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3265:3275   */\n      dup2\n        /* \"#utility.yul\":3261:3263   */\n      0x40\n        /* \"#utility.yul\":3254:3276   */\n      mstore\n        /* \"#utility.yul\":3300:3302   */\n      dup4\n        /* \"#utility.yul\":3292:3298   */\n      dup2\n        /* \"#utility.yul\":3285:3303   */\n      mstore\n        /* \"#utility.yul\":3346:3349   */\n      dup7\n        /* \"#utility.yul\":3339:3343   */\n      0x20\n        /* \"#utility.yul\":3334:3336   */\n      dup6\n        /* \"#utility.yul\":3326:3332   */\n      dup9\n        /* \"#utility.yul\":3322:3337   */\n      add\n        /* \"#utility.yul\":3318:3344   */\n      add\n        /* \"#utility.yul\":3315:3350   */\n      gt\n        /* \"#utility.yul\":3312:3367   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":3363:3364   */\n      0x00\n        /* \"#utility.yul\":3360:3361   */\n      dup1\n        /* \"#utility.yul\":3353:3365   */\n      revert\n        /* \"#utility.yul\":3312:3367   */\n    tag_470:\n        /* \"#utility.yul\":3427:3429   */\n      dup4\n        /* \"#utility.yul\":3420:3424   */\n      0x20\n        /* \"#utility.yul\":3412:3418   */\n      dup8\n        /* \"#utility.yul\":3408:3425   */\n      add\n        /* \"#utility.yul\":3401:3405   */\n      0x20\n        /* \"#utility.yul\":3393:3399   */\n      dup4\n        /* \"#utility.yul\":3389:3406   */\n      add\n        /* \"#utility.yul\":3376:3430   */\n      calldatacopy\n        /* \"#utility.yul\":3474:3475   */\n      0x00\n        /* \"#utility.yul\":3467:3471   */\n      0x20\n        /* \"#utility.yul\":3462:3464   */\n      dup6\n        /* \"#utility.yul\":3454:3460   */\n      dup4\n        /* \"#utility.yul\":3450:3465   */\n      add\n        /* \"#utility.yul\":3446:3472   */\n      add\n        /* \"#utility.yul\":3439:3476   */\n      mstore\n        /* \"#utility.yul\":3494:3500   */\n      dup1\n        /* \"#utility.yul\":3485:3500   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2788:3506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:4107   */\n    tag_94:\n        /* \"#utility.yul\":3597:3603   */\n      0x00\n        /* \"#utility.yul\":3605:3611   */\n      dup1\n        /* \"#utility.yul\":3613:3619   */\n      0x00\n        /* \"#utility.yul\":3666:3668   */\n      0x60\n        /* \"#utility.yul\":3654:3663   */\n      dup5\n        /* \"#utility.yul\":3645:3652   */\n      dup7\n        /* \"#utility.yul\":3641:3664   */\n      sub\n        /* \"#utility.yul\":3637:3669   */\n      slt\n        /* \"#utility.yul\":3634:3686   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":3682:3683   */\n      0x00\n        /* \"#utility.yul\":3679:3680   */\n      dup1\n        /* \"#utility.yul\":3672:3684   */\n      revert\n        /* \"#utility.yul\":3634:3686   */\n    tag_472:\n        /* \"#utility.yul\":3721:3730   */\n      dup4\n        /* \"#utility.yul\":3708:3731   */\n      calldataload\n        /* \"#utility.yul\":3740:3771   */\n      tag_473\n        /* \"#utility.yul\":3765:3770   */\n      dup2\n        /* \"#utility.yul\":3740:3771   */\n      tag_434\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3790:3795   */\n      swap3\n      pop\n        /* \"#utility.yul\":3847:3849   */\n      0x20\n        /* \"#utility.yul\":3832:3850   */\n      dup5\n      add\n        /* \"#utility.yul\":3819:3851   */\n      calldataload\n        /* \"#utility.yul\":3860:3893   */\n      tag_474\n        /* \"#utility.yul\":3819:3851   */\n      dup2\n        /* \"#utility.yul\":3860:3893   */\n      tag_434\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3912:3919   */\n      swap2\n      pop\n        /* \"#utility.yul\":3970:3972   */\n      0x40\n        /* \"#utility.yul\":3955:3973   */\n      dup5\n      add\n        /* \"#utility.yul\":3942:3974   */\n      calldataload\n        /* \"#utility.yul\":3997:4015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3986:4016   */\n      dup2\n      gt\n        /* \"#utility.yul\":3983:4033   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4026:4027   */\n      dup1\n        /* \"#utility.yul\":4019:4031   */\n      revert\n        /* \"#utility.yul\":3983:4033   */\n    tag_475:\n        /* \"#utility.yul\":4052:4101   */\n      tag_476\n        /* \"#utility.yul\":4093:4100   */\n      dup7\n        /* \"#utility.yul\":4084:4090   */\n      dup3\n        /* \"#utility.yul\":4073:4082   */\n      dup8\n        /* \"#utility.yul\":4069:4091   */\n      add\n        /* \"#utility.yul\":4052:4101   */\n      tag_435\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4042:4101   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3511:4107   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4112:4230   */\n    tag_436:\n        /* \"#utility.yul\":4198:4203   */\n      dup1\n        /* \"#utility.yul\":4191:4204   */\n      iszero\n        /* \"#utility.yul\":4184:4205   */\n      iszero\n        /* \"#utility.yul\":4177:4182   */\n      dup2\n        /* \"#utility.yul\":4174:4206   */\n      eq\n        /* \"#utility.yul\":4164:4224   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4220:4221   */\n      0x00\n        /* \"#utility.yul\":4217:4218   */\n      dup1\n        /* \"#utility.yul\":4210:4222   */\n      revert\n        /* \"#utility.yul\":4235:4476   */\n    tag_109:\n        /* \"#utility.yul\":4291:4297   */\n      0x00\n        /* \"#utility.yul\":4344:4346   */\n      0x20\n        /* \"#utility.yul\":4332:4341   */\n      dup3\n        /* \"#utility.yul\":4323:4330   */\n      dup5\n        /* \"#utility.yul\":4319:4342   */\n      sub\n        /* \"#utility.yul\":4315:4347   */\n      slt\n        /* \"#utility.yul\":4312:4364   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4360:4361   */\n      0x00\n        /* \"#utility.yul\":4357:4358   */\n      dup1\n        /* \"#utility.yul\":4350:4362   */\n      revert\n        /* \"#utility.yul\":4312:4364   */\n    tag_480:\n        /* \"#utility.yul\":4399:4408   */\n      dup2\n        /* \"#utility.yul\":4386:4409   */\n      calldataload\n        /* \"#utility.yul\":4418:4446   */\n      tag_386\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4418:4446   */\n      tag_436\n      jump\t// in\n        /* \"#utility.yul\":4708:5096   */\n    tag_132:\n        /* \"#utility.yul\":4785:4791   */\n      0x00\n        /* \"#utility.yul\":4793:4799   */\n      dup1\n        /* \"#utility.yul\":4846:4848   */\n      0x40\n        /* \"#utility.yul\":4834:4843   */\n      dup4\n        /* \"#utility.yul\":4825:4832   */\n      dup6\n        /* \"#utility.yul\":4821:4844   */\n      sub\n        /* \"#utility.yul\":4817:4849   */\n      slt\n        /* \"#utility.yul\":4814:4866   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4859:4860   */\n      dup1\n        /* \"#utility.yul\":4852:4864   */\n      revert\n        /* \"#utility.yul\":4814:4866   */\n    tag_484:\n        /* \"#utility.yul\":4898:4907   */\n      dup3\n        /* \"#utility.yul\":4885:4908   */\n      calldataload\n        /* \"#utility.yul\":4875:4908   */\n      swap2\n      pop\n        /* \"#utility.yul\":4959:4961   */\n      0x20\n        /* \"#utility.yul\":4948:4957   */\n      dup4\n        /* \"#utility.yul\":4944:4962   */\n      add\n        /* \"#utility.yul\":4931:4963   */\n      calldataload\n        /* \"#utility.yul\":4986:5004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4978:4984   */\n      dup2\n        /* \"#utility.yul\":4975:5005   */\n      gt\n        /* \"#utility.yul\":4972:5022   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":5018:5019   */\n      0x00\n        /* \"#utility.yul\":5015:5016   */\n      dup1\n        /* \"#utility.yul\":5008:5020   */\n      revert\n        /* \"#utility.yul\":4972:5022   */\n    tag_485:\n        /* \"#utility.yul\":5041:5090   */\n      tag_486\n        /* \"#utility.yul\":5082:5089   */\n      dup6\n        /* \"#utility.yul\":5073:5079   */\n      dup3\n        /* \"#utility.yul\":5062:5071   */\n      dup7\n        /* \"#utility.yul\":5058:5080   */\n      add\n        /* \"#utility.yul\":5041:5090   */\n      tag_435\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5031:5090   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4708:5096   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5372:5692   */\n    tag_151:\n        /* \"#utility.yul\":5440:5446   */\n      0x00\n        /* \"#utility.yul\":5493:5495   */\n      0x20\n        /* \"#utility.yul\":5481:5490   */\n      dup3\n        /* \"#utility.yul\":5472:5479   */\n      dup5\n        /* \"#utility.yul\":5468:5491   */\n      sub\n        /* \"#utility.yul\":5464:5496   */\n      slt\n        /* \"#utility.yul\":5461:5513   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":5509:5510   */\n      0x00\n        /* \"#utility.yul\":5506:5507   */\n      dup1\n        /* \"#utility.yul\":5499:5511   */\n      revert\n        /* \"#utility.yul\":5461:5513   */\n    tag_491:\n        /* \"#utility.yul\":5549:5558   */\n      dup2\n        /* \"#utility.yul\":5536:5559   */\n      calldataload\n        /* \"#utility.yul\":5582:5600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5574:5580   */\n      dup2\n        /* \"#utility.yul\":5571:5601   */\n      gt\n        /* \"#utility.yul\":5568:5618   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5614:5615   */\n      0x00\n        /* \"#utility.yul\":5611:5612   */\n      dup1\n        /* \"#utility.yul\":5604:5616   */\n      revert\n        /* \"#utility.yul\":5568:5618   */\n    tag_492:\n        /* \"#utility.yul\":5637:5686   */\n      tag_390\n        /* \"#utility.yul\":5678:5685   */\n      dup5\n        /* \"#utility.yul\":5669:5675   */\n      dup3\n        /* \"#utility.yul\":5658:5667   */\n      dup6\n        /* \"#utility.yul\":5654:5676   */\n      add\n        /* \"#utility.yul\":5637:5686   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":6028:6619   */\n    tag_165:\n        /* \"#utility.yul\":6098:6104   */\n      0x00\n        /* \"#utility.yul\":6106:6112   */\n      dup1\n        /* \"#utility.yul\":6159:6161   */\n      0x20\n        /* \"#utility.yul\":6147:6156   */\n      dup4\n        /* \"#utility.yul\":6138:6145   */\n      dup6\n        /* \"#utility.yul\":6134:6157   */\n      sub\n        /* \"#utility.yul\":6130:6162   */\n      slt\n        /* \"#utility.yul\":6127:6179   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":6175:6176   */\n      0x00\n        /* \"#utility.yul\":6172:6173   */\n      dup1\n        /* \"#utility.yul\":6165:6177   */\n      revert\n        /* \"#utility.yul\":6127:6179   */\n    tag_496:\n        /* \"#utility.yul\":6215:6224   */\n      dup3\n        /* \"#utility.yul\":6202:6225   */\n      calldataload\n        /* \"#utility.yul\":6244:6262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6285:6287   */\n      dup1\n        /* \"#utility.yul\":6277:6283   */\n      dup3\n        /* \"#utility.yul\":6274:6288   */\n      gt\n        /* \"#utility.yul\":6271:6305   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6301:6302   */\n      0x00\n        /* \"#utility.yul\":6298:6299   */\n      dup1\n        /* \"#utility.yul\":6291:6303   */\n      revert\n        /* \"#utility.yul\":6271:6305   */\n    tag_497:\n        /* \"#utility.yul\":6339:6345   */\n      dup2\n        /* \"#utility.yul\":6328:6337   */\n      dup6\n        /* \"#utility.yul\":6324:6346   */\n      add\n        /* \"#utility.yul\":6314:6346   */\n      swap2\n      pop\n        /* \"#utility.yul\":6384:6391   */\n      dup6\n        /* \"#utility.yul\":6377:6381   */\n      0x1f\n        /* \"#utility.yul\":6373:6375   */\n      dup4\n        /* \"#utility.yul\":6369:6382   */\n      add\n        /* \"#utility.yul\":6365:6392   */\n      slt\n        /* \"#utility.yul\":6355:6410   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6406:6407   */\n      0x00\n        /* \"#utility.yul\":6403:6404   */\n      dup1\n        /* \"#utility.yul\":6396:6408   */\n      revert\n        /* \"#utility.yul\":6355:6410   */\n    tag_498:\n        /* \"#utility.yul\":6446:6448   */\n      dup2\n        /* \"#utility.yul\":6433:6449   */\n      calldataload\n        /* \"#utility.yul\":6472:6474   */\n      dup2\n        /* \"#utility.yul\":6464:6470   */\n      dup2\n        /* \"#utility.yul\":6461:6475   */\n      gt\n        /* \"#utility.yul\":6458:6492   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":6488:6489   */\n      0x00\n        /* \"#utility.yul\":6485:6486   */\n      dup1\n        /* \"#utility.yul\":6478:6490   */\n      revert\n        /* \"#utility.yul\":6458:6492   */\n    tag_499:\n        /* \"#utility.yul\":6533:6540   */\n      dup7\n        /* \"#utility.yul\":6528:6530   */\n      0x20\n        /* \"#utility.yul\":6519:6525   */\n      dup3\n        /* \"#utility.yul\":6515:6517   */\n      dup6\n        /* \"#utility.yul\":6511:6526   */\n      add\n        /* \"#utility.yul\":6507:6531   */\n      add\n        /* \"#utility.yul\":6504:6541   */\n      gt\n        /* \"#utility.yul\":6501:6558   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":6554:6555   */\n      0x00\n        /* \"#utility.yul\":6551:6552   */\n      dup1\n        /* \"#utility.yul\":6544:6556   */\n      revert\n        /* \"#utility.yul\":6501:6558   */\n    tag_500:\n        /* \"#utility.yul\":6585:6587   */\n      0x20\n        /* \"#utility.yul\":6577:6588   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":6607:6613   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":6028:6619   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8026:8153   */\n    tag_437:\n        /* \"#utility.yul\":8087:8097   */\n      0x4e487b71\n        /* \"#utility.yul\":8082:8085   */\n      0xe0\n        /* \"#utility.yul\":8078:8098   */\n      shl\n        /* \"#utility.yul\":8075:8076   */\n      0x00\n        /* \"#utility.yul\":8068:8099   */\n      mstore\n        /* \"#utility.yul\":8118:8122   */\n      0x11\n        /* \"#utility.yul\":8115:8116   */\n      0x04\n        /* \"#utility.yul\":8108:8123   */\n      mstore\n        /* \"#utility.yul\":8142:8146   */\n      0x24\n        /* \"#utility.yul\":8139:8140   */\n      0x00\n        /* \"#utility.yul\":8132:8147   */\n      revert\n        /* \"#utility.yul\":8158:8286   */\n    tag_210:\n        /* \"#utility.yul\":8198:8201   */\n      0x00\n        /* \"#utility.yul\":8229:8230   */\n      dup3\n        /* \"#utility.yul\":8225:8231   */\n      not\n        /* \"#utility.yul\":8222:8223   */\n      dup3\n        /* \"#utility.yul\":8219:8232   */\n      gt\n        /* \"#utility.yul\":8216:8255   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":8235:8253   */\n      tag_508\n      tag_437\n      jump\t// in\n    tag_508:\n      pop\n        /* \"#utility.yul\":8271:8280   */\n      add\n      swap1\n        /* \"#utility.yul\":8158:8286   */\n      jump\t// out\n        /* \"#utility.yul\":8983:9167   */\n    tag_221:\n        /* \"#utility.yul\":9053:9059   */\n      0x00\n        /* \"#utility.yul\":9106:9108   */\n      0x20\n        /* \"#utility.yul\":9094:9103   */\n      dup3\n        /* \"#utility.yul\":9085:9092   */\n      dup5\n        /* \"#utility.yul\":9081:9104   */\n      sub\n        /* \"#utility.yul\":9077:9109   */\n      slt\n        /* \"#utility.yul\":9074:9126   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":9122:9123   */\n      0x00\n        /* \"#utility.yul\":9119:9120   */\n      dup1\n        /* \"#utility.yul\":9112:9124   */\n      revert\n        /* \"#utility.yul\":9074:9126   */\n    tag_512:\n      pop\n        /* \"#utility.yul\":9145:9161   */\n      mload\n      swap2\n        /* \"#utility.yul\":8983:9167   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9451:9696   */\n    tag_227:\n        /* \"#utility.yul\":9518:9524   */\n      0x00\n        /* \"#utility.yul\":9571:9573   */\n      0x20\n        /* \"#utility.yul\":9559:9568   */\n      dup3\n        /* \"#utility.yul\":9550:9557   */\n      dup5\n        /* \"#utility.yul\":9546:9569   */\n      sub\n        /* \"#utility.yul\":9542:9574   */\n      slt\n        /* \"#utility.yul\":9539:9591   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":9587:9588   */\n      0x00\n        /* \"#utility.yul\":9584:9585   */\n      dup1\n        /* \"#utility.yul\":9577:9589   */\n      revert\n        /* \"#utility.yul\":9539:9591   */\n    tag_515:\n        /* \"#utility.yul\":9619:9628   */\n      dup2\n        /* \"#utility.yul\":9613:9629   */\n      mload\n        /* \"#utility.yul\":9638:9666   */\n      tag_386\n        /* \"#utility.yul\":9660:9665   */\n      dup2\n        /* \"#utility.yul\":9638:9666   */\n      tag_436\n      jump\t// in\n        /* \"#utility.yul\":9701:10107   */\n    tag_230:\n        /* \"#utility.yul\":9903:9905   */\n      0x20\n        /* \"#utility.yul\":9885:9906   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9942:9944   */\n      0x2a\n        /* \"#utility.yul\":9922:9940   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9915:9945   */\n      mstore\n        /* \"#utility.yul\":9981:10015   */\n      0x5468697320436f6e7472616374206e6f742068617665207065726d697373696f\n        /* \"#utility.yul\":9976:9978   */\n      0x40\n        /* \"#utility.yul\":9961:9979   */\n      dup3\n      add\n        /* \"#utility.yul\":9954:10016   */\n      mstore\n      shl(0xb1, 0x37103a379036b4b73a17)\n        /* \"#utility.yul\":10047:10049   */\n      0x60\n        /* \"#utility.yul\":10032:10050   */\n      dup3\n      add\n        /* \"#utility.yul\":10025:10065   */\n      mstore\n        /* \"#utility.yul\":10097:10100   */\n      0x80\n        /* \"#utility.yul\":10082:10101   */\n      add\n      swap1\n        /* \"#utility.yul\":9701:10107   */\n      jump\t// out\n        /* \"#utility.yul\":10518:10653   */\n    tag_245:\n        /* \"#utility.yul\":10557:10560   */\n      0x00\n        /* \"#utility.yul\":10578:10595   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10575:10618   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10598:10616   */\n      tag_521\n      tag_437\n      jump\t// in\n    tag_521:\n      pop\n        /* \"#utility.yul\":10645:10646   */\n      0x01\n        /* \"#utility.yul\":10634:10647   */\n      add\n      swap1\n        /* \"#utility.yul\":10518:10653   */\n      jump\t// out\n        /* \"#utility.yul\":14325:14493   */\n    tag_364:\n        /* \"#utility.yul\":14365:14372   */\n      0x00\n        /* \"#utility.yul\":14431:14432   */\n      dup2\n        /* \"#utility.yul\":14427:14428   */\n      0x00\n        /* \"#utility.yul\":14423:14429   */\n      not\n        /* \"#utility.yul\":14419:14433   */\n      div\n        /* \"#utility.yul\":14416:14417   */\n      dup4\n        /* \"#utility.yul\":14413:14434   */\n      gt\n        /* \"#utility.yul\":14408:14409   */\n      dup3\n        /* \"#utility.yul\":14401:14410   */\n      iszero\n        /* \"#utility.yul\":14394:14411   */\n      iszero\n        /* \"#utility.yul\":14390:14435   */\n      and\n        /* \"#utility.yul\":14387:14458   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":14438:14456   */\n      tag_536\n      tag_437\n      jump\t// in\n    tag_536:\n      pop\n        /* \"#utility.yul\":14478:14487   */\n      mul\n      swap1\n        /* \"#utility.yul\":14325:14493   */\n      jump\t// out\n        /* \"#utility.yul\":14498:14625   */\n    tag_372:\n        /* \"#utility.yul\":14559:14569   */\n      0x4e487b71\n        /* \"#utility.yul\":14554:14557   */\n      0xe0\n        /* \"#utility.yul\":14550:14570   */\n      shl\n        /* \"#utility.yul\":14547:14548   */\n      0x00\n        /* \"#utility.yul\":14540:14571   */\n      mstore\n        /* \"#utility.yul\":14590:14594   */\n      0x32\n        /* \"#utility.yul\":14587:14588   */\n      0x04\n        /* \"#utility.yul\":14580:14595   */\n      mstore\n        /* \"#utility.yul\":14614:14618   */\n      0x24\n        /* \"#utility.yul\":14611:14612   */\n      0x00\n        /* \"#utility.yul\":14604:14619   */\n      revert\n        /* \"#utility.yul\":14630:14766   */\n    tag_385:\n        /* \"#utility.yul\":14669:14672   */\n      0x00\n        /* \"#utility.yul\":14697:14702   */\n      dup2\n        /* \"#utility.yul\":14687:14726   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":14706:14724   */\n      tag_540\n      tag_437\n      jump\t// in\n    tag_540:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":14742:14760   */\n      add\n      swap1\n        /* \"#utility.yul\":14630:14766   */\n      jump\t// out\n        /* \"#utility.yul\":15431:15689   */\n    tag_438:\n        /* \"#utility.yul\":15503:15504   */\n      0x00\n        /* \"#utility.yul\":15513:15626   */\n    tag_544:\n        /* \"#utility.yul\":15527:15533   */\n      dup4\n        /* \"#utility.yul\":15524:15525   */\n      dup2\n        /* \"#utility.yul\":15521:15534   */\n      lt\n        /* \"#utility.yul\":15513:15626   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15603:15614   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15597:15615   */\n      mload\n        /* \"#utility.yul\":15584:15595   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15577:15616   */\n      mstore\n        /* \"#utility.yul\":15549:15551   */\n      0x20\n        /* \"#utility.yul\":15542:15552   */\n      add\n        /* \"#utility.yul\":15513:15626   */\n      jump(tag_544)\n    tag_546:\n        /* \"#utility.yul\":15644:15650   */\n      dup4\n        /* \"#utility.yul\":15641:15642   */\n      dup2\n        /* \"#utility.yul\":15638:15651   */\n      gt\n        /* \"#utility.yul\":15635:15683   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":15679:15680   */\n      0x00\n        /* \"#utility.yul\":15670:15676   */\n      dup5\n        /* \"#utility.yul\":15665:15668   */\n      dup5\n        /* \"#utility.yul\":15661:15677   */\n      add\n        /* \"#utility.yul\":15654:15681   */\n      mstore\n        /* \"#utility.yul\":15635:15683   */\n    tag_547:\n      pop\n        /* \"#utility.yul\":15431:15689   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15694:16480   */\n    tag_418:\n        /* \"#utility.yul\":16105:16130   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":16100:16103   */\n      dup2\n        /* \"#utility.yul\":16093:16131   */\n      mstore\n        /* \"#utility.yul\":16075:16078   */\n      0x00\n        /* \"#utility.yul\":16160:16166   */\n      dup4\n        /* \"#utility.yul\":16154:16167   */\n      mload\n        /* \"#utility.yul\":16176:16238   */\n      tag_549\n        /* \"#utility.yul\":16231:16237   */\n      dup2\n        /* \"#utility.yul\":16226:16228   */\n      0x17\n        /* \"#utility.yul\":16221:16224   */\n      dup6\n        /* \"#utility.yul\":16217:16229   */\n      add\n        /* \"#utility.yul\":16210:16214   */\n      0x20\n        /* \"#utility.yul\":16202:16208   */\n      dup9\n        /* \"#utility.yul\":16198:16215   */\n      add\n        /* \"#utility.yul\":16176:16238   */\n      tag_438\n      jump\t// in\n    tag_549:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":16297:16299   */\n      0x17\n        /* \"#utility.yul\":16257:16273   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":16289:16300   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":16282:16322   */\n      mstore\n        /* \"#utility.yul\":16347:16360   */\n      dup4\n      mload\n        /* \"#utility.yul\":16369:16432   */\n      tag_550\n        /* \"#utility.yul\":16347:16360   */\n      dup2\n        /* \"#utility.yul\":16418:16420   */\n      0x28\n        /* \"#utility.yul\":16410:16421   */\n      dup5\n      add\n        /* \"#utility.yul\":16403:16407   */\n      0x20\n        /* \"#utility.yul\":16391:16408   */\n      dup9\n      add\n        /* \"#utility.yul\":16369:16432   */\n      tag_438\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":16452:16469   */\n      add\n        /* \"#utility.yul\":16471:16473   */\n      0x28\n        /* \"#utility.yul\":16448:16474   */\n      add\n      swap5\n        /* \"#utility.yul\":15694:16480   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16485:16868   */\n    tag_420:\n        /* \"#utility.yul\":16634:16636   */\n      0x20\n        /* \"#utility.yul\":16623:16632   */\n      dup2\n        /* \"#utility.yul\":16616:16637   */\n      mstore\n        /* \"#utility.yul\":16597:16601   */\n      0x00\n        /* \"#utility.yul\":16666:16672   */\n      dup3\n        /* \"#utility.yul\":16660:16673   */\n      mload\n        /* \"#utility.yul\":16709:16715   */\n      dup1\n        /* \"#utility.yul\":16704:16706   */\n      0x20\n        /* \"#utility.yul\":16693:16702   */\n      dup5\n        /* \"#utility.yul\":16689:16707   */\n      add\n        /* \"#utility.yul\":16682:16716   */\n      mstore\n        /* \"#utility.yul\":16725:16791   */\n      tag_552\n        /* \"#utility.yul\":16784:16790   */\n      dup2\n        /* \"#utility.yul\":16779:16781   */\n      0x40\n        /* \"#utility.yul\":16768:16777   */\n      dup6\n        /* \"#utility.yul\":16764:16782   */\n      add\n        /* \"#utility.yul\":16759:16761   */\n      0x20\n        /* \"#utility.yul\":16751:16757   */\n      dup8\n        /* \"#utility.yul\":16747:16762   */\n      add\n        /* \"#utility.yul\":16725:16791   */\n      tag_438\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":16852:16854   */\n      0x1f\n        /* \"#utility.yul\":16831:16846   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16827:16856   */\n      and\n        /* \"#utility.yul\":16812:16857   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16859:16861   */\n      0x40\n        /* \"#utility.yul\":16808:16862   */\n      add\n      swap3\n        /* \"#utility.yul\":16485:16868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f92cda8f8369134a0f93cbf91a4ed4a9b33e267a1c0227f87ecb64be4cb6c0b64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1057": {
									"entryPoint": null,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 440,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 425,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 100,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": null,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setMerkleRoot_1176": {
									"entryPoint": 349,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_1098": {
									"entryPoint": 237,
									"id": 1098,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toHexString_772": {
									"entryPoint": 606,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKidNFT_$958t_bytes32_fromMemory": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3594:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "131:253:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "177:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "186:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "152:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "161:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "148:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "148:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "144:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "144:32:13"
															},
															"nodeType": "YulIf",
															"src": "141:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "202:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "221:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "215:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "215:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "206:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "294:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "306:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "296:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "296:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "296:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "253:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "264:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "279:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "284:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "275:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "275:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "288:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "271:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "271:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "260:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "250:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "243:50:13"
															},
															"nodeType": "YulIf",
															"src": "240:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "319:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "329:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "363:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "374:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "359:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "353:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:25:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKidNFT_$958t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "89:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "100:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "112:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "120:6:13",
														"type": ""
													}
												],
												"src": "14:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "518:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "528:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "540:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "551:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "528:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "563:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "581:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "586:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "577:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "590:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "573:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "567:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "608:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "631:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "619:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "655:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "666:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "675:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "683:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "671:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "644:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "644:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "479:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "490:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "498:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "509:4:13",
														"type": ""
													}
												],
												"src": "389:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "827:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "837:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "872:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "872:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "917:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "933:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "906:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "906:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "788:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "799:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "807:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "818:4:13",
														"type": ""
													}
												],
												"src": "698:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1014:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1023:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1018:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1083:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1108:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1113:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1104:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1104:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1127:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1132:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1123:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1123:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1117:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1117:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1097:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1097:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1044:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1047:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1041:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1055:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1057:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1066:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1069:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1062:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1062:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1057:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1037:3:13",
																"statements": []
															},
															"src": "1033:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1172:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1185:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1190:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1181:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1161:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1164:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1158:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:13:13"
															},
															"nodeType": "YulIf",
															"src": "1155:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "982:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "987:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "992:6:13",
														"type": ""
													}
												],
												"src": "951:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:397:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1620:3:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1625:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1613:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1613:38:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1660:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1674:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1664:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1730:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1718:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:12:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1696:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1696:62:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1767:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1781:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1786:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1771:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1813:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1817:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1809:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:11:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1822:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:40:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1851:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1873:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1867:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "1855:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1915:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1923:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1911:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1934:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1938:2:13",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1930:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1930:11:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1943:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1889:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:63:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:63:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:2:13"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1968:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:26:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1571:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1576:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1584:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1595:3:13",
														"type": ""
													}
												],
												"src": "1214:786:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2126:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2143:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2136:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2180:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2213:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2224:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2202:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2279:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2267:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2288:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2299:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2245:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2245:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2245:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2320:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2336:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2355:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2363:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2351:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2372:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2368:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2368:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2347:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2347:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2379:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2320:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2095:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2106:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2117:4:13",
														"type": ""
													}
												],
												"src": "2005:383:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2425:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2454:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2482:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2475:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2499:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2393:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2577:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2636:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2638:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2638:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2638:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2608:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2601:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2601:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2594:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2616:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2627:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2623:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2623:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2631:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2619:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2619:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2613:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:45:13"
															},
															"nodeType": "YulIf",
															"src": "2587:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2667:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2682:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2685:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2667:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2556:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2559:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2565:7:13",
														"type": ""
													}
												],
												"src": "2525:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2746:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2773:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2775:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2775:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2775:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2762:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2769:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2765:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2759:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:13:13"
															},
															"nodeType": "YulIf",
															"src": "2756:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2804:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2815:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2818:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2729:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2732:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2738:3:13",
														"type": ""
													}
												],
												"src": "2698:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2883:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2883:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2920:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2923:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2913:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2944:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2947:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2937:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2831:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2995:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3012:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3019:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3024:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3005:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3005:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3052:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3076:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3079:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3069:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2963:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3169:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3171:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3171:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3162:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:13:13"
															},
															"nodeType": "YulIf",
															"src": "3152:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3200:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3211:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3222:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3218:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3218:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3124:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3134:3:13",
														"type": ""
													}
												],
												"src": "3095:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3438:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3420:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3420:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3420:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3461:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3472:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3457:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3457:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3450:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3450:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3500:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3511:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3496:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:18:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3516:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3489:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3489:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3489:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3560:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3572:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3387:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3401:4:13",
														"type": ""
													}
												],
												"src": "3236:356:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_INagaKidNFT_$958t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620023a0380380620023a083398101604081905262000034916200041e565b60016002556200004660003362000064565b6200005182620000ed565b6200005c816200015d565b5050620005d4565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000e95760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45b5050565b6000620000fa81620001a9565b600380546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e54191015b60405180910390a1505050565b60006200016a81620001a9565b600080549083905560408051828152602081018590527f8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb65910162000150565b620001b58133620001b8565b50565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000e95762000204816001600160a01b031660146200025e60201b620014501760201c565b6200021a836020620014506200025e821b17811c565b6040516020016200022d9291906200048d565b60408051601f198184030181529082905262461bcd60e51b8252620002559160040162000506565b60405180910390fd5b606060006200026f83600262000551565b6200027c90600262000573565b6001600160401b038111156200029657620002966200058e565b6040519080825280601f01601f191660200182016040528015620002c1576020820181803683370190505b509050600360fc1b81600081518110620002df57620002df620005a4565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620003115762000311620005a4565b60200101906001600160f81b031916908160001a90535060006200033784600262000551565b6200034490600162000573565b90505b6001811115620003c6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200037c576200037c620005a4565b1a60f81b828281518110620003955762000395620005a4565b60200101906001600160f81b031916908160001a90535060049490941c93620003be81620005ba565b905062000347565b508315620004175760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000255565b9392505050565b600080604083850312156200043257600080fd5b82516001600160a01b03811681146200044a57600080fd5b6020939093015192949293505050565b60005b83811015620004775781810151838201526020016200045d565b8381111562000487576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351620004c78160178501602088016200045a565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351620004fa8160288401602088016200045a565b01602801949350505050565b6020815260008251806020840152620005278160408501602087016200045a565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200056e576200056e6200053b565b500290565b600082198211156200058957620005896200053b565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620005cc57620005cc6200053b565b506000190190565b611dbc80620005e46000396000f3fe6080604052600436106101cd5760003560e01c80637cb64759116100f7578063a7bb580311610095578063f055c7a911610064578063f055c7a91461056a578063fa540801146105a3578063fade63c9146105c3578063ff0938a7146105e357600080fd5b8063a7bb5803146104e4578063c4e41b2214610522578063d547741f14610537578063de6892c81461055757600080fd5b806397aba7f9116100d157806397aba7f91461046e5780639e6c88551461048e578063a217fddf146104ae578063a4435dfd146104c357600080fd5b80637cb647591461040e5780638b7b80b71461042e57806391d148541461044e57600080fd5b80632eb4a7ab1161016f5780634c0f38c21161013e5780634c0f38c2146103805780635997bbee146103955780636387f804146103ce5780636c19e783146103ee57600080fd5b80632eb4a7ab1461030a5780632f2ff15d1461032057806336568abe1461034057806342920a461461036057600080fd5b80631f5ac1b2116101ab5780631f5ac1b21461026c578063238ac9331461028c578063248a9ca3146102c45780632904e6d9146102f557600080fd5b806301ffc9a7146101d257806318f52c48146102075780631b0d2d3b14610228575b600080fd5b3480156101de57600080fd5b506101f26101ed36600461185d565b6105f8565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b506003546101f290600160a81b900460ff1681565b34801561023457600080fd5b5061025e61024336600461189c565b6001600160a01b031660009081526006602052604090205490565b6040519081526020016101fe565b34801561027857600080fd5b5061025e61028736600461189c565b61062f565b34801561029857600080fd5b506004546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b3480156102d057600080fd5b5061025e6102df3660046118b9565b6000908152600160208190526040909120015490565b6103086103033660046118d2565b610679565b005b34801561031657600080fd5b5061025e60005481565b34801561032c57600080fd5b5061030861033b36600461194d565b610a88565b34801561034c57600080fd5b5061030861035b36600461194d565b610ab3565b34801561036c57600080fd5b506101f261037b366004611a20565b610b31565b34801561038c57600080fd5b5061025e610b74565b3480156103a157600080fd5b506101f26103b036600461189c565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103da57600080fd5b506103086103e9366004611a90565b610be7565b3480156103fa57600080fd5b5061030861040936600461189c565b610c4b565b34801561041a57600080fd5b506103086104293660046118b9565b610cb9565b34801561043a57600080fd5b506003546102ac906001600160a01b031681565b34801561045a57600080fd5b506101f261046936600461194d565b610d02565b34801561047a57600080fd5b506102ac610489366004611aad565b610d2d565b34801561049a57600080fd5b506103086104a936600461189c565b610dac565b3480156104ba57600080fd5b5061025e600081565b3480156104cf57600080fd5b506003546101f290600160a01b900460ff1681565b3480156104f057600080fd5b506105046104ff366004611af4565b610e11565b60408051938452602084019290925260ff16908201526060016101fe565b34801561052e57600080fd5b5061025e610e85565b34801561054357600080fd5b5061030861055236600461194d565b610ecf565b610308610565366004611b29565b610ef5565b34801561057657600080fd5b506101f261058536600461189c565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156105af57600080fd5b5061025e6105be3660046118b9565b61134f565b3480156105cf57600080fd5b506103086105de366004611a90565b61138a565b3480156105ef57600080fd5b506101f26113e2565b60006001600160e01b03198216637965db0b60e01b148061062957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60028054036106cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280556106db6113e2565b1561071e5760405162461bcd60e51b81526020600482015260136024820152722730b3b0a5b4b2103bb0b9902830bab9b2b21760691b60448201526064016106c6565b600354600160a81b900460ff16151560011461077c5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b61045781610788610e85565b6107929190611bb1565b106107cd5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106c6565b3360009081526005602052604090205460ff16151560010361082b5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190611bc9565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109079190611be2565b15156001146109285760405162461bcd60e51b81526004016106c690611bff565b610934838333846115f3565b61098e5760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106c6565b336000908152600560209081526040808320805460ff191660011790556006909152812080548392906109c2908490611bb1565b90915550600090505b81811015610a43576003546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050508080610a3b90611c49565b9150506109cb565b506040805182815242602082015233917fb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938910160405180910390a25050600160025550565b60008281526001602081905260409091200154610aa481611690565b610aae838361169d565b505050565b6001600160a01b0381163314610b235760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106c6565b610b2d8282611708565b5050565b600080610b3d8461062f565b90506000610b4a8261134f565b9050856001600160a01b0316610b608286610d2d565b6001600160a01b0316149695505050505050565b6003546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611bc9565b905090565b6000610bf281611690565b60038054831515600160a01b0260ff60a01b199091161790556040517f7955b9c09440c823c45ec1ed87cd3f0860e31e9f5a8e65cff61bed27545bedd790610c3f90841515815260200190565b60405180910390a15050565b6000610c5681611690565b600480546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f3271c8694494a7cc76cd185c743e9ee6b515a043ea98c0db7f5ca112f694add491015b60405180910390a1505050565b6000610cc481611690565b600080549083905560408051828152602081018590527f8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb659101610cac565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080600080610d3c85610e11565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610d97573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000610db781611690565b600380546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e5419101610cac565b60008060008351604114610e675760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106c6565b50505060208101516040820151606090920151909260009190911a90565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bbe573d6000803e3d6000fd5b60008281526001602081905260409091200154610eeb81611690565b610aae8383611708565b6002805403610f465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c6565b60028055610f526113e2565b15610f955760405162461bcd60e51b81526020600482015260136024820152722730b3b0a5b4b2103bb0b9902830bab9b2b21760691b60448201526064016106c6565b600354600160a01b900460ff161515600114610ff35760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b3233146110425760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106c6565b3360009081526007602052604090205460ff1615156001036110a05760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6104576110ab610e85565b6110b6906001611bb1565b106110f85760405162461bcd60e51b815260206004820152601260248201527113dd995c8814dd5c1c1b1e48105b5bdd5b9d60721b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561114a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e9190611bc9565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190611be2565b15156001146111f55760405162461bcd60e51b81526004016106c690611bff565b600454604080516020601f8501819004810282018101909252838152611242926001600160a01b0316913391908690869081908401838280828437600092019190915250610b3192505050565b6112995760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106c6565b3360008181526007602052604090819020805460ff1916600117905560035490516340d097c360e01b815260048101929092526001600160a01b0316906340d097c390602401600060405180830381600087803b1580156112f957600080fd5b505af115801561130d573d6000803e3d6000fd5b50506040514281523392507fab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b915060200160405180910390a250506001600255565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c0161065c565b600061139581611690565b60038054831515600160a81b0260ff60a81b199091161790556040517f1e78b6fb38a6776b3b021a6298e924f52991aa2bb97dd89e0a8cd9765df8636790610c3f90841515815260200190565b60035460408051635c975abb60e01b815290516000926001600160a01b031691635c975abb9160048083019260209291908290030181865afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611be2565b6060600061145f836002611c62565b61146a906002611bb1565b67ffffffffffffffff8111156114825761148261197d565b6040519080825280601f01601f1916602001820160405280156114ac576020820181803683370190505b509050600360fc1b816000815181106114c7576114c7611c81565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106114f6576114f6611c81565b60200101906001600160f81b031916908160001a905350600061151a846002611c62565b611525906001611bb1565b90505b600181111561159d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061155957611559611c81565b1a60f81b82828151811061156f5761156f611c81565b60200101906001600160f81b031916908160001a90535060049490941c9361159681611c97565b9050611528565b5083156115ec5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c6565b9392505050565b60008054810361160557506000611688565b6116858585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250546040516bffffffffffffffffffffffff1960608b901b16602082015260348101899052909350605401915061166a9050565b6040516020818303038152906040528051906020012061176f565b90505b949350505050565b61169a8133611785565b50565b6116a78282610d02565b610b2d5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6117128282610d02565b15610b2d5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261177c85846117e9565b14949350505050565b61178f8282610d02565b610b2d576117a7816001600160a01b03166014611450565b6117b2836020611450565b6040516020016117c3929190611cde565b60408051601f198184030181529082905262461bcd60e51b82526106c691600401611d53565b600081815b845181101561185557600085828151811061180b5761180b611c81565b602002602001015190508083116118315760008381526020829052604090209250611842565b600081815260208490526040902092505b508061184d81611c49565b9150506117ee565b509392505050565b60006020828403121561186f57600080fd5b81356001600160e01b0319811681146115ec57600080fd5b6001600160a01b038116811461169a57600080fd5b6000602082840312156118ae57600080fd5b81356115ec81611887565b6000602082840312156118cb57600080fd5b5035919050565b6000806000604084860312156118e757600080fd5b833567ffffffffffffffff808211156118ff57600080fd5b818601915086601f83011261191357600080fd5b81358181111561192257600080fd5b8760208260051b850101111561193757600080fd5b6020928301989097509590910135949350505050565b6000806040838503121561196057600080fd5b82359150602083013561197281611887565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119a457600080fd5b813567ffffffffffffffff808211156119bf576119bf61197d565b604051601f8301601f19908116603f011681019082821181831017156119e7576119e761197d565b81604052838152866020858801011115611a0057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a3557600080fd5b8335611a4081611887565b92506020840135611a5081611887565b9150604084013567ffffffffffffffff811115611a6c57600080fd5b611a7886828701611993565b9150509250925092565b801515811461169a57600080fd5b600060208284031215611aa257600080fd5b81356115ec81611a82565b60008060408385031215611ac057600080fd5b82359150602083013567ffffffffffffffff811115611ade57600080fd5b611aea85828601611993565b9150509250929050565b600060208284031215611b0657600080fd5b813567ffffffffffffffff811115611b1d57600080fd5b61168884828501611993565b60008060208385031215611b3c57600080fd5b823567ffffffffffffffff80821115611b5457600080fd5b818501915085601f830112611b6857600080fd5b813581811115611b7757600080fd5b866020828501011115611b8957600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611bc457611bc4611b9b565b500190565b600060208284031215611bdb57600080fd5b5051919050565b600060208284031215611bf457600080fd5b81516115ec81611a82565b6020808252602a908201527f5468697320436f6e7472616374206e6f742068617665207065726d697373696f60408201526937103a379036b4b73a1760b11b606082015260800190565b600060018201611c5b57611c5b611b9b565b5060010190565b6000816000190483118215151615611c7c57611c7c611b9b565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611ca657611ca6611b9b565b506000190190565b60005b83811015611cc9578181015183820152602001611cb1565b83811115611cd8576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611d16816017850160208801611cae565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611d47816028840160208801611cae565b01602801949350505050565b6020815260008251806020840152611d72816040850160208701611cae565b601f01601f1916919091016040019291505056fea26469706673582212209f92cda8f8369134a0f93cbf91a4ed4a9b33e267a1c0227f87ecb64be4cb6c0b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x23A0 CODESIZE SUB DUP1 PUSH3 0x23A0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x41E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE PUSH3 0x46 PUSH1 0x0 CALLER PUSH3 0x64 JUMP JUMPDEST PUSH3 0x51 DUP3 PUSH3 0xED JUMP JUMPDEST PUSH3 0x5C DUP2 PUSH3 0x15D JUMP JUMPDEST POP POP PUSH3 0x5D4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xE9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFA DUP2 PUSH3 0x1A9 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x92CE13BAEC98D66394CF79A9F16B88C346E6BD6DD4DF75AC1144E5DC7FF8E541 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16A DUP2 PUSH3 0x1A9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x8C059DFA273E5360F0AD8D03524CFC0E8E91F05BF893452E7E92C8BF0FEFFB65 SWAP2 ADD PUSH3 0x150 JUMP JUMPDEST PUSH3 0x1B5 DUP2 CALLER PUSH3 0x1B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xE9 JUMPI PUSH3 0x204 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH3 0x25E PUSH1 0x20 SHL PUSH3 0x1450 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x21A DUP4 PUSH1 0x20 PUSH3 0x1450 PUSH3 0x25E DUP3 SHL OR DUP2 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x22D SWAP3 SWAP2 SWAP1 PUSH3 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH3 0x255 SWAP2 PUSH1 0x4 ADD PUSH3 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x26F DUP4 PUSH1 0x2 PUSH3 0x551 JUMP JUMPDEST PUSH3 0x27C SWAP1 PUSH1 0x2 PUSH3 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x296 JUMPI PUSH3 0x296 PUSH3 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2C1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x2DF JUMPI PUSH3 0x2DF PUSH3 0x5A4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x311 JUMPI PUSH3 0x311 PUSH3 0x5A4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH3 0x337 DUP5 PUSH1 0x2 PUSH3 0x551 JUMP JUMPDEST PUSH3 0x344 SWAP1 PUSH1 0x1 PUSH3 0x573 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x3C6 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH3 0x37C JUMPI PUSH3 0x37C PUSH3 0x5A4 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x395 JUMPI PUSH3 0x395 PUSH3 0x5A4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH3 0x3BE DUP2 PUSH3 0x5BA JUMP JUMPDEST SWAP1 POP PUSH3 0x347 JUMP JUMPDEST POP DUP4 ISZERO PUSH3 0x417 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x255 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x477 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x45D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x487 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH3 0x4C7 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x45A JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH3 0x4FA DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x45A JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x527 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x45A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x56E JUMPI PUSH3 0x56E PUSH3 0x53B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x589 JUMPI PUSH3 0x589 PUSH3 0x53B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH3 0x5CC JUMPI PUSH3 0x5CC PUSH3 0x53B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x1DBC DUP1 PUSH3 0x5E4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF055C7A9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xFADE63C9 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFF0938A7 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97ABA7F9 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x8B7B80B7 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x4C0F38C2 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5997BBEE EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6387F804 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F5AC1B2 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x2904E6D9 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x18F52C48 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1B0D2D3B EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xB74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xE85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH2 0x308 PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x134F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x629 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x6DB PUSH2 0x13E2 JUMP JUMPDEST ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2730B3B0A5B4B2103BB0B9902830BAB9B2B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x788 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST LT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x934 DUP4 DUP4 CALLER DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA3B SWAP1 PUSH2 0x1C49 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xB7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xAA4 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0xAAE DUP4 DUP4 PUSH2 0x169D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xB2D DUP3 DUP3 PUSH2 0x1708 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB3D DUP5 PUSH2 0x62F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP3 PUSH2 0x134F JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB60 DUP3 DUP7 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7955B9C09440C823C45EC1ED87CD3F0860E31E9F5A8E65CFF61BED27545BEDD7 SWAP1 PUSH2 0xC3F SWAP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC56 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x3271C8694494A7CC76CD185C743E9EE6B515A043EA98C0DB7F5CA112F694ADD4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x8C059DFA273E5360F0AD8D03524CFC0E8E91F05BF893452E7E92C8BF0FEFFB65 SWAP2 ADD PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD3C DUP6 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB7 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x92CE13BAEC98D66394CF79A9F16B88C346E6BD6DD4DF75AC1144E5DC7FF8E541 SWAP2 ADD PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xEEB DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0xAAE DUP4 DUP4 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xF52 PUSH2 0x13E2 JUMP JUMPDEST ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2730B3B0A5B4B2103BB0B9902830BAB9B2B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x1042 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x10AB PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x10B6 SWAP1 PUSH1 0x1 PUSH2 0x1BB1 JUMP JUMPDEST LT PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DD995C8814DD5C1C1B1E48105B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x11F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP6 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP4 DUP2 MSTORE PUSH2 0x1242 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB31 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xAB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x65C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1E78B6FB38A6776B3B021A6298E924F52991AA2BB97DD89E0A8CD9765DF86367 SWAP1 PUSH2 0xC3F SWAP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C975ABB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C975ABB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x145F DUP4 PUSH1 0x2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x146A SWAP1 PUSH1 0x2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14AC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x151A DUP5 PUSH1 0x2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1525 SWAP1 PUSH1 0x1 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x159D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1559 JUMPI PUSH2 0x1559 PUSH2 0x1C81 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x156F JUMPI PUSH2 0x156F PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1596 DUP2 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH2 0x1528 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SUB PUSH2 0x1605 JUMPI POP PUSH1 0x0 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1685 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x54 ADD SWAP2 POP PUSH2 0x166A SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x169A DUP2 CALLER PUSH2 0x1785 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16A7 DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xB2D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1712 DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x177C DUP6 DUP5 PUSH2 0x17E9 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x178F DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xB2D JUMPI PUSH2 0x17A7 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x17B2 DUP4 PUSH1 0x20 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17C3 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C6 SWAP2 PUSH1 0x4 ADD PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1831 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x184D DUP2 PUSH2 0x1C49 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1887 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E7 PUSH2 0x197D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A40 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A50 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1688 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC4 PUSH2 0x1B9B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15EC DUP2 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320436F6E7472616374206E6F742068617665207065726D697373696F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x37103A379036B4B73A17 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1B9B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7C PUSH2 0x1B9B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1CA6 JUMPI PUSH2 0x1CA6 PUSH2 0x1B9B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CD8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1D16 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1CAE JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1D47 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1CAE JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SWAP3 0xCD 0xA8 0xF8 CALLDATASIZE SWAP2 CALLVALUE LOG0 0xF9 EXTCODECOPY 0xBF SWAP2 LOG4 0xED 0x4A SWAP12 CALLER 0xE2 PUSH8 0xA1C0227F87ECB64B 0xE4 0xCB PUSH13 0xB64736F6C634300080F003300 ",
							"sourceMap": "276:4641:10:-:0;;;1128:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;1195:42:10;2072:4:0;1226:10:10;1195;:42::i;:::-;1248:28;1267:8;1248:18;:28::i;:::-;1287:26;1301:11;1287:13;:26::i;:::-;1128:195;;276:4641;;7244:233:0;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:4;;7365:12:0;;7420:40;;7365:12;7420:40;7322:149;7244:233;;:::o;1437:269:10:-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;1566:15:10::1;::::0;;-1:-1:-1;;;;;1603:26:10;;::::1;-1:-1:-1::0;;;;;;1603:26:10;::::1;::::0;::::1;::::0;;;1647:51:::1;::::0;;1566:15;;;::::1;601:34:13::0;;;666:2;651:18;;644:43;;;;1647:51:10::1;::::0;536:18:13;1647:51:10::1;;;;;;;;1523:183;1437:269:::0;;:::o;2284:234::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2375:25:10::1;2403:10:::0;;2424:24;;;;2466:44:::1;::::0;;872:25:13;;;928:2;913:18;;906:34;;;2466:44:10::1;::::0;845:18:13;2466:44:10::1;698:248:13::0;3334:103:0;3400:30;3411:4;719:10:4;3400::0;:30::i;:::-;3334:103;:::o;3718:492::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;;;;;:41;;:::i;:::-;4101:38;4129:4;4136:2;4101:19;;;;;:38;;:::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;:::-;;;;;;;;1588:441:5;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;-1:-1:-1;;;;;1710:25:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:5;;1688:47;;-1:-1:-1;;;1745:6:5;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:5;;;;;;;;;-1:-1:-1;;;1770:6:5;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:5;;;;;;;;-1:-1:-1;1800:9:5;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:5;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:5;;;;;;;;-1:-1:-1;1915:1:5;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:5;;1936:55;;;;-1:-1:-1;;;1936:55:5;;3438:2:13;1936:55:5;;;3420:21:13;;;3457:18;;;3450:30;3516:34;3496:18;;;3489:62;3568:18;;1936:55:5;3236:356:13;1936:55:5;2015:6;1588:441;-1:-1:-1;;;1588:441:5:o;14:370:13:-;112:6;120;173:2;161:9;152:7;148:23;144:32;141:52;;;189:1;186;179:12;141:52;215:16;;-1:-1:-1;;;;;260:31:13;;250:42;;240:70;;306:1;303;296:12;240:70;374:2;359:18;;;;353:25;329:5;;353:25;;-1:-1:-1;;;14:370:13:o;951:258::-;1023:1;1033:113;1047:6;1044:1;1041:13;1033:113;;;1123:11;;;1117:18;1104:11;;;1097:39;1069:2;1062:10;1033:113;;;1164:6;1161:1;1158:13;1155:48;;;1199:1;1190:6;1185:3;1181:16;1174:27;1155:48;;951:258;;;:::o;1214:786::-;1625:25;1620:3;1613:38;1595:3;1680:6;1674:13;1696:62;1751:6;1746:2;1741:3;1737:12;1730:4;1722:6;1718:17;1696:62;:::i;:::-;-1:-1:-1;;;1817:2:13;1777:16;;;1809:11;;;1802:40;1867:13;;1889:63;1867:13;1938:2;1930:11;;1923:4;1911:17;;1889:63;:::i;:::-;1972:17;1991:2;1968:26;;1214:786;-1:-1:-1;;;;1214:786:13:o;2005:383::-;2154:2;2143:9;2136:21;2117:4;2186:6;2180:13;2229:6;2224:2;2213:9;2209:18;2202:34;2245:66;2304:6;2299:2;2288:9;2284:18;2279:2;2271:6;2267:15;2245:66;:::i;:::-;2372:2;2351:15;-1:-1:-1;;2347:29:13;2332:45;;;;2379:2;2328:54;;2005:383;-1:-1:-1;;2005:383:13:o;2393:127::-;2454:10;2449:3;2445:20;2442:1;2435:31;2485:4;2482:1;2475:15;2509:4;2506:1;2499:15;2525:168;2565:7;2631:1;2627;2623:6;2619:14;2616:1;2613:21;2608:1;2601:9;2594:17;2590:45;2587:71;;;2638:18;;:::i;:::-;-1:-1:-1;2678:9:13;;2525:168::o;2698:128::-;2738:3;2769:1;2765:6;2762:1;2759:13;2756:39;;;2775:18;;:::i;:::-;-1:-1:-1;2811:9:13;;2698:128::o;2831:127::-;2892:10;2887:3;2883:20;2880:1;2873:31;2923:4;2920:1;2913:15;2947:4;2944:1;2937:15;2963:127;3024:10;3019:3;3015:20;3012:1;3005:31;3055:4;3052:1;3045:15;3079:4;3076:1;3069:15;3095:136;3134:3;3162:5;3152:39;;3171:18;;:::i;:::-;-1:-1:-1;;;3207:18:13;;3095:136::o;3236:356::-;276:4641:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NagaKidContract_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 6021,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 5776,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_efficientHash_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_287": {
									"entryPoint": 5789,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_318": {
									"entryPoint": 5896,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getEthSignedMessageHash_1480": {
									"entryPoint": 4943,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMaxSupply_1432": {
									"entryPoint": 2932,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMessageHash_1464": {
									"entryPoint": 1583,
									"id": 1464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1422": {
									"entryPoint": 3717,
									"id": 1422,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 2696,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 3330,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isPause_1442": {
									"entryPoint": 5090,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isPublicMintOpen_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPublicMinted_1412": {
									"entryPoint": null,
									"id": 1412,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistMintOpen_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelistMintedAmount_1400": {
									"entryPoint": null,
									"id": 1400,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistMinted_1388": {
									"entryPoint": null,
									"id": 1388,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelist_1598": {
									"entryPoint": 5619,
									"id": 1598,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@merkleRoot_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@processProof_854": {
									"entryPoint": 6121,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@publicMint_1376": {
									"entryPoint": 3829,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recoverSigner_1538": {
									"entryPoint": 3373,
									"id": 1538,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_213": {
									"entryPoint": 2739,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 3791,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMerkleRoot_1176": {
									"entryPoint": 3257,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidContract_1098": {
									"entryPoint": 3500,
									"id": 1098,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicMintOpen_1154": {
									"entryPoint": 3047,
									"id": 1154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_1120": {
									"entryPoint": 3147,
									"id": 1120,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelistMintOpen_1137": {
									"entryPoint": 5002,
									"id": 1137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signer_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitSignature_1559": {
									"entryPoint": 3601,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@supportsInterface_60": {
									"entryPoint": 1528,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_772": {
									"entryPoint": 5200,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verify_1511": {
									"entryPoint": 2865,
									"id": 1511,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_797": {
									"entryPoint": 5999,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whitelistMint_1283": {
									"entryPoint": 1657,
									"id": 1283,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_bytes": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKidNFT_$958": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INagaKidNFT_$958__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca3a03f67e8dbf8744f527043671723697d91a5fc2a2a3dc15b4ceb31b6dbf12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16870:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "542:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "606:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "608:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "608:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "576:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "591:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "596:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "587:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "587:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "600:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "583:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "583:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "572:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:50:13"
															},
															"nodeType": "YulIf",
															"src": "552:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "531:5:13",
														"type": ""
													}
												],
												"src": "497:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "749:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "724:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "733:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:32:13"
															},
															"nodeType": "YulIf",
															"src": "713:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "774:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "800:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "787:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "778:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "844:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "819:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "819:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "859:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "869:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "680:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "692:6:13",
														"type": ""
													}
												],
												"src": "633:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "986:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "996:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1004:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "996:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1049:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1031:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "955:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "966:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "977:4:13",
														"type": ""
													}
												],
												"src": "885:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1178:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1213:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1213:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1137:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1148:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1159:4:13",
														"type": ""
													}
												],
												"src": "1067:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1360:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1360:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1402:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1433:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1438:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1429:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1429:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1442:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1425:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1425:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1413:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1319:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1330:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1341:4:13",
														"type": ""
													}
												],
												"src": "1249:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1573:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1585:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1575:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1575:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1575:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1557:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1540:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:32:13"
															},
															"nodeType": "YulIf",
															"src": "1537:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1608:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1493:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1504:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1516:6:13",
														"type": ""
													}
												],
												"src": "1457:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:567:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1810:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1785:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1794:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:32:13"
															},
															"nodeType": "YulIf",
															"src": "1774:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1835:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1849:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1849:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1839:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1881:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1891:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1885:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1936:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1948:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1938:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1938:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1932:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1921:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:14:13"
															},
															"nodeType": "YulIf",
															"src": "1918:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1961:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1975:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1986:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1965:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2041:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2050:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2053:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2043:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2043:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2043:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2020:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2024:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2016:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2016:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2031:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2005:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:35:13"
															},
															"nodeType": "YulIf",
															"src": "2002:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2066:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2093:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2080:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2070:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2125:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2111:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2119:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2108:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:14:13"
															},
															"nodeType": "YulIf",
															"src": "2105:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2199:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2201:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2162:2:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2170:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2173:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2166:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2166:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2158:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2158:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2183:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:34:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2190:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2151:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:47:13"
															},
															"nodeType": "YulIf",
															"src": "2148:67:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2224:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2238:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:13:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2256:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2266:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2319:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:20:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2291:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:34:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1714:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1725:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1737:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1745:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1753:6:13",
														"type": ""
													}
												],
												"src": "1642:689:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2469:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2478:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2481:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2471:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2471:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2471:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2444:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2453:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2436:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:32:13"
															},
															"nodeType": "YulIf",
															"src": "2433:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2494:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2517:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2504:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2494:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2536:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2577:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2562:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2549:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2540:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2615:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2590:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2590:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2630:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2640:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2381:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2392:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2404:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2412:6:13",
														"type": ""
													}
												],
												"src": "2336:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2688:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2705:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2712:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2717:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2708:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2708:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2745:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2748:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2738:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2738:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2769:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2772:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2656:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2840:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2889:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2898:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2891:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2868:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2876:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2864:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2864:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2883:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2860:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2860:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2853:35:13"
															},
															"nodeType": "YulIf",
															"src": "2850:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2914:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2924:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2918:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2953:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2963:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2957:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3004:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3006:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3006:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3006:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2996:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3000:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2993:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2993:10:13"
															},
															"nodeType": "YulIf",
															"src": "2990:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3035:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3039:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3061:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3081:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3075:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3065:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3093:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3139:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3143:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3135:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3135:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3150:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3131:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3131:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3155:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3127:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3127:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3160:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3111:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3097:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3223:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3225:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3225:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3225:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3182:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3194:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3179:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3179:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3202:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3214:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3199:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3176:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:46:13"
															},
															"nodeType": "YulIf",
															"src": "3173:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3265:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3254:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3254:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3292:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3300:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3285:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3351:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3360:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3363:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3353:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3353:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3326:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3334:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3322:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3322:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3339:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3318:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3346:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3315:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:35:13"
															},
															"nodeType": "YulIf",
															"src": "3312:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3393:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3401:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3389:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3389:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3412:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3420:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3427:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3376:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3376:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3454:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3462:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3450:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3450:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3467:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3474:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3485:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3494:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3485:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2814:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2822:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2830:5:13",
														"type": ""
													}
												],
												"src": "2788:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3624:483:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3670:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3679:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3682:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3672:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3672:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3672:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3645:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3641:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3641:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:32:13"
															},
															"nodeType": "YulIf",
															"src": "3634:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3695:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3721:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3708:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3699:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3765:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3740:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3740:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3780:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3790:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3804:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3847:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3832:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3832:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3819:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3808:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3885:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3860:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3902:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3912:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3928:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3959:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3970:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3942:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3932:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4017:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4026:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4019:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4019:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4019:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3989:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:30:13"
															},
															"nodeType": "YulIf",
															"src": "3983:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4042:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4073:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4084:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4069:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4069:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4093:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4052:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4042:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3574:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3585:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3597:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3605:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3613:6:13",
														"type": ""
													}
												],
												"src": "3511:596:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4154:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4208:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4220:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4210:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4210:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4210:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4177:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4198:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4191:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4191:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4184:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4184:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4174:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4174:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4167:40:13"
															},
															"nodeType": "YulIf",
															"src": "4164:60:13"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4143:5:13",
														"type": ""
													}
												],
												"src": "4112:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:174:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4348:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4357:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4360:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4350:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4350:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4350:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4323:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4332:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4319:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4319:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4315:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:32:13"
															},
															"nodeType": "YulIf",
															"src": "4312:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4373:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4399:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4386:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4386:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4377:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4418:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4455:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4465:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4455:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4268:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4279:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4291:6:13",
														"type": ""
													}
												],
												"src": "4235:241:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4601:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4611:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4623:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4619:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4611:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4653:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4668:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4684:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4689:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4680:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4680:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4693:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4676:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4676:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4646:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4646:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INagaKidNFT_$958__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4570:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4581:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4592:4:13",
														"type": ""
													}
												],
												"src": "4481:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4804:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4850:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4859:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4862:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4852:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4825:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4834:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4821:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4846:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4817:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:32:13"
															},
															"nodeType": "YulIf",
															"src": "4814:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4875:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4898:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4885:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4917:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4948:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4959:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4944:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4931:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4921:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5006:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5015:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5018:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5008:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5008:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5008:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4978:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4986:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4975:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:30:13"
															},
															"nodeType": "YulIf",
															"src": "4972:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5031:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5062:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5073:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5082:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5041:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4762:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4773:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4785:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4793:6:13",
														"type": ""
													}
												],
												"src": "4708:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5190:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5236:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5245:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5248:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5238:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5238:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5238:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5211:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5220:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5207:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5232:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:32:13"
															},
															"nodeType": "YulIf",
															"src": "5200:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5261:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5287:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5274:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5265:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5331:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5306:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5346:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5356:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKidNFT_$958",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5156:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5167:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5179:6:13",
														"type": ""
													}
												],
												"src": "5101:266:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5451:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5497:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5506:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5509:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5499:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5499:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5499:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5472:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5481:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5468:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5493:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:32:13"
															},
															"nodeType": "YulIf",
															"src": "5461:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5522:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5549:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5536:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5526:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5602:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5611:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5614:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5604:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5604:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5604:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5574:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5571:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:30:13"
															},
															"nodeType": "YulIf",
															"src": "5568:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5627:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5658:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5669:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5654:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5654:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5678:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5637:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5417:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5428:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5440:6:13",
														"type": ""
													}
												],
												"src": "5372:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5850:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5860:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5872:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5883:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5860:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5902:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5913:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5895:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5895:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5940:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5951:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5936:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5936:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5956:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5929:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5929:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5929:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5983:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5994:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "6003:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6011:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5972:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5803:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5814:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5822:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5830:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5841:4:13",
														"type": ""
													}
												],
												"src": "5697:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6117:502:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6163:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6172:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6175:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6165:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6165:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6138:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6147:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6134:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6130:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:32:13"
															},
															"nodeType": "YulIf",
															"src": "6127:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6188:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6215:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6202:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6202:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6192:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6234:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6244:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6238:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6289:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6298:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6301:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6291:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6291:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6291:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6277:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6285:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6274:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:14:13"
															},
															"nodeType": "YulIf",
															"src": "6271:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6314:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6328:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6339:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6318:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6394:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6403:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6406:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6396:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6396:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6373:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6377:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6369:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6369:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6384:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6365:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:35:13"
															},
															"nodeType": "YulIf",
															"src": "6355:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6419:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6446:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6433:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6433:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6423:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6476:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6485:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6488:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6478:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6478:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6478:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6464:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6472:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6461:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:14:13"
															},
															"nodeType": "YulIf",
															"src": "6458:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6542:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6551:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6554:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6544:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6544:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6544:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6515:2:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6519:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6511:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6511:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6528:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6507:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6533:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6504:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nodeType": "YulIf",
															"src": "6501:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6567:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6581:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6567:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6597:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6607:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6075:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6086:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6098:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6106:6:13",
														"type": ""
													}
												],
												"src": "6028:591:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6771:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6781:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6795:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6785:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6838:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6851:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6855:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6847:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6847:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6864:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6843:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6843:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6831:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6888:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6893:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6884:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6906:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "6910:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6902:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6902:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6919:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6898:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6898:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6877:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6932:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6943:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6939:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6739:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6744:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6752:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6763:3:13",
														"type": ""
													}
												],
												"src": "6624:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7136:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7153:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7164:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7146:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7146:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7198:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7183:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7203:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7176:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7176:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7176:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7226:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7237:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7222:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7242:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7215:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7215:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7215:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7285:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7297:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7308:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7293:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7285:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7113:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7127:4:13",
														"type": ""
													}
												],
												"src": "6962:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7496:169:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7513:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7524:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7506:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7506:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7547:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7543:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7543:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7563:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7536:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:18:13"
																	},
																	{
																		"hexValue": "4e6167614b696420776173205061757365642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7602:21:13",
																		"type": "",
																		"value": "NagaKid was Paused."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7645:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7656:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7641:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7633:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca3a03f67e8dbf8744f527043671723697d91a5fc2a2a3dc15b4ceb31b6dbf12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7473:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7487:4:13",
														"type": ""
													}
												],
												"src": "7322:343:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7861:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7895:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7906:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7934:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7945:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7930:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7930:18:13"
																	},
																	{
																		"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7950:29:13",
																		"type": "",
																		"value": "Whitelist not open to mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7923:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7923:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7989:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8001:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8012:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7997:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7997:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7989:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7821:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7835:4:13",
														"type": ""
													}
												],
												"src": "7670:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8058:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8082:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8087:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8078:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8078:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8068:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8068:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8118:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8108:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8108:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8139:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8132:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8026:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8206:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8233:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8235:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8235:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8235:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8222:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8229:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8225:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8225:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8219:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:13:13"
															},
															"nodeType": "YulIf",
															"src": "8216:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8264:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8275:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8278:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8271:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8189:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8192:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8198:3:13",
														"type": ""
													}
												],
												"src": "8158:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8465:161:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8482:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8493:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8475:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8475:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8475:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8516:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8527:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8512:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8512:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8532:2:13",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8505:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8505:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8555:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8566:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:18:13"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8571:13:13",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8594:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8606:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8602:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8594:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8442:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8456:4:13",
														"type": ""
													}
												],
												"src": "8291:335:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8805:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8822:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8833:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8815:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8856:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8867:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8852:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8852:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8872:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8845:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8845:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8845:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8895:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8906:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8891:18:13"
																	},
																	{
																		"hexValue": "596f752061726520616c7265616479206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8911:25:13",
																		"type": "",
																		"value": "You are already minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8884:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8884:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8884:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8946:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8958:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8969:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8946:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8782:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8796:4:13",
														"type": ""
													}
												],
												"src": "8631:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9064:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9110:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9119:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9122:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9112:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9112:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9085:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9094:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9081:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9106:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9077:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:32:13"
															},
															"nodeType": "YulIf",
															"src": "9074:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9135:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9151:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9145:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9135:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9030:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9041:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9053:6:13",
														"type": ""
													}
												],
												"src": "8983:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9301:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9311:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9323:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9334:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9319:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9319:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9311:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9364:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9402:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9387:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9387:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9411:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9427:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9432:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9423:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9423:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9436:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9419:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9419:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9407:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9380:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9380:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9262:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9273:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9281:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9292:4:13",
														"type": ""
													}
												],
												"src": "9172:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9529:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9575:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9584:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9587:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9577:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9577:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9577:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9550:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9559:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9546:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9546:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9571:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:32:13"
															},
															"nodeType": "YulIf",
															"src": "9539:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9600:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9619:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9613:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9604:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9660:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9638:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9638:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9675:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9685:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9675:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9495:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9506:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9518:6:13",
														"type": ""
													}
												],
												"src": "9451:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9875:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9892:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9885:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9926:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9937:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9922:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9922:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9915:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9965:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9976:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:18:13"
																	},
																	{
																		"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9981:34:13",
																		"type": "",
																		"value": "This Contract not have permissio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9954:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10036:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10047:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10032:18:13"
																	},
																	{
																		"hexValue": "6e20746f206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10052:12:13",
																		"type": "",
																		"value": "n to mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10025:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10025:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10074:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10086:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10097:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10082:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10082:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10074:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9852:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9866:4:13",
														"type": ""
													}
												],
												"src": "9701:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10286:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10303:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10314:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10296:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10348:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10333:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10333:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10353:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10326:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10326:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10376:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10387:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10372:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10392:34:13",
																		"type": "",
																		"value": "Unauthorized WhitelistMint This "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10365:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10365:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10447:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10458:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10443:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10443:18:13"
																	},
																	{
																		"hexValue": "557365722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10463:7:13",
																		"type": "",
																		"value": "User."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10436:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10436:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10436:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10480:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10492:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10503:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10480:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10263:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10277:4:13",
														"type": ""
													}
												],
												"src": "10112:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10565:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10596:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10598:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10598:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10598:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10581:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10592:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10588:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10588:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10578:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10578:17:13"
															},
															"nodeType": "YulIf",
															"src": "10575:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10627:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10638:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10634:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10634:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10627:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10547:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10557:3:13",
														"type": ""
													}
												],
												"src": "10518:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10787:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10797:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10797:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10839:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10850:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10877:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10888:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10873:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10873:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10893:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10866:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10866:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10866:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10748:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10759:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10767:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10778:4:13",
														"type": ""
													}
												],
												"src": "10658:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11085:237:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11102:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11113:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11095:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11095:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11136:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11147:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11132:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11132:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11152:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11125:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11125:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11175:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11186:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11171:18:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11191:34:13",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11164:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11246:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11242:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11242:18:13"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11262:17:13",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11235:45:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11289:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11301:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11312:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11297:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11289:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11062:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11076:4:13",
														"type": ""
													}
												],
												"src": "10911:411:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11408:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11454:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11463:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11466:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11456:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11456:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11456:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11429:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11438:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11425:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11425:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11450:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:32:13"
															},
															"nodeType": "YulIf",
															"src": "11418:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11479:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11495:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11489:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11489:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11479:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11374:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11385:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11397:6:13",
														"type": ""
													}
												],
												"src": "11327:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11645:175:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11655:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11667:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11678:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11663:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11655:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11690:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11708:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11713:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11717:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11694:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11735:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11750:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11758:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11746:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11728:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11728:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11728:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11782:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11793:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11778:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11778:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11802:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11810:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11798:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11771:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11771:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11771:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11606:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11617:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11625:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11636:4:13",
														"type": ""
													}
												],
												"src": "11516:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11954:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11964:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11976:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11987:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11972:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11964:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12006:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12017:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11999:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11999:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11999:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12044:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12055:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12040:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12040:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12060:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12033:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12033:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12033:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11915:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11926:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11934:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11945:4:13",
														"type": ""
													}
												],
												"src": "11825:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12259:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12269:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12281:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12292:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12277:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12277:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12269:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12312:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12323:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12305:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12305:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12305:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12350:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12361:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12346:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12346:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12370:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12378:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12366:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12339:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12339:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12339:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12404:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12415:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12420:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12447:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12458:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12443:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12443:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12463:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12436:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12436:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12204:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12215:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12223:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12231:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12239:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12250:4:13",
														"type": ""
													}
												],
												"src": "12078:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12655:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12672:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12683:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12706:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12717:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12702:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12702:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12722:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12695:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12695:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12695:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12756:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12741:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12761:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12734:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12734:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12797:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12820:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12797:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12632:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12646:4:13",
														"type": ""
													}
												],
												"src": "12481:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13008:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13025:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13036:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13018:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13018:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13018:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13059:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13070:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13055:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13055:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13075:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13048:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13048:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13048:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13098:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13109:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:18:13"
																	},
																	{
																		"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13114:29:13",
																		"type": "",
																		"value": "haha Contract can't call me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13087:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13087:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13087:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13153:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13165:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13176:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13161:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13161:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13153:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12985:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12999:4:13",
														"type": ""
													}
												],
												"src": "12834:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13364:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13381:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13392:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13374:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13374:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13374:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13415:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13426:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13411:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13431:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13404:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13404:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13404:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13454:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13465:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13450:18:13"
																	},
																	{
																		"hexValue": "4f76657220537570706c7920416d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13470:20:13",
																		"type": "",
																		"value": "Over Supply Amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13443:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13443:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13500:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13512:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13523:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13508:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13508:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13500:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13341:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13355:4:13",
														"type": ""
													}
												],
												"src": "13190:342:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13728:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13739:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13721:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13721:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13721:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13762:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13773:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13758:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13758:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13778:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13751:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13751:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13751:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13801:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13812:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13797:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13797:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13817:34:13",
																		"type": "",
																		"value": "Unauthorized PublicMint This Use"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13790:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13790:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13790:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13872:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13883:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13868:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13868:18:13"
																	},
																	{
																		"hexValue": "722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13888:4:13",
																		"type": "",
																		"value": "r."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13861:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13902:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13914:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13925:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13910:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13910:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13902:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13688:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13702:4:13",
														"type": ""
													}
												],
												"src": "13537:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14160:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14177:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14182:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14170:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14170:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14170:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14269:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14274:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14265:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14265:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14279:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14258:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14258:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14258:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14295:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14306:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14311:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14302:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14302:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14295:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14136:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14141:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14152:3:13",
														"type": ""
													}
												],
												"src": "13940:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14377:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14436:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14438:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14438:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14438:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14408:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14401:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14401:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14394:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14394:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14416:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14427:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "14423:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14423:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14431:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14419:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14419:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14413:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14413:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:45:13"
															},
															"nodeType": "YulIf",
															"src": "14387:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14467:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14482:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14485:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14478:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14478:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14467:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14356:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14359:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14365:7:13",
														"type": ""
													}
												],
												"src": "14325:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14530:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14547:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14554:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14559:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14550:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14540:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14540:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14540:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14587:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14590:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14580:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14580:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14580:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14611:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14614:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14604:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14604:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14604:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14498:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14677:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14704:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14706:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14706:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14706:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14697:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14690:13:13"
															},
															"nodeType": "YulIf",
															"src": "14687:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14735:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14746:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14757:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14753:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14753:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14742:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14742:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14735:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14659:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14669:3:13",
														"type": ""
													}
												],
												"src": "14630:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14945:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14962:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14973:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14955:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14955:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14955:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14996:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15007:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14992:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15012:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14985:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14985:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14985:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15035:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15046:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:18:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15051:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15024:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15024:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15095:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15107:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15118:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15103:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15103:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15095:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14922:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14936:4:13",
														"type": ""
													}
												],
												"src": "14771:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15279:147:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15296:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15309:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15313:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15305:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15305:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15326:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15322:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15322:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15301:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15301:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15289:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15289:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15289:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15375:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15380:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15371:12:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15385:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15364:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15364:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15364:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15401:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15412:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15417:2:13",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15401:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15247:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15252:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15260:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15271:3:13",
														"type": ""
													}
												],
												"src": "15132:294:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15484:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15494:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15503:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15498:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15563:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15588:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15593:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15584:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15584:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15607:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15612:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15603:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15603:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15597:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15597:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15577:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15577:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15577:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15524:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15527:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15521:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15521:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15535:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15537:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15546:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15549:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15542:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15542:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15537:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15517:3:13",
																"statements": []
															},
															"src": "15513:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15652:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15665:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15670:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15661:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15661:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15679:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15654:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15654:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15654:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15641:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15644:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15638:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15638:13:13"
															},
															"nodeType": "YulIf",
															"src": "15635:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15462:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15467:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15472:6:13",
														"type": ""
													}
												],
												"src": "15431:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16083:397:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16100:3:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16105:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16093:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16093:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16093:38:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16140:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16160:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16154:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16154:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16144:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16202:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16210:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16198:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16221:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16226:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16217:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16217:12:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16231:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16176:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16176:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16176:62:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16247:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16261:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16266:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16257:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16257:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16251:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16293:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16297:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16289:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16289:11:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16302:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16282:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16282:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16282:40:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16331:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16353:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16347:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16347:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "16335:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16395:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16403:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16391:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16391:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16414:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16418:2:13",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16410:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16410:11:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "16423:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16369:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16369:63:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16369:63:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16441:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16456:2:13"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "16460:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16452:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16452:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16471:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16448:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16448:26:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16441:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16051:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16056:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16064:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16075:3:13",
														"type": ""
													}
												],
												"src": "15694:786:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16606:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16623:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16616:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16616:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16616:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16646:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16666:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16660:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16660:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16650:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16704:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16689:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16709:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16682:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16682:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16751:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16759:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16747:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16747:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16768:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16779:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16764:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16764:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16784:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16725:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16725:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16725:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16800:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16816:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "16835:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16843:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16831:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16831:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16852:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16848:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16848:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16827:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16827:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16812:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16812:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16859:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16800:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16575:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16586:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16597:4:13",
														"type": ""
													}
												],
												"src": "16485:383:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_INagaKidNFT_$958__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_INagaKidNFT_$958(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca3a03f67e8dbf8744f527043671723697d91a5fc2a2a3dc15b4ceb31b6dbf12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"NagaKid was Paused.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Whitelist not open to mint.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Over supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You are already minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"This Contract not have permissio\")\n        mstore(add(headStart, 96), \"n to mint.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unauthorized WhitelistMint This \")\n        mstore(add(headStart, 96), \"User.\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"haha Contract can't call me\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Over Supply Amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Unauthorized PublicMint This Use\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cd5760003560e01c80637cb64759116100f7578063a7bb580311610095578063f055c7a911610064578063f055c7a91461056a578063fa540801146105a3578063fade63c9146105c3578063ff0938a7146105e357600080fd5b8063a7bb5803146104e4578063c4e41b2214610522578063d547741f14610537578063de6892c81461055757600080fd5b806397aba7f9116100d157806397aba7f91461046e5780639e6c88551461048e578063a217fddf146104ae578063a4435dfd146104c357600080fd5b80637cb647591461040e5780638b7b80b71461042e57806391d148541461044e57600080fd5b80632eb4a7ab1161016f5780634c0f38c21161013e5780634c0f38c2146103805780635997bbee146103955780636387f804146103ce5780636c19e783146103ee57600080fd5b80632eb4a7ab1461030a5780632f2ff15d1461032057806336568abe1461034057806342920a461461036057600080fd5b80631f5ac1b2116101ab5780631f5ac1b21461026c578063238ac9331461028c578063248a9ca3146102c45780632904e6d9146102f557600080fd5b806301ffc9a7146101d257806318f52c48146102075780631b0d2d3b14610228575b600080fd5b3480156101de57600080fd5b506101f26101ed36600461185d565b6105f8565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b506003546101f290600160a81b900460ff1681565b34801561023457600080fd5b5061025e61024336600461189c565b6001600160a01b031660009081526006602052604090205490565b6040519081526020016101fe565b34801561027857600080fd5b5061025e61028736600461189c565b61062f565b34801561029857600080fd5b506004546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b3480156102d057600080fd5b5061025e6102df3660046118b9565b6000908152600160208190526040909120015490565b6103086103033660046118d2565b610679565b005b34801561031657600080fd5b5061025e60005481565b34801561032c57600080fd5b5061030861033b36600461194d565b610a88565b34801561034c57600080fd5b5061030861035b36600461194d565b610ab3565b34801561036c57600080fd5b506101f261037b366004611a20565b610b31565b34801561038c57600080fd5b5061025e610b74565b3480156103a157600080fd5b506101f26103b036600461189c565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103da57600080fd5b506103086103e9366004611a90565b610be7565b3480156103fa57600080fd5b5061030861040936600461189c565b610c4b565b34801561041a57600080fd5b506103086104293660046118b9565b610cb9565b34801561043a57600080fd5b506003546102ac906001600160a01b031681565b34801561045a57600080fd5b506101f261046936600461194d565b610d02565b34801561047a57600080fd5b506102ac610489366004611aad565b610d2d565b34801561049a57600080fd5b506103086104a936600461189c565b610dac565b3480156104ba57600080fd5b5061025e600081565b3480156104cf57600080fd5b506003546101f290600160a01b900460ff1681565b3480156104f057600080fd5b506105046104ff366004611af4565b610e11565b60408051938452602084019290925260ff16908201526060016101fe565b34801561052e57600080fd5b5061025e610e85565b34801561054357600080fd5b5061030861055236600461194d565b610ecf565b610308610565366004611b29565b610ef5565b34801561057657600080fd5b506101f261058536600461189c565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156105af57600080fd5b5061025e6105be3660046118b9565b61134f565b3480156105cf57600080fd5b506103086105de366004611a90565b61138a565b3480156105ef57600080fd5b506101f26113e2565b60006001600160e01b03198216637965db0b60e01b148061062957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60028054036106cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280556106db6113e2565b1561071e5760405162461bcd60e51b81526020600482015260136024820152722730b3b0a5b4b2103bb0b9902830bab9b2b21760691b60448201526064016106c6565b600354600160a81b900460ff16151560011461077c5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b61045781610788610e85565b6107929190611bb1565b106107cd5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106c6565b3360009081526005602052604090205460ff16151560010361082b5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190611bc9565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109079190611be2565b15156001146109285760405162461bcd60e51b81526004016106c690611bff565b610934838333846115f3565b61098e5760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106c6565b336000908152600560209081526040808320805460ff191660011790556006909152812080548392906109c2908490611bb1565b90915550600090505b81811015610a43576003546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050508080610a3b90611c49565b9150506109cb565b506040805182815242602082015233917fb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938910160405180910390a25050600160025550565b60008281526001602081905260409091200154610aa481611690565b610aae838361169d565b505050565b6001600160a01b0381163314610b235760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106c6565b610b2d8282611708565b5050565b600080610b3d8461062f565b90506000610b4a8261134f565b9050856001600160a01b0316610b608286610d2d565b6001600160a01b0316149695505050505050565b6003546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611bc9565b905090565b6000610bf281611690565b60038054831515600160a01b0260ff60a01b199091161790556040517f7955b9c09440c823c45ec1ed87cd3f0860e31e9f5a8e65cff61bed27545bedd790610c3f90841515815260200190565b60405180910390a15050565b6000610c5681611690565b600480546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f3271c8694494a7cc76cd185c743e9ee6b515a043ea98c0db7f5ca112f694add491015b60405180910390a1505050565b6000610cc481611690565b600080549083905560408051828152602081018590527f8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb659101610cac565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080600080610d3c85610e11565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610d97573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000610db781611690565b600380546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527f92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e5419101610cac565b60008060008351604114610e675760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106c6565b50505060208101516040820151606090920151909260009190911a90565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bbe573d6000803e3d6000fd5b60008281526001602081905260409091200154610eeb81611690565b610aae8383611708565b6002805403610f465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c6565b60028055610f526113e2565b15610f955760405162461bcd60e51b81526020600482015260136024820152722730b3b0a5b4b2103bb0b9902830bab9b2b21760691b60448201526064016106c6565b600354600160a01b900460ff161515600114610ff35760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b3233146110425760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106c6565b3360009081526007602052604090205460ff1615156001036110a05760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6104576110ab610e85565b6110b6906001611bb1565b106110f85760405162461bcd60e51b815260206004820152601260248201527113dd995c8814dd5c1c1b1e48105b5bdd5b9d60721b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561114a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e9190611bc9565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190611be2565b15156001146111f55760405162461bcd60e51b81526004016106c690611bff565b600454604080516020601f8501819004810282018101909252838152611242926001600160a01b0316913391908690869081908401838280828437600092019190915250610b3192505050565b6112995760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106c6565b3360008181526007602052604090819020805460ff1916600117905560035490516340d097c360e01b815260048101929092526001600160a01b0316906340d097c390602401600060405180830381600087803b1580156112f957600080fd5b505af115801561130d573d6000803e3d6000fd5b50506040514281523392507fab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b915060200160405180910390a250506001600255565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c0161065c565b600061139581611690565b60038054831515600160a81b0260ff60a81b199091161790556040517f1e78b6fb38a6776b3b021a6298e924f52991aa2bb97dd89e0a8cd9765df8636790610c3f90841515815260200190565b60035460408051635c975abb60e01b815290516000926001600160a01b031691635c975abb9160048083019260209291908290030181865afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611be2565b6060600061145f836002611c62565b61146a906002611bb1565b67ffffffffffffffff8111156114825761148261197d565b6040519080825280601f01601f1916602001820160405280156114ac576020820181803683370190505b509050600360fc1b816000815181106114c7576114c7611c81565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106114f6576114f6611c81565b60200101906001600160f81b031916908160001a905350600061151a846002611c62565b611525906001611bb1565b90505b600181111561159d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061155957611559611c81565b1a60f81b82828151811061156f5761156f611c81565b60200101906001600160f81b031916908160001a90535060049490941c9361159681611c97565b9050611528565b5083156115ec5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c6565b9392505050565b60008054810361160557506000611688565b6116858585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250546040516bffffffffffffffffffffffff1960608b901b16602082015260348101899052909350605401915061166a9050565b6040516020818303038152906040528051906020012061176f565b90505b949350505050565b61169a8133611785565b50565b6116a78282610d02565b610b2d5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6117128282610d02565b15610b2d5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261177c85846117e9565b14949350505050565b61178f8282610d02565b610b2d576117a7816001600160a01b03166014611450565b6117b2836020611450565b6040516020016117c3929190611cde565b60408051601f198184030181529082905262461bcd60e51b82526106c691600401611d53565b600081815b845181101561185557600085828151811061180b5761180b611c81565b602002602001015190508083116118315760008381526020829052604090209250611842565b600081815260208490526040902092505b508061184d81611c49565b9150506117ee565b509392505050565b60006020828403121561186f57600080fd5b81356001600160e01b0319811681146115ec57600080fd5b6001600160a01b038116811461169a57600080fd5b6000602082840312156118ae57600080fd5b81356115ec81611887565b6000602082840312156118cb57600080fd5b5035919050565b6000806000604084860312156118e757600080fd5b833567ffffffffffffffff808211156118ff57600080fd5b818601915086601f83011261191357600080fd5b81358181111561192257600080fd5b8760208260051b850101111561193757600080fd5b6020928301989097509590910135949350505050565b6000806040838503121561196057600080fd5b82359150602083013561197281611887565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119a457600080fd5b813567ffffffffffffffff808211156119bf576119bf61197d565b604051601f8301601f19908116603f011681019082821181831017156119e7576119e761197d565b81604052838152866020858801011115611a0057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a3557600080fd5b8335611a4081611887565b92506020840135611a5081611887565b9150604084013567ffffffffffffffff811115611a6c57600080fd5b611a7886828701611993565b9150509250925092565b801515811461169a57600080fd5b600060208284031215611aa257600080fd5b81356115ec81611a82565b60008060408385031215611ac057600080fd5b82359150602083013567ffffffffffffffff811115611ade57600080fd5b611aea85828601611993565b9150509250929050565b600060208284031215611b0657600080fd5b813567ffffffffffffffff811115611b1d57600080fd5b61168884828501611993565b60008060208385031215611b3c57600080fd5b823567ffffffffffffffff80821115611b5457600080fd5b818501915085601f830112611b6857600080fd5b813581811115611b7757600080fd5b866020828501011115611b8957600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611bc457611bc4611b9b565b500190565b600060208284031215611bdb57600080fd5b5051919050565b600060208284031215611bf457600080fd5b81516115ec81611a82565b6020808252602a908201527f5468697320436f6e7472616374206e6f742068617665207065726d697373696f60408201526937103a379036b4b73a1760b11b606082015260800190565b600060018201611c5b57611c5b611b9b565b5060010190565b6000816000190483118215151615611c7c57611c7c611b9b565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611ca657611ca6611b9b565b506000190190565b60005b83811015611cc9578181015183820152602001611cb1565b83811115611cd8576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611d16816017850160208801611cae565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611d47816028840160208801611cae565b01602801949350505050565b6020815260008251806020840152611d72816040850160208701611cae565b601f01601f1916919091016040019291505056fea26469706673582212209f92cda8f8369134a0f93cbf91a4ed4a9b33e267a1c0227f87ecb64be4cb6c0b64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB64759 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF055C7A9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xFADE63C9 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFF0938A7 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97ABA7F9 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x9E6C8855 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xA4435DFD EQ PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x8B7B80B7 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x4C0F38C2 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5997BBEE EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6387F804 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F5AC1B2 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x2904E6D9 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x18F52C48 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1B0D2D3B EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x308 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xB74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0xBE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x409 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xE85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x194D JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH2 0x308 PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x134F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x629 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x6DB PUSH2 0x13E2 JUMP JUMPDEST ISZERO PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2730B3B0A5B4B2103BB0B9902830BAB9B2B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x788 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST LT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x934 DUP4 DUP4 CALLER DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA3B SWAP1 PUSH2 0x1C49 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xB7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xAA4 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0xAAE DUP4 DUP4 PUSH2 0x169D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xB2D DUP3 DUP3 PUSH2 0x1708 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB3D DUP5 PUSH2 0x62F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4A DUP3 PUSH2 0x134F JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB60 DUP3 DUP7 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7955B9C09440C823C45EC1ED87CD3F0860E31E9F5A8E65CFF61BED27545BEDD7 SWAP1 PUSH2 0xC3F SWAP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC56 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x3271C8694494A7CC76CD185C743E9EE6B515A043EA98C0DB7F5CA112F694ADD4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x8C059DFA273E5360F0AD8D03524CFC0E8E91F05BF893452E7E92C8BF0FEFFB65 SWAP2 ADD PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD3C DUP6 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB7 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x92CE13BAEC98D66394CF79A9F16B88C346E6BD6DD4DF75AC1144E5DC7FF8E541 SWAP2 ADD PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xEEB DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH2 0xAAE DUP4 DUP4 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xF52 PUSH2 0x13E2 JUMP JUMPDEST ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2730B3B0A5B4B2103BB0B9902830BAB9B2B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0x1042 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x10AB PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x10B6 SWAP1 PUSH1 0x1 PUSH2 0x1BB1 JUMP JUMPDEST LT PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DD995C8814DD5C1C1B1E48105B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x11F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP6 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP4 DUP2 MSTORE PUSH2 0x1242 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB31 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x130D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xAB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x65C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP2 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP4 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1E78B6FB38A6776B3B021A6298E924F52991AA2BB97DD89E0A8CD9765DF86367 SWAP1 PUSH2 0xC3F SWAP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C975ABB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C975ABB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x142C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x145F DUP4 PUSH1 0x2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x146A SWAP1 PUSH1 0x2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14AC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x151A DUP5 PUSH1 0x2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1525 SWAP1 PUSH1 0x1 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x159D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1559 JUMPI PUSH2 0x1559 PUSH2 0x1C81 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x156F JUMPI PUSH2 0x156F PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1596 DUP2 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH2 0x1528 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SUB PUSH2 0x1605 JUMPI POP PUSH1 0x0 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x1685 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x54 ADD SWAP2 POP PUSH2 0x166A SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x169A DUP2 CALLER PUSH2 0x1785 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16A7 DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xB2D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1712 DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x177C DUP6 DUP5 PUSH2 0x17E9 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x178F DUP3 DUP3 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0xB2D JUMPI PUSH2 0x17A7 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x17B2 DUP4 PUSH1 0x20 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17C3 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C6 SWAP2 PUSH1 0x4 ADD PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1855 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1831 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x184D DUP2 PUSH2 0x1C49 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1887 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BF PUSH2 0x197D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19E7 JUMPI PUSH2 0x19E7 PUSH2 0x197D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A40 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A50 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A78 DUP7 DUP3 DUP8 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x169A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1688 DUP5 DUP3 DUP6 ADD PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC4 PUSH2 0x1B9B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x15EC DUP2 PUSH2 0x1A82 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320436F6E7472616374206E6F742068617665207065726D697373696F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x37103A379036B4B73A17 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1B9B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7C PUSH2 0x1B9B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1CA6 JUMPI PUSH2 0x1CA6 PUSH2 0x1B9B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CB1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1CD8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1D16 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1CAE JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1D47 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1CAE JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SWAP3 0xCD 0xA8 0xF8 CALLDATASIZE SWAP2 CALLVALUE LOG0 0xF9 EXTCODECOPY 0xBF SWAP2 LOG4 0xED 0x4A SWAP12 CALLER 0xE2 PUSH8 0xA1C0227F87ECB64B 0xE4 0xCB PUSH13 0xB64736F6C634300080F003300 ",
							"sourceMap": "276:4641:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;2606:202:0;;;;;;;;444:31:10;;;;;;;;;;-1:-1:-1;444:31:10;;;;-1:-1:-1;;;444:31:10;;;;;;4321:134;;;;;;;;;;-1:-1:-1;4321:134:10;;;;;:::i;:::-;-1:-1:-1;;;;;4416:31:10;4389:7;4416:31;;;:24;:31;;;;;;;4321:134;;;;1031:25:13;;;1019:2;1004:18;4321:134:10;885:177:13;99:160:11;;;;;;;;;;-1:-1:-1;99:160:11;;;;;:::i;:::-;;:::i;484:21:10:-;;;;;;;;;;-1:-1:-1;484:21:10;;;;-1:-1:-1;;;;;484:21:10;;;;;;-1:-1:-1;;;;;1413:32:13;;;1395:51;;1383:2;1368:18;484:21:10;1249:203:13;4391:129:0;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;;4391:129;2528:875:10;;;;;;:::i;:::-;;:::i;:::-;;161:25:12;;;;;;;;;;;;;;;;4770:145:0;;;;;;;;;;-1:-1:-1;4770:145:0;;;;;:::i;:::-;;:::i;5787:214::-;;;;;;;;;;-1:-1:-1;5787:214:0;;;;;:::i;:::-;;:::i;769:350:11:-;;;;;;;;;;-1:-1:-1;769:350:11;;;;;:::i;:::-;;:::i;4703:107:10:-;;;;;;;;;;;;;:::i;4194:119::-;;;;;;;;;;-1:-1:-1;4194:119:10;;;;;:::i;:::-;-1:-1:-1;;;;;4280:25:10;4256:4;4280:25;;;:18;:25;;;;;;;;;4194:119;2106:166;;;;;;;;;;-1:-1:-1;2106:166:10;;;;;:::i;:::-;;:::i;1718:196::-;;;;;;;;;;-1:-1:-1;1718:196:10;;;;;:::i;:::-;;:::i;2284:234::-;;;;;;;;;;-1:-1:-1;2284:234:10;;;;;:::i;:::-;;:::i;368:34::-;;;;;;;;;;-1:-1:-1;368:34:10;;;;-1:-1:-1;;;;;368:34:10;;;2895:145:0;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;;:::i;1127:274:11:-;;;;;;;;;;-1:-1:-1;1127:274:11;;;;;:::i;:::-;;:::i;1437:269:10:-;;;;;;;;;;-1:-1:-1;1437:269:10;;;;;:::i;:::-;;:::i;2027:49:0:-;;;;;;;;;;-1:-1:-1;2027:49:0;2072:4;2027:49;;409:28:10;;;;;;;;;;-1:-1:-1;409:28:10;;;;-1:-1:-1;;;409:28:10;;;;;;1409:891:11;;;;;;;;;;-1:-1:-1;1409:891:11;;;;;:::i;:::-;;:::i;:::-;;;;5895:25:13;;;5951:2;5936:18;;5929:34;;;;6011:4;5999:17;5979:18;;;5972:45;5883:2;5868:18;1409:891:11;5697:326:13;4584:111:10;;;;;;;;;;;;;:::i;5149:147:0:-;;;;;;;;;;-1:-1:-1;5149:147:0;;;;;:::i;:::-;;:::i;3411:775:10:-;;;;;;:::i;:::-;;:::i;4463:113::-;;;;;;;;;;-1:-1:-1;4463:113:10;;;;;:::i;:::-;-1:-1:-1;;;;;4546:22:10;4522:4;4546:22;;;:15;:22;;;;;;;;;4463:113;267:494:11;;;;;;;;;;-1:-1:-1;267:494:11;;;;;:::i;:::-;;:::i;1923:175:10:-;;;;;;;;;;-1:-1:-1;1923:175:10;;;;;:::i;:::-;;:::i;4818:96::-;;;;;;;;;;;;;:::i;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:7;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;99:160:11:-;212:38;;-1:-1:-1;;6851:2:13;6847:15;;;6843:24;;212:38:11;;;6831:37:13;244:4:11;6902:15:13;;6898:24;6884:12;;;6877:46;175:7:11;;6939:12:13;;212:38:11;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;2528:875:10:-;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;7164:2:13;2317:63:2;;;7146:21:13;7203:2;7183:18;;;7176:30;7242:33;7222:18;;;7215:61;7293:18;;2317:63:2;;;;;;;;;1744:1;2455:18;;1368:9:10::1;:7;:9::i;:::-;:18;1360:49;;;::::0;-1:-1:-1;;;1360:49:10;;7524:2:13;1360:49:10::1;::::0;::::1;7506:21:13::0;7563:2;7543:18;;;7536:30;-1:-1:-1;;;7582:18:13;;;7575:49;7641:18;;1360:49:10::1;7322:343:13::0;1360:49:10::1;2654:19:::2;::::0;-1:-1:-1;;;2654:19:10;::::2;;;:27;;2677:4;2654:27;2646:67;;;::::0;-1:-1:-1;;;2646:67:10;;7872:2:13;2646:67:10::2;::::0;::::2;7854:21:13::0;7911:2;7891:18;;;7884:30;7950:29;7930:18;;;7923:57;7997:18;;2646:67:10::2;7670:351:13::0;2646:67:10::2;2761:4;2751:7;2732:16;:14;:16::i;:::-;:26;;;;:::i;:::-;:33;2724:57;;;::::0;-1:-1:-1;;;2724:57:10;;8493:2:13;2724:57:10::2;::::0;::::2;8475:21:13::0;8532:2;8512:18;;;8505:30;-1:-1:-1;;;8551:18:13;;;8544:41;8602:18;;2724:57:10::2;8291:335:13::0;2724:57:10::2;2818:10;4256:4:::0;4280:25;;;:18;:25;;;;;;;;2800:37:::2;;2833:4;2800:37:::0;2792:73:::2;;;::::0;-1:-1:-1;;;2792:73:10;;8833:2:13;2792:73:10::2;::::0;::::2;8815:21:13::0;8872:2;8852:18;;;8845:30;-1:-1:-1;;;8891:18:13;;;8884:53;8954:18;;2792:73:10::2;8631:347:13::0;2792:73:10::2;2884:15;::::0;2908:29:::2;::::0;;-1:-1:-1;;;2908:29:10;;;;-1:-1:-1;;;;;2884:15:10;;::::2;::::0;:23:::2;::::0;:15;;2908:27:::2;::::0;:29:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;2884:15;2908:29:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2884:68;::::0;-1:-1:-1;;;;;;2884:68:10::2;::::0;;;;;;::::2;::::0;::::2;9346:25:13::0;;;;2946:4:10::2;9387:18:13::0;;;9380:60;9319:18;;2884:68:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:76;;2956:4;2884:76;2876:130;;;;-1:-1:-1::0;;;2876:130:10::2;;;;;;;:::i;:::-;3025:44;3037:12;;3050:10;3061:7;3025:11;:44::i;:::-;3017:94;;;::::0;-1:-1:-1;;;3017:94:10;;10314:2:13;3017:94:10::2;::::0;::::2;10296:21:13::0;10353:2;10333:18;;;10326:30;10392:34;10372:18;;;10365:62;-1:-1:-1;;;10443:18:13;;;10436:35;10488:19;;3017:94:10::2;10112:401:13::0;3017:94:10::2;3143:10;3124:30;::::0;;;:18:::2;:30;::::0;;;;;;;:37;;-1:-1:-1;;3124:37:10::2;3157:4;3124:37;::::0;;3172:24:::2;:36:::0;;;;;:47;;3212:7;;3124:30;3172:47:::2;::::0;3212:7;;3172:47:::2;:::i;:::-;::::0;;;-1:-1:-1;3236:6:10::2;::::0;-1:-1:-1;3232:95:10::2;3251:7;3248:1;:10;3232:95;;;3279:15;::::0;:36:::2;::::0;-1:-1:-1;;;3279:36:10;;3304:10:::2;3279:36;::::0;::::2;1395:51:13::0;-1:-1:-1;;;;;3279:15:10;;::::2;::::0;:24:::2;::::0;1368:18:13;;3279:36:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3260:3;;;;;:::i;:::-;;;;3232:95;;;-1:-1:-1::0;3344:51:10::2;::::0;;10832:25:13;;;3379:15:10::2;10888:2:13::0;10873:18;;10866:34;3360:10:10::2;::::0;3344:51:::2;::::0;10805:18:13;3344:51:10::2;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;-1:-1:-1;2528:875:10:o;4770:145:0:-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;5787:214::-;-1:-1:-1;;;;;5882:23:0;;719:10:4;5882:23:0;5874:83;;;;-1:-1:-1;;;5874:83:0;;11113:2:13;5874:83:0;;;11095:21:13;11152:2;11132:18;;;11125:30;11191:34;11171:18;;;11164:62;-1:-1:-1;;;11242:18:13;;;11235:45;11297:19;;5874:83:0;10911:411:13;5874:83:0;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;769:350:11:-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:11;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:11;;;769:350;-1:-1:-1;;;;;;769:350:11:o;4703:107:10:-;4775:15;;:27;;;-1:-1:-1;;;4775:27:10;;;;4748:7;;-1:-1:-1;;;;;4775:15:10;;:25;;:27;;;;;;;;;;;;;;:15;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4768:34;;4703:107;:::o;2106:166::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2194::10::1;:26:::0;;;::::1;;-1:-1:-1::0;;;2194:26:10::1;-1:-1:-1::0;;;;2194:26:10;;::::1;;::::0;;2238::::1;::::0;::::1;::::0;::::1;::::0;2213:7;470:14:13;463:22;445:41;;433:2;418:18;;305:187;2238:26:10::1;;;;;;;;2106:166:::0;;:::o;1718:196::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;1824:6:10::1;::::0;;-1:-1:-1;;;;;1841:16:10;;::::1;-1:-1:-1::0;;;;;;1841:16:10;::::1;::::0;::::1;::::0;;;1875:31:::1;::::0;;1824:6;;;::::1;11728:34:13::0;;;11793:2;11778:18;;11771:43;;;;1875:31:10::1;::::0;11663:18:13;1875:31:10::1;;;;;;;;1790:124;1718:196:::0;;:::o;2284:234::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2375:25:10::1;2403:10:::0;;2424:24;;;;2466:44:::1;::::0;;10832:25:13;;;10888:2;10873:18;;10866:34;;;2466:44:10::1;::::0;10805:18:13;2466:44:10::1;10658:248:13::0;2895:145:0;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;1127:274:11:-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;12305:25:13;;;12378:4;12366:17;;12346:18;;;12339:45;;;;12400:18;;;12393:34;;;12443:18;;;12436:34;;;1272:60:11;;-1:-1:-1;1272:60:11;;-1:-1:-1;1272:60:11;-1:-1:-1;1352:41:11;;12277:19:13;;1352:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:11;;-1:-1:-1;;1352:41:11;;;1127:274;-1:-1:-1;;;;;;;1127:274:11:o;1437:269:10:-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;1566:15:10::1;::::0;;-1:-1:-1;;;;;1603:26:10;;::::1;-1:-1:-1::0;;;;;;1603:26:10;::::1;::::0;::::1;::::0;;;1647:51:::1;::::0;;1566:15;;;::::1;11728:34:13::0;;;11793:2;11778:18;;11771:43;;;;1647:51:10::1;::::0;11663:18:13;1647:51:10::1;11516:304:13::0;1409:891:11;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:11;;12683:2:13;1596:53:11;;;12665:21:13;12722:2;12702:18;;;12695:30;12761:26;12741:18;;;12734:54;12805:18;;1596:53:11;12481:348:13;1596:53:11;-1:-1:-1;;;2058:2:11;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;4584:111:10:-;4658:15;;:29;;;-1:-1:-1;;;4658:29:10;;;;4631:7;;-1:-1:-1;;;;;4658:15:10;;:27;;:29;;;;;;;;;;;;;;:15;:29;;;;;;;;;;;;;;5149:147:0;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;3411:775:10:-:0;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;7164:2:13;2317:63:2;;;7146:21:13;7203:2;7183:18;;;7176:30;7242:33;7222:18;;;7215:61;7293:18;;2317:63:2;6962:355:13;2317:63:2;1744:1;2455:18;;1368:9:10::1;:7;:9::i;:::-;:18;1360:49;;;::::0;-1:-1:-1;;;1360:49:10;;7524:2:13;1360:49:10::1;::::0;::::1;7506:21:13::0;7563:2;7543:18;;;7536:30;-1:-1:-1;;;7582:18:13;;;7575:49;7641:18;;1360:49:10::1;7322:343:13::0;1360:49:10::1;3508:16:::2;::::0;-1:-1:-1;;;3508:16:10;::::2;;;:24;;3528:4;3508:24;3500:64;;;::::0;-1:-1:-1;;;3500:64:10;;7872:2:13;3500:64:10::2;::::0;::::2;7854:21:13::0;7911:2;7891:18;;;7884:30;7950:29;7930:18;;;7923:57;7997:18;;3500:64:10::2;7670:351:13::0;3500:64:10::2;3583:9;3596:10;3583:23;3575:63;;;::::0;-1:-1:-1;;;3575:63:10;;13036:2:13;3575:63:10::2;::::0;::::2;13018:21:13::0;13075:2;13055:18;;;13048:30;13114:29;13094:18;;;13087:57;13161:18;;3575:63:10::2;12834:351:13::0;3575:63:10::2;3672:10;4522:4:::0;4546:22;;;:15;:22;;;;;;;;3657:34:::2;;3687:4;3657:34:::0;3649:70:::2;;;::::0;-1:-1:-1;;;3649:70:10;;8833:2:13;3649:70:10::2;::::0;::::2;8815:21:13::0;8872:2;8852:18;;;8845:30;-1:-1:-1;;;8891:18:13;;;8884:53;8954:18;;3649:70:10::2;8631:347:13::0;3649:70:10::2;3761:4;3738:16;:14;:16::i;:::-;:20;::::0;3757:1:::2;3738:20;:::i;:::-;:27;3730:57;;;::::0;-1:-1:-1;;;3730:57:10;;13392:2:13;3730:57:10::2;::::0;::::2;13374:21:13::0;13431:2;13411:18;;;13404:30;-1:-1:-1;;;13450:18:13;;;13443:48;13508:18;;3730:57:10::2;13190:342:13::0;3730:57:10::2;3806:15;::::0;3830:29:::2;::::0;;-1:-1:-1;;;3830:29:10;;;;-1:-1:-1;;;;;3806:15:10;;::::2;::::0;:23:::2;::::0;:15;;3830:27:::2;::::0;:29:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;3806:15;3830:29:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3806:68;::::0;-1:-1:-1;;;;;;3806:68:10::2;::::0;;;;;;::::2;::::0;::::2;9346:25:13::0;;;;3868:4:10::2;9387:18:13::0;;;9380:60;9319:18;;3806:68:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:76;;3878:4;3806:76;3798:130;;;;-1:-1:-1::0;;;3798:130:10::2;;;;;;;:::i;:::-;3954:6;::::0;3947:30:::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;::::2;::::0;-1:-1:-1;;;;;3954:6:10::2;::::0;3961:10:::2;::::0;3947:30;3972:4;;;;;;3947:30;::::2;3972:4:::0;;;;3947:30;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;3947:6:10::2;::::0;-1:-1:-1;;;3947:30:10:i:2;:::-;3939:77;;;::::0;-1:-1:-1;;;3939:77:10;;13739:2:13;3939:77:10::2;::::0;::::2;13721:21:13::0;13778:2;13758:18;;;13751:30;13817:34;13797:18;;;13790:62;-1:-1:-1;;;13868:18:13;;;13861:32;13910:19;;3939:77:10::2;13537:398:13::0;3939:77:10::2;4045:10;4029:27;::::0;;;:15:::2;:27;::::0;;;;;;:34;;-1:-1:-1;;4029:34:10::2;4059:4;4029:34;::::0;;4074:15:::2;::::0;:36;;-1:-1:-1;;;4074:36:10;;::::2;::::0;::::2;1395:51:13::0;;;;-1:-1:-1;;;;;4074:15:10::2;::::0;:24:::2;::::0;1368:18:13;;4074:36:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4138:40:10::2;::::0;4162:15:::2;1031:25:13::0;;4151:10:10::2;::::0;-1:-1:-1;4138:40:10::2;::::0;-1:-1:-1;1019:2:13;1004:18;4138:40:10::2;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;3411:775:10:o;267:494:11:-;611:127;;14182:66:13;611:127:11;;;14170:79:13;14265:12;;;14258:28;;;370:7:11;;14302:12:13;;611:127:11;13940:380:13;1923:175:10;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;2014:19:10::1;:29:::0;;;::::1;;-1:-1:-1::0;;;2014:29:10::1;-1:-1:-1::0;;;;2014:29:10;;::::1;;::::0;;2061::::1;::::0;::::1;::::0;::::1;::::0;2036:7;470:14:13;463:22;445:41;;433:2;418:18;;305:187;4818:96:10;4882:15;;:24;;;-1:-1:-1;;;4882:24:10;;;;4858:4;;-1:-1:-1;;;;;4882:15:10;;:22;;:24;;;;;;;;;;;;;;:15;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1588:441:5:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:5;;1688:47;;-1:-1:-1;;;1745:6:5;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:5;;;;;;;;;-1:-1:-1;;;1770:6:5;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:5;;;;;;;;-1:-1:-1;1800:9:5;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:5;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:5;;;;;;;;-1:-1:-1;1915:1:5;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:5;;1936:55;;;;-1:-1:-1;;;1936:55:5;;14973:2:13;1936:55:5;;;14955:21:13;;;14992:18;;;14985:30;15051:34;15031:18;;;15024:62;15103:18;;1936:55:5;14771:356:13;1936:55:5;2015:6;1588:441;-1:-1:-1;;;1588:441:5:o;195:403:12:-;332:4;353:10;;:15;;349:60;;-1:-1:-1;392:5:12;385:12;;349:60;441:149;478:6;;441:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:10:12;542:32;;-1:-1:-1;;15309:2:13;15305:15;;;15301:53;542:32:12;;;15289:66:13;15371:12;;;15364:28;;;503:10:12;;-1:-1:-1;15408:12:13;;;-1:-1:-1;542:32:12;;-1:-1:-1;15132:294:13;542:32:12;;;;;;;;;;;;;532:43;;;;;;441:18;:149::i;:::-;421:169;;195:403;;;;;;;:::o;3334:103:0:-;3400:30;3411:4;719:10:4;3400::0;:30::i;:::-;3334:103;:::o;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:4;;7365:12:0;;7420:40;;7365:12;7420:40;7244:233;;:::o;7602:234::-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7723:29:0;;;;;;;;;;:37;;-1:-1:-1;;7723:37:0;;;7779:40;719:10:4;;7723:12:0;;7779:40;;7755:5;7779:40;7602:234;;:::o;1154:184:6:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:6:o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;1689:662:6:-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:6;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:6;1689:662;-1:-1:-1;;;1689:662:6:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:13;;562:42;;552:70;;618:1;615;608:12;633:247;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;819:31;844:5;819:31;:::i;1457:180::-;1516:6;1569:2;1557:9;1548:7;1544:23;1540:32;1537:52;;;1585:1;1582;1575:12;1537:52;-1:-1:-1;1608:23:13;;1457:180;-1:-1:-1;1457:180:13:o;1642:689::-;1737:6;1745;1753;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1862:9;1849:23;1891:18;1932:2;1924:6;1921:14;1918:34;;;1948:1;1945;1938:12;1918:34;1986:6;1975:9;1971:22;1961:32;;2031:7;2024:4;2020:2;2016:13;2012:27;2002:55;;2053:1;2050;2043:12;2002:55;2093:2;2080:16;2119:2;2111:6;2108:14;2105:34;;;2135:1;2132;2125:12;2105:34;2190:7;2183:4;2173:6;2170:1;2166:14;2162:2;2158:23;2154:34;2151:47;2148:67;;;2211:1;2208;2201:12;2148:67;2242:4;2234:13;;;;2266:6;;-1:-1:-1;2304:20:13;;;;2291:34;;1642:689;-1:-1:-1;;;;1642:689:13:o;2336:315::-;2404:6;2412;2465:2;2453:9;2444:7;2440:23;2436:32;2433:52;;;2481:1;2478;2471:12;2433:52;2517:9;2504:23;2494:33;;2577:2;2566:9;2562:18;2549:32;2590:31;2615:5;2590:31;:::i;:::-;2640:5;2630:15;;;2336:315;;;;;:::o;2656:127::-;2717:10;2712:3;2708:20;2705:1;2698:31;2748:4;2745:1;2738:15;2772:4;2769:1;2762:15;2788:718;2830:5;2883:3;2876:4;2868:6;2864:17;2860:27;2850:55;;2901:1;2898;2891:12;2850:55;2937:6;2924:20;2963:18;3000:2;2996;2993:10;2990:36;;;3006:18;;:::i;:::-;3081:2;3075:9;3049:2;3135:13;;-1:-1:-1;;3131:22:13;;;3155:2;3127:31;3123:40;3111:53;;;3179:18;;;3199:22;;;3176:46;3173:72;;;3225:18;;:::i;:::-;3265:10;3261:2;3254:22;3300:2;3292:6;3285:18;3346:3;3339:4;3334:2;3326:6;3322:15;3318:26;3315:35;3312:55;;;3363:1;3360;3353:12;3312:55;3427:2;3420:4;3412:6;3408:17;3401:4;3393:6;3389:17;3376:54;3474:1;3467:4;3462:2;3454:6;3450:15;3446:26;3439:37;3494:6;3485:15;;;;;;2788:718;;;;:::o;3511:596::-;3597:6;3605;3613;3666:2;3654:9;3645:7;3641:23;3637:32;3634:52;;;3682:1;3679;3672:12;3634:52;3721:9;3708:23;3740:31;3765:5;3740:31;:::i;:::-;3790:5;-1:-1:-1;3847:2:13;3832:18;;3819:32;3860:33;3819:32;3860:33;:::i;:::-;3912:7;-1:-1:-1;3970:2:13;3955:18;;3942:32;3997:18;3986:30;;3983:50;;;4029:1;4026;4019:12;3983:50;4052:49;4093:7;4084:6;4073:9;4069:22;4052:49;:::i;:::-;4042:59;;;3511:596;;;;;:::o;4112:118::-;4198:5;4191:13;4184:21;4177:5;4174:32;4164:60;;4220:1;4217;4210:12;4235:241;4291:6;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4399:9;4386:23;4418:28;4440:5;4418:28;:::i;4708:388::-;4785:6;4793;4846:2;4834:9;4825:7;4821:23;4817:32;4814:52;;;4862:1;4859;4852:12;4814:52;4898:9;4885:23;4875:33;;4959:2;4948:9;4944:18;4931:32;4986:18;4978:6;4975:30;4972:50;;;5018:1;5015;5008:12;4972:50;5041:49;5082:7;5073:6;5062:9;5058:22;5041:49;:::i;:::-;5031:59;;;4708:388;;;;;:::o;5372:320::-;5440:6;5493:2;5481:9;5472:7;5468:23;5464:32;5461:52;;;5509:1;5506;5499:12;5461:52;5549:9;5536:23;5582:18;5574:6;5571:30;5568:50;;;5614:1;5611;5604:12;5568:50;5637:49;5678:7;5669:6;5658:9;5654:22;5637:49;:::i;6028:591::-;6098:6;6106;6159:2;6147:9;6138:7;6134:23;6130:32;6127:52;;;6175:1;6172;6165:12;6127:52;6215:9;6202:23;6244:18;6285:2;6277:6;6274:14;6271:34;;;6301:1;6298;6291:12;6271:34;6339:6;6328:9;6324:22;6314:32;;6384:7;6377:4;6373:2;6369:13;6365:27;6355:55;;6406:1;6403;6396:12;6355:55;6446:2;6433:16;6472:2;6464:6;6461:14;6458:34;;;6488:1;6485;6478:12;6458:34;6533:7;6528:2;6519:6;6515:2;6511:15;6507:24;6504:37;6501:57;;;6554:1;6551;6544:12;6501:57;6585:2;6577:11;;;;;6607:6;;-1:-1:-1;6028:591:13;;-1:-1:-1;;;;6028:591:13:o;8026:127::-;8087:10;8082:3;8078:20;8075:1;8068:31;8118:4;8115:1;8108:15;8142:4;8139:1;8132:15;8158:128;8198:3;8229:1;8225:6;8222:1;8219:13;8216:39;;;8235:18;;:::i;:::-;-1:-1:-1;8271:9:13;;8158:128::o;8983:184::-;9053:6;9106:2;9094:9;9085:7;9081:23;9077:32;9074:52;;;9122:1;9119;9112:12;9074:52;-1:-1:-1;9145:16:13;;8983:184;-1:-1:-1;8983:184:13:o;9451:245::-;9518:6;9571:2;9559:9;9550:7;9546:23;9542:32;9539:52;;;9587:1;9584;9577:12;9539:52;9619:9;9613:16;9638:28;9660:5;9638:28;:::i;9701:406::-;9903:2;9885:21;;;9942:2;9922:18;;;9915:30;9981:34;9976:2;9961:18;;9954:62;-1:-1:-1;;;10047:2:13;10032:18;;10025:40;10097:3;10082:19;;9701:406::o;10518:135::-;10557:3;10578:17;;;10575:43;;10598:18;;:::i;:::-;-1:-1:-1;10645:1:13;10634:13;;10518:135::o;14325:168::-;14365:7;14431:1;14427;14423:6;14419:14;14416:1;14413:21;14408:1;14401:9;14394:17;14390:45;14387:71;;;14438:18;;:::i;:::-;-1:-1:-1;14478:9:13;;14325:168::o;14498:127::-;14559:10;14554:3;14550:20;14547:1;14540:31;14590:4;14587:1;14580:15;14614:4;14611:1;14604:15;14630:136;14669:3;14697:5;14687:39;;14706:18;;:::i;:::-;-1:-1:-1;;;14742:18:13;;14630:136::o;15431:258::-;15503:1;15513:113;15527:6;15524:1;15521:13;15513:113;;;15603:11;;;15597:18;15584:11;;;15577:39;15549:2;15542:10;15513:113;;;15644:6;15641:1;15638:13;15635:48;;;15679:1;15670:6;15665:3;15661:16;15654:27;15635:48;;15431:258;;;:::o;15694:786::-;16105:25;16100:3;16093:38;16075:3;16160:6;16154:13;16176:62;16231:6;16226:2;16221:3;16217:12;16210:4;16202:6;16198:17;16176:62;:::i;:::-;-1:-1:-1;;;16297:2:13;16257:16;;;16289:11;;;16282:40;16347:13;;16369:63;16347:13;16418:2;16410:11;;16403:4;16391:17;;16369:63;:::i;:::-;16452:17;16471:2;16448:26;;15694:786;-1:-1:-1;;;;15694:786:13:o;16485:383::-;16634:2;16623:9;16616:21;16597:4;16666:6;16660:13;16709:6;16704:2;16693:9;16689:18;16682:34;16725:66;16784:6;16779:2;16768:9;16764:18;16759:2;16751:6;16747:15;16725:66;:::i;:::-;16852:2;16831:15;-1:-1:-1;;16827:29:13;16812:45;;;;16859:2;16808:54;;16485:383;-1:-1:-1;;16485:383:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1522400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "284",
								"NagaKidContract()": "2405",
								"getEthSignedMessageHash(bytes32)": "522",
								"getMaxSupply()": "infinite",
								"getMessageHash(address)": "592",
								"getRoleAdmin(bytes32)": "2540",
								"getTotalSupply()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2743",
								"isPause()": "infinite",
								"isPublicMintOpen()": "2427",
								"isPublicMinted(address)": "2576",
								"isWhitelistMintOpen()": "2385",
								"isWhitelistMinted(address)": "2599",
								"isWhitelistMintedAmount(address)": "2622",
								"merkleRoot()": "2341",
								"publicMint(bytes)": "infinite",
								"recoverSigner(bytes32,bytes)": "infinite",
								"renounceRole(bytes32,address)": "29090",
								"revokeRole(bytes32,address)": "infinite",
								"setMerkleRoot(bytes32)": "infinite",
								"setNagaKidContract(address)": "infinite",
								"setPublicMintOpen(bool)": "infinite",
								"setSigner(address)": "infinite",
								"setWhitelistMintOpen(bool)": "infinite",
								"signer()": "2405",
								"splitSignature(bytes)": "infinite",
								"supportsInterface(bytes4)": "473",
								"verify(address,address,bytes)": "infinite",
								"whitelistMint(bytes32[],uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1128,
									"end": 1323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1236,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1195,
									"end": 1237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1237,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1195,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1267,
									"end": 1275,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1248,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1248,
									"end": 1276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1248,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1287,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1301,
									"end": 1312,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1287,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1287,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1287,
									"end": 1313,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1287,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1323,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1437,
									"end": 1706,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1437,
									"end": 1706,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1581,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1566,
									"end": 1581,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1566,
									"end": 1581,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 1698,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1566,
									"end": 1581,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1566,
									"end": 1581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1566,
									"end": 1581,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1566,
									"end": 1581,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 601,
									"end": 635,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 601,
									"end": 635,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 601,
									"end": 635,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 666,
									"end": 668,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 651,
									"end": 669,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 651,
									"end": 669,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 644,
									"end": 687,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 644,
									"end": 687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 644,
									"end": 687,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 644,
									"end": 687,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "92CE13BAEC98D66394CF79A9F16B88C346E6BD6DD4DF75AC1144E5DC7FF8E541"
								},
								{
									"begin": 1647,
									"end": 1698,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 536,
									"end": 554,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1647,
									"end": 1698,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1706,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1706,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1706,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1706,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2284,
									"end": 2518,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2284,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2375,
									"end": 2400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2403,
									"end": 2413,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2413,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2448,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2448,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2448,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2448,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2466,
									"end": 2510,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2466,
									"end": 2510,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2466,
									"end": 2510,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 872,
									"end": 897,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 872,
									"end": 897,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 872,
									"end": 897,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 928,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 913,
									"end": 931,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 913,
									"end": 931,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 906,
									"end": 940,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 906,
									"end": 940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 906,
									"end": 940,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2466,
									"end": 2510,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "8C059DFA273E5360F0AD8D03524CFC0E8E91F05BF893452E7E92C8BF0FEFFB65"
								},
								{
									"begin": 2466,
									"end": 2510,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 863,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2466,
									"end": 2510,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 698,
									"end": 946,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 3411,
									"end": 3415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 3400,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 4017,
									"end": 4024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4027,
									"end": 4029,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551801"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551801"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 3896,
									"end": 4161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 3844,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1676,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1720,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1720,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1710,
									"end": 1735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATASIZE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATACOPY",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1751,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1752,
									"end": 1753,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "POP",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1770,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1800,
									"end": 1809,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1816,
									"end": 1822,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1812,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1812,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1832,
									"end": 1833,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1828,
									"end": 1829,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1833,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "181899199A1A9B1B9C1CB0B131B232B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1884,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1890,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1879,
									"end": 1890,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1866,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1861,
									"end": 1862,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1854,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1915,
									"end": 1916,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1835,
									"end": 1838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3438,
									"end": 3440,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3420,
									"end": 3441,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3420,
									"end": 3441,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3420,
									"end": 3441,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3457,
									"end": 3475,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3457,
									"end": 3475,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3457,
									"end": 3475,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3450,
									"end": 3480,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3550,
									"name": "PUSH",
									"source": 13,
									"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
								},
								{
									"begin": 3496,
									"end": 3514,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 3496,
									"end": 3514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3496,
									"end": 3514,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3489,
									"end": 3551,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3568,
									"end": 3586,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3568,
									"end": 3586,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 3236,
									"end": 3592,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2021,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1588,
									"end": 2029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 384,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 384,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 112,
									"end": 118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 126,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 173,
									"end": 175,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 161,
									"end": 170,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 152,
									"end": 159,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 148,
									"end": 171,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 144,
									"end": 176,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 141,
									"end": 193,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 141,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 141,
									"end": 193,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 189,
									"end": 190,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 187,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 179,
									"end": 191,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 141,
									"end": 193,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 141,
									"end": 193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 231,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 231,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 260,
									"end": 291,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 260,
									"end": 291,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 250,
									"end": 292,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 250,
									"end": 292,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 240,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 240,
									"end": 310,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 306,
									"end": 307,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 304,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 296,
									"end": 308,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 240,
									"end": 310,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 240,
									"end": 310,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 374,
									"end": 376,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 359,
									"end": 377,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 359,
									"end": 377,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 359,
									"end": 377,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 359,
									"end": 377,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 353,
									"end": 378,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 329,
									"end": 334,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 329,
									"end": 334,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 353,
									"end": 378,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 353,
									"end": 378,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 384,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 951,
									"end": 1209,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 951,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1023,
									"end": 1024,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1047,
									"end": 1053,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1044,
									"end": 1045,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1041,
									"end": 1054,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1123,
									"end": 1134,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1123,
									"end": 1134,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1123,
									"end": 1134,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1117,
									"end": 1135,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1104,
									"end": 1115,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1104,
									"end": 1115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1104,
									"end": 1115,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1097,
									"end": 1136,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1069,
									"end": 1071,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1062,
									"end": 1072,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 1033,
									"end": 1146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1170,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1158,
									"end": 1171,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1196,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1185,
									"end": 1188,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1181,
									"end": 1197,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1174,
									"end": 1201,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 951,
									"end": 1209,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 951,
									"end": 1209,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 951,
									"end": 1209,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 951,
									"end": 1209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1214,
									"end": 2000,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1214,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1625,
									"end": 1650,
									"name": "PUSH",
									"source": 13,
									"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
								},
								{
									"begin": 1620,
									"end": 1623,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1613,
									"end": 1651,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1595,
									"end": 1598,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 1686,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1674,
									"end": 1687,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1696,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 1748,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1741,
									"end": 1744,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1749,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1734,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1728,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1718,
									"end": 1735,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1696,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1696,
									"end": 1758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1696,
									"end": 1758,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 1696,
									"end": 1758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1034B99036B4B9B9B4B733903937B6329"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1817,
									"end": 1819,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1777,
									"end": 1793,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1793,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1793,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 1820,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 1820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1809,
									"end": 1820,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1802,
									"end": 1842,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1867,
									"end": 1880,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1867,
									"end": 1880,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1889,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 1867,
									"end": 1880,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1938,
									"end": 1940,
									"name": "PUSH",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1930,
									"end": 1941,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 1941,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 1927,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1911,
									"end": 1928,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1911,
									"end": 1928,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1889,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1889,
									"end": 1952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1889,
									"end": 1952,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 1889,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1972,
									"end": 1989,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1991,
									"end": 1993,
									"name": "PUSH",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1968,
									"end": 1994,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1968,
									"end": 1994,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1214,
									"end": 2000,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1214,
									"end": 2000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2388,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2005,
									"end": 2388,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2154,
									"end": 2156,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2143,
									"end": 2152,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2121,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2180,
									"end": 2193,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2229,
									"end": 2235,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2226,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2213,
									"end": 2222,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2227,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2236,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2245,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2304,
									"end": 2310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2301,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2288,
									"end": 2297,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2284,
									"end": 2302,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2279,
									"end": 2281,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2277,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2267,
									"end": 2282,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2245,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2245,
									"end": 2311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2245,
									"end": 2311,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2245,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2372,
									"end": 2374,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2351,
									"end": 2366,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2347,
									"end": 2376,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2332,
									"end": 2377,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2332,
									"end": 2377,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2332,
									"end": 2377,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2332,
									"end": 2377,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2379,
									"end": 2381,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2328,
									"end": 2382,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2328,
									"end": 2382,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2388,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2005,
									"end": 2388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2393,
									"end": 2520,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2393,
									"end": 2520,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2454,
									"end": 2464,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2449,
									"end": 2452,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2442,
									"end": 2443,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2489,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 2482,
									"end": 2483,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2475,
									"end": 2490,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2506,
									"end": 2507,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2514,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2693,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 2525,
									"end": 2693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2572,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2631,
									"end": 2632,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2627,
									"end": 2628,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2623,
									"end": 2629,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2619,
									"end": 2633,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2613,
									"end": 2634,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2608,
									"end": 2609,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2601,
									"end": 2610,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2594,
									"end": 2611,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2590,
									"end": 2635,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2587,
									"end": 2658,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2587,
									"end": 2658,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2587,
									"end": 2658,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2638,
									"end": 2656,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2638,
									"end": 2656,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2638,
									"end": 2656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2638,
									"end": 2656,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2638,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2678,
									"end": 2687,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2525,
									"end": 2693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2698,
									"end": 2826,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 2698,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2738,
									"end": 2741,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2769,
									"end": 2770,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2765,
									"end": 2771,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2759,
									"end": 2772,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2756,
									"end": 2795,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2756,
									"end": 2795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2756,
									"end": 2795,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2775,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2775,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2811,
									"end": 2820,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2811,
									"end": 2820,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2698,
									"end": 2826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2831,
									"end": 2958,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2831,
									"end": 2958,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2902,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2887,
									"end": 2890,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2883,
									"end": 2903,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2880,
									"end": 2881,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2904,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2923,
									"end": 2927,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2920,
									"end": 2921,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2913,
									"end": 2928,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 2951,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2944,
									"end": 2945,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2952,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2963,
									"end": 3090,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 2963,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3024,
									"end": 3034,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 3019,
									"end": 3022,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 3015,
									"end": 3035,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3012,
									"end": 3013,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3005,
									"end": 3036,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3059,
									"name": "PUSH",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 3052,
									"end": 3053,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3045,
									"end": 3060,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3079,
									"end": 3083,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3076,
									"end": 3077,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3069,
									"end": 3084,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3231,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 3095,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3134,
									"end": 3137,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3152,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3152,
									"end": 3191,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 3171,
									"end": 3189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3171,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3207,
									"end": 3225,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3207,
									"end": 3225,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3592,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 3236,
									"end": 3592,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4917,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f92cda8f8369134a0f93cbf91a4ed4a9b33e267a1c0227f87ecb64be4cb6c0b64736f6c634300080f0033",
									".code": [
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "7CB64759"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "A7BB5803"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "F055C7A9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "F055C7A9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "FA540801"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "FADE63C9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "FF0938A7"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "A7BB5803"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "C4E41B22"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "DE6892C8"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "97ABA7F9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "97ABA7F9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "9E6C8855"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "A4435DFD"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "7CB64759"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "8B7B80B7"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "2EB4A7AB"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "4C0F38C2"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "4C0F38C2"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "5997BBEE"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "6387F804"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "6C19E783"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "2EB4A7AB"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "42920A46"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "1F5AC1B2"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "1F5AC1B2"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "238AC933"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "2904E6D9"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "18F52C48"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "1B0D2D3B"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 276,
											"end": 4917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 444,
											"end": 475,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 444,
											"end": 475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 444,
											"end": 475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 444,
											"end": 475,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4321,
											"end": 4455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4440,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4321,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 885,
											"end": 1062,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 484,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 484,
											"end": 505,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 484,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1249,
											"end": 1452,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2528,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2528,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4703,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4194,
											"end": 4313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4313,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2106,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2106,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1718,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1718,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2284,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2284,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 368,
											"end": 402,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 368,
											"end": 402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 368,
											"end": 402,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 402,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1437,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1437,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 437,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 409,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 409,
											"end": 437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 409,
											"end": 437,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 409,
											"end": 437,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5895,
											"end": 5920,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5920,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5951,
											"end": 5953,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5929,
											"end": 5963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6015,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5999,
											"end": 6016,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6017,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5697,
											"end": 6023,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4584,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3411,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3411,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4463,
											"end": 4576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4576,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1923,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1923,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4818,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6851,
											"end": 6853,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6847,
											"end": 6862,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 6868,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 6902,
											"end": 6917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6917,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6884,
											"end": 6896,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 6884,
											"end": 6896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6884,
											"end": 6896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6877,
											"end": 6923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 6951,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 6939,
											"end": 6951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2528,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7203,
											"end": 7205,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7206,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7275,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1368,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1368,
											"end": 1377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7563,
											"end": 7565,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2730B3B0A5B4B2103BB0B9902830BAB9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7322,
											"end": 7665,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2673,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2654,
											"end": 2673,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2681,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2681,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2654,
											"end": 2681,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 7979,
											"name": "PUSH",
											"source": 13,
											"value": "57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7980,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7670,
											"end": 8021,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2646,
											"end": 2713,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2751,
											"end": 2758,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2748,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2732,
											"end": 2746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2732,
											"end": 2748,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2748,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2732,
											"end": 2748,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2732,
											"end": 2758,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2732,
											"end": 2765,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 2781,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2724,
											"end": 2781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8493,
											"end": 8495,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2724,
											"end": 2781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8496,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8505,
											"end": 8535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F76657220737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8551,
											"end": 8569,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8551,
											"end": 8569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8544,
											"end": 8585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8291,
											"end": 8626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2724,
											"end": 2781,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2828,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4280,
											"end": 4305,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2837,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2837,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2865,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8815,
											"end": 8836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 8937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8631,
											"end": 8978,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2792,
											"end": 2865,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5391393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 2908,
											"end": 2935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2899,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2937,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2908,
											"end": 2937,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2908,
											"end": 2937,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2946,
											"end": 2950,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9380,
											"end": 9440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2884,
											"end": 2952,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2884,
											"end": 2952,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2960,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2960,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2956,
											"end": 2960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2884,
											"end": 2960,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2876,
											"end": 3006,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2876,
											"end": 3006,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3069,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3037,
											"end": 3049,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3049,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3060,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3068,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3025,
											"end": 3069,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3069,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3025,
											"end": 3069,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3111,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3017,
											"end": 3111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10353,
											"end": 10355,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10356,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10392,
											"end": 10426,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A65642057686974656C6973744D696E74205468697320"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10372,
											"end": 10390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10365,
											"end": 10427,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB9B2B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10488,
											"end": 10507,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10488,
											"end": 10507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 10112,
											"end": 10513,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3017,
											"end": 3111,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3153,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3142,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3124,
											"end": 3154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3161,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3124,
											"end": 3161,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3161,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3124,
											"end": 3161,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3161,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3172,
											"end": 3208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3208,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3172,
											"end": 3219,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3172,
											"end": 3219,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3219,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3242,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3258,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3249,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3258,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40D097C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3314,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3294,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40D097C3"
										},
										{
											"begin": 3279,
											"end": 3303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 3260,
											"end": 3263,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3263,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3232,
											"end": 3327,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3344,
											"end": 3395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3394,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10866,
											"end": 10900,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3360,
											"end": 3370,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938"
										},
										{
											"begin": 3344,
											"end": 3395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10805,
											"end": 10823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3395,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4894,
											"end": 4898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4883,
											"end": 4908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11115,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11116,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11154,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 11132,
											"end": 11150,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11132,
											"end": 11150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11132,
											"end": 11150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11125,
											"end": 11155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11225,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11171,
											"end": 11189,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11171,
											"end": 11189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11171,
											"end": 11189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11235,
											"end": 11280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10911,
											"end": 11322,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5968,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5ABEB01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "D5ABEB01"
										},
										{
											"begin": 4775,
											"end": 4800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4775,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4775,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2220,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2220,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2264,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7955B9C09440C823C45EC1ED87CD3F0860E31E9F5A8E65CFF61BED27545BEDD7"
										},
										{
											"begin": 2238,
											"end": 2264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2238,
											"end": 2264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2220,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 418,
											"end": 436,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 305,
											"end": 492,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2264,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1857,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1830,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3271C8694494A7CC76CD185C743E9EE6B515A043EA98C0DB7F5CA112F694ADD4"
										},
										{
											"begin": 1875,
											"end": 1906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1906,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1914,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2284,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2413,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2413,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2448,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10832,
											"end": 10857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10866,
											"end": 10900,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10866,
											"end": 10900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10866,
											"end": 10900,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2466,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C059DFA273E5360F0AD8D03524CFC0E8E91F05BF893452E7E92C8BF0FEFFB65"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10805,
											"end": 10823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2466,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10658,
											"end": 10906,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12330,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 12305,
											"end": 12330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12305,
											"end": 12330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12382,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12366,
											"end": 12383,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12366,
											"end": 12383,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12346,
											"end": 12364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12339,
											"end": 12384,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12339,
											"end": 12384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12339,
											"end": 12384,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12339,
											"end": 12384,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12400,
											"end": 12418,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12400,
											"end": 12418,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12400,
											"end": 12418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12393,
											"end": 12427,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12393,
											"end": 12427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12393,
											"end": 12427,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12470,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12470,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12277,
											"end": 12296,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12277,
											"end": 12296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1437,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1629,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1581,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11795,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11796,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "92CE13BAEC98D66394CF79A9F16B88C346E6BD6DD4DF75AC1144E5DC7FF8E541"
										},
										{
											"begin": 1647,
											"end": 1698,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11516,
											"end": 11820,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12683,
											"end": 12685,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12665,
											"end": 12686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12724,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12720,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12695,
											"end": 12725,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12761,
											"end": 12787,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12734,
											"end": 12788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12805,
											"end": 12823,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12805,
											"end": 12823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 12481,
											"end": 12829,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4584,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4638,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4685,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 4658,
											"end": 4685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4673,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4687,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5275,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5288,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5263,
											"end": 5289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3411,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7203,
											"end": 7205,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7206,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7275,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6962,
											"end": 7317,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1368,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1368,
											"end": 1377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1368,
											"end": 1377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7563,
											"end": 7565,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2730B3B0A5B4B2103BB0B9902830BAB9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7322,
											"end": 7665,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1360,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3524,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3508,
											"end": 3524,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3532,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3532,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3532,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3564,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3564,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7950,
											"end": 7979,
											"name": "PUSH",
											"source": 13,
											"value": "57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7980,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7670,
											"end": 8021,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3500,
											"end": 3564,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3592,
											"modifierDepth": 2,
											"name": "ORIGIN",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3606,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3606,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3638,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13038,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3575,
											"end": 3638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13018,
											"end": 13039,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13077,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13048,
											"end": 13078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13114,
											"end": 13143,
											"name": "PUSH",
											"source": 13,
											"value": "6861686120436F6E74726163742063616E27742063616C6C206D650000000000"
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13094,
											"end": 13112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 12834,
											"end": 13185,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3575,
											"end": 3638,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3682,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4546,
											"end": 4568,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3691,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3691,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3691,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3691,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3719,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8815,
											"end": 8836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8891,
											"end": 8909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 8937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8954,
											"end": 8972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8631,
											"end": 8978,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3649,
											"end": 3719,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 3765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 3738,
											"end": 3754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3738,
											"end": 3752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3738,
											"end": 3754,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3754,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3738,
											"end": 3754,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3738,
											"end": 3758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3738,
											"end": 3758,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3738,
											"end": 3758,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3765,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3787,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13392,
											"end": 13394,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3730,
											"end": 3787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13374,
											"end": 13395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13431,
											"end": 13433,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 13411,
											"end": 13429,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13411,
											"end": 13429,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13429,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13404,
											"end": 13434,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DD995C8814DD5C1C1B1E48105B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13450,
											"end": 13468,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13450,
											"end": 13468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13450,
											"end": 13468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13443,
											"end": 13491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 13190,
											"end": 13532,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3730,
											"end": 3787,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5391393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3829,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 3830,
											"end": 3857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3830,
											"end": 3859,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3830,
											"end": 3859,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3868,
											"end": 3872,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9380,
											"end": 9440,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3806,
											"end": 3874,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3806,
											"end": 3874,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3882,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3882,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3806,
											"end": 3882,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3798,
											"end": 3928,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3798,
											"end": 3928,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3954,
											"end": 3960,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 3971,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 3971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3947,
											"end": 3953,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3947,
											"end": 3953,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3947,
											"end": 3977,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3947,
											"end": 3977,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 4016,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3939,
											"end": 4016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 4016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3939,
											"end": 4016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13721,
											"end": 13742,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13778,
											"end": 13780,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13758,
											"end": 13776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13751,
											"end": 13781,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13817,
											"end": 13851,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A6564205075626C69634D696E74205468697320557365"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13790,
											"end": 13852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13868,
											"end": 13886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13861,
											"end": 13893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13929,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13910,
											"end": 13929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 13537,
											"end": 13935,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3939,
											"end": 4016,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4055,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4029,
											"end": 4056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4056,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4063,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4063,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4059,
											"end": 4063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4029,
											"end": 4063,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4063,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4074,
											"end": 4089,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40D097C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4074,
											"end": 4089,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40D097C3"
										},
										{
											"begin": 4074,
											"end": 4098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4074,
											"end": 4110,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4177,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4151,
											"end": 4161,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "AB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B"
										},
										{
											"begin": 4138,
											"end": 4178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4178,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 4186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14182,
											"end": 14248,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14170,
											"end": 14249,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14277,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 14265,
											"end": 14277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14277,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14302,
											"end": 14314,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 14302,
											"end": 14314,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 13940,
											"end": 14320,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1923,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2043,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1E78B6FB38A6776B3B021A6298E924F52991AA2BB97DD89E0A8CD9765DF86367"
										},
										{
											"begin": 2061,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2061,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 418,
											"end": 436,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 305,
											"end": 492,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4818,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C975ABB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4904,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 4882,
											"end": 4904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4882,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1720,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1720,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1710,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1745,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1770,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1812,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1812,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1866,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1854,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 1835,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14973,
											"end": 14975,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14992,
											"end": 15010,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14992,
											"end": 15010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14992,
											"end": 15010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14985,
											"end": 15015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15051,
											"end": 15085,
											"name": "PUSH",
											"source": 13,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 15031,
											"end": 15049,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15031,
											"end": 15049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15031,
											"end": 15049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15024,
											"end": 15086,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15103,
											"end": 15121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 14771,
											"end": 15127,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 195,
											"end": 598,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 195,
											"end": 598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 332,
											"end": 336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 363,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 353,
											"end": 363,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 353,
											"end": 368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 353,
											"end": 368,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 349,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 349,
											"end": 409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 349,
											"end": 409,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 349,
											"end": 409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15309,
											"end": 15311,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15305,
											"end": 15320,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15305,
											"end": 15320,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15354,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15289,
											"end": 15355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15371,
											"end": 15383,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 15371,
											"end": 15383,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15371,
											"end": 15383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15364,
											"end": 15392,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15132,
											"end": 15426,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 542,
											"end": 574,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 441,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 441,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 421,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 421,
											"end": 590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 195,
											"end": 598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7327,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7685,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1298,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3989,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4101,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3896,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3844,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 1908,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1962,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 628,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 497,
											"end": 628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 572,
											"end": 603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 572,
											"end": 603,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 562,
											"end": 604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 562,
											"end": 604,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 552,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 552,
											"end": 622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 608,
											"end": 620,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 633,
											"end": 880,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 633,
											"end": 880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 742,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 716,
											"end": 748,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 751,
											"end": 763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 800,
											"end": 809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 787,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 819,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 819,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 819,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1555,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1567,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1540,
											"end": 1572,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1587,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1608,
											"end": 1631,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 2331,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1642,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1804,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1777,
											"end": 1809,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1872,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1938,
											"end": 1950,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 1918,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1971,
											"end": 1993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1993,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2039,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 2002,
											"end": 2057,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2043,
											"end": 2055,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2057,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 2002,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2139,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2105,
											"end": 2139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2137,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2139,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2105,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2166,
											"end": 2180,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2164,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2198,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2215,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 2148,
											"end": 2215,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2215,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 2148,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2325,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2325,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 2331,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2465,
											"end": 2467,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2451,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2463,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2436,
											"end": 2468,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2433,
											"end": 2485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2433,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 2433,
											"end": 2485,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2433,
											"end": 2485,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 2433,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2527,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2549,
											"end": 2581,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2590,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2621,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 2590,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2783,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2656,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2727,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2712,
											"end": 2715,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2729,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2887,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 2850,
											"end": 2905,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2905,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 2850,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 3003,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2990,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 2990,
											"end": 3026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 3006,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3083,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3135,
											"end": 3148,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3127,
											"end": 3158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3123,
											"end": 3163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3221,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 3173,
											"end": 3245,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 3225,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3302,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3346,
											"end": 3349,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3336,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3318,
											"end": 3344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3367,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 3312,
											"end": 3367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3363,
											"end": 3364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3367,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 3312,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3405,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3399,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3376,
											"end": 3430,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3474,
											"end": 3475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3464,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3439,
											"end": 3476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3611,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3654,
											"end": 3663,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3664,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3669,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3680,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3684,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3721,
											"end": 3730,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3731,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 3765,
											"end": 3770,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 3740,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3771,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 3740,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 3850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 3860,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 3860,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3942,
											"end": 3974,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 3983,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4052,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4069,
											"end": 4091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4052,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 4052,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4052,
											"end": 4101,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 4052,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4101,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4112,
											"end": 4230,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4112,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4198,
											"end": 4203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4204,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4205,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4174,
											"end": 4206,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 4164,
											"end": 4224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4235,
											"end": 4476,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 4235,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4330,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4342,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4315,
											"end": 4347,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4409,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4418,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4799,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4843,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4844,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4849,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4866,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 4814,
											"end": 4866,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4866,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 4814,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4908,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4875,
											"end": 4908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4875,
											"end": 4908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4959,
											"end": 4961,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4962,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4963,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 5005,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4972,
											"end": 5022,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4972,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 4972,
											"end": 5022,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5016,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5020,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4972,
											"end": 5022,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 4972,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5071,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 5041,
											"end": 5090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5090,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 5041,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5031,
											"end": 5090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 5096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5692,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5372,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5495,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5479,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5468,
											"end": 5491,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5496,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5513,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5461,
											"end": 5513,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5513,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 5461,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5559,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5601,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5618,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 5568,
											"end": 5618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5614,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5616,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5618,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 5568,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 5678,
											"end": 5685,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5658,
											"end": 5667,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 5637,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6028,
											"end": 6619,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6028,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6098,
											"end": 6104,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6159,
											"end": 6161,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6156,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6145,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6157,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6162,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6179,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 6127,
											"end": 6179,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6127,
											"end": 6179,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 6127,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6225,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6285,
											"end": 6287,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6277,
											"end": 6283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6274,
											"end": 6288,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6337,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6377,
											"end": 6381,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6408,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6433,
											"end": 6449,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6474,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6475,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6488,
											"end": 6489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6478,
											"end": 6490,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6540,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6528,
											"end": 6530,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6517,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6511,
											"end": 6526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6541,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6558,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 6501,
											"end": 6558,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6556,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6558,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 6501,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6028,
											"end": 6619,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8153,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8026,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8087,
											"end": 8097,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8082,
											"end": 8085,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8078,
											"end": 8098,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8099,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8122,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8115,
											"end": 8116,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8108,
											"end": 8123,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8142,
											"end": 8146,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8147,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8158,
											"end": 8286,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 8158,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8198,
											"end": 8201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 8222,
											"end": 8223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8232,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8255,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 8216,
											"end": 8255,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8235,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8158,
											"end": 8286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9167,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 8983,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9108,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9094,
											"end": 9103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9092,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 9104,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9109,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9074,
											"end": 9126,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9074,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 9074,
											"end": 9126,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9124,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9074,
											"end": 9126,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 9074,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9145,
											"end": 9161,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9145,
											"end": 9161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 9167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9451,
											"end": 9696,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 9451,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9518,
											"end": 9524,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9557,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9546,
											"end": 9569,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9542,
											"end": 9574,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9539,
											"end": 9591,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9539,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9539,
											"end": 9591,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9589,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9539,
											"end": 9591,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9539,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9613,
											"end": 9629,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 9660,
											"end": 9665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 9638,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9701,
											"end": 10107,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 9701,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 9906,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9915,
											"end": 9945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10015,
											"name": "PUSH",
											"source": 13,
											"value": "5468697320436F6E7472616374206E6F742068617665207065726D697373696F"
										},
										{
											"begin": 9976,
											"end": 9978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9954,
											"end": 10016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37103A379036B4B73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10082,
											"end": 10101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10082,
											"end": 10101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9701,
											"end": 10107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10518,
											"end": 10653,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10518,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10557,
											"end": 10560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10595,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10578,
											"end": 10595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10575,
											"end": 10618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10598,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10598,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10598,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10598,
											"end": 10616,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10598,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10634,
											"end": 10647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10634,
											"end": 10647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10518,
											"end": 10653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14325,
											"end": 14493,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 14325,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14365,
											"end": 14372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14433,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14416,
											"end": 14417,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14413,
											"end": 14434,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14408,
											"end": 14409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14401,
											"end": 14410,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14394,
											"end": 14411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14390,
											"end": 14435,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14458,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14387,
											"end": 14458,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14438,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14438,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 14438,
											"end": 14456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14438,
											"end": 14456,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14438,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14478,
											"end": 14487,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14478,
											"end": 14487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14325,
											"end": 14493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14498,
											"end": 14625,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14498,
											"end": 14625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14569,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 14554,
											"end": 14557,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14550,
											"end": 14570,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14547,
											"end": 14548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14540,
											"end": 14571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 14587,
											"end": 14588,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14580,
											"end": 14595,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14611,
											"end": 14612,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14619,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14630,
											"end": 14766,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 14630,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14669,
											"end": 14672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14697,
											"end": 14702,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14687,
											"end": 14726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14706,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14706,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 14706,
											"end": 14724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14706,
											"end": 14724,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14706,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14630,
											"end": 14766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15431,
											"end": 15689,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 15431,
											"end": 15689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15527,
											"end": 15533,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15524,
											"end": 15525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15521,
											"end": 15534,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15603,
											"end": 15614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15603,
											"end": 15614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15603,
											"end": 15614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15597,
											"end": 15615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15595,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15577,
											"end": 15616,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15549,
											"end": 15551,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15542,
											"end": 15552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 15513,
											"end": 15626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15644,
											"end": 15650,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15641,
											"end": 15642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15638,
											"end": 15651,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15679,
											"end": 15680,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15670,
											"end": 15676,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15668,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15661,
											"end": 15677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15654,
											"end": 15681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15431,
											"end": 15689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15431,
											"end": 15689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15431,
											"end": 15689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15431,
											"end": 15689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 16480,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 15694,
											"end": 16480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16105,
											"end": 16130,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 16100,
											"end": 16103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16093,
											"end": 16131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16075,
											"end": 16078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16166,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16154,
											"end": 16167,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 16231,
											"end": 16237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16226,
											"end": 16228,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 16221,
											"end": 16224,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16210,
											"end": 16214,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16198,
											"end": 16215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 16176,
											"end": 16238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16238,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 16176,
											"end": 16238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16297,
											"end": 16299,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 16257,
											"end": 16273,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16273,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16300,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16282,
											"end": 16322,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16347,
											"end": 16360,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16347,
											"end": 16360,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16369,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 16347,
											"end": 16360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16418,
											"end": 16420,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 16410,
											"end": 16421,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16410,
											"end": 16421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16403,
											"end": 16407,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16408,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16391,
											"end": 16408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16369,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 16369,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16369,
											"end": 16432,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 16369,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16452,
											"end": 16469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 16448,
											"end": 16474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16448,
											"end": 16474,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 16480,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15694,
											"end": 16480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16485,
											"end": 16868,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 16485,
											"end": 16868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16634,
											"end": 16636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16623,
											"end": 16632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 16637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16597,
											"end": 16601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16666,
											"end": 16672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16660,
											"end": 16673,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16709,
											"end": 16715,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16704,
											"end": 16706,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16693,
											"end": 16702,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16689,
											"end": 16707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16682,
											"end": 16716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16725,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16784,
											"end": 16790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16779,
											"end": 16781,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16768,
											"end": 16777,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16764,
											"end": 16782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16751,
											"end": 16757,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16747,
											"end": 16762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16725,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 16725,
											"end": 16791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16725,
											"end": 16791,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 16725,
											"end": 16791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16852,
											"end": 16854,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16831,
											"end": 16846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16827,
											"end": 16856,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16812,
											"end": 16857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16812,
											"end": 16857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16812,
											"end": 16857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16812,
											"end": 16857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16859,
											"end": 16861,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16808,
											"end": 16862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16485,
											"end": 16868,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16485,
											"end": 16868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidNFT.sol",
								"MintNagaKid.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"NagaKidContract()": "8b7b80b7",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMaxSupply()": "4c0f38c2",
							"getMessageHash(address)": "1f5ac1b2",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalSupply()": "c4e41b22",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isPause()": "ff0938a7",
							"isPublicMintOpen()": "a4435dfd",
							"isPublicMinted(address)": "f055c7a9",
							"isWhitelistMintOpen()": "18f52c48",
							"isWhitelistMinted(address)": "5997bbee",
							"isWhitelistMintedAmount(address)": "1b0d2d3b",
							"merkleRoot()": "2eb4a7ab",
							"publicMint(bytes)": "de6892c8",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setMerkleRoot(bytes32)": "7cb64759",
							"setNagaKidContract(address)": "9e6c8855",
							"setPublicMintOpen(bool)": "6387f804",
							"setSigner(address)": "6c19e783",
							"setWhitelistMintOpen(bool)": "fade63c9",
							"signer()": "238ac933",
							"splitSignature(bytes)": "a7bb5803",
							"supportsInterface(bytes4)": "01ffc9a7",
							"verify(address,address,bytes)": "42920a46",
							"whitelistMint(bytes32[],uint256)": "2904e6d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INagaKidNFT\",\"name\":\"_NagaKid\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PublicMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootBefore\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRootAfter\",\"type\":\"bytes32\"}],\"name\":\"SetMerkleRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NagaKidBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NagaKidAfter\",\"type\":\"address\"}],\"name\":\"SetNagaKidContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"SetPublicMintOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signerAfter\",\"type\":\"address\"}],\"name\":\"SetSigner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"SetWhitelistMintOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WhitelistMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NagaKidContract\",\"outputs\":[{\"internalType\":\"contract INagaKidNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isPublicMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelistMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelistMintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INagaKidNFT\",\"name\":\"_NagaKid\",\"type\":\"address\"}],\"name\":\"setNagaKidContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"setPublicMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"setWhitelistMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proofMerkle\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"whitelistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MintNagaKid.sol\":\"MintNagaKid\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"INagaKidNFT.sol\":{\"keccak256\":\"0x3f574b5b1ea03505ad7b06809e1ece1979bfb6643b93af7158416d59515fa121\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1af90a40676404bf47e3d4446a10c7f52f98b10b636e54e235446222ab6ad3b\",\"dweb:/ipfs/QmYG7tgNXNer6FdU2czpskwJws5KNzrgFB6TvFgNXyEysv\"]},\"MintNagaKid.sol\":{\"keccak256\":\"0x63fa71a83e9ffa3f89812d496846afda062d03407d09f4622556245bbb68804d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7bbd5c27a75ac4db20f0aaef869195deb3cc7fa4d5126b16f87eb4b316b8289\",\"dweb:/ipfs/QmZeX4vAB9Q3mRkp7kwzfcC7ksnPpWkGVewvFzZsYLyp3n\"]},\"VerifySignature.sol\":{\"keccak256\":\"0xeb2b2d1d8bcce32bb58f628eb83abd605d782fb594107e23cde2c6a60cec8ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3bb714697d808302d945dd1aa580191998c2d8400c0b46af83eb930cb3e8bbd\",\"dweb:/ipfs/Qmds4fcezGFSqzhtpHjjyKwd4GcPE3wP7Vwwro2Foq5cmR\"]},\"Whitelist.sol\":{\"keccak256\":\"0x3c4c5dc32634034c6f37fc379525c3e3e89fc48e1a788ddb9fa82e027b4eb489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://080dc62e901a60d391d3eae01cd0d25a8581a79196452f84d129234bf421bc76\",\"dweb:/ipfs/QmNb4H54fDhAmpv41eLnb1jB1frUpAexRtESTpVCHJx9PU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1565,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes32"
							},
							{
								"astId": 24,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 403,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 976,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "NagaKidContract",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INagaKidNFT)958"
							},
							{
								"astId": 978,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "isPublicMintOpen",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 980,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "isWhitelistMintOpen",
								"offset": 21,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 982,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "signer",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 986,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "_isWhitelistMinted",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 990,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "_isWhitelistMintedAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 994,
								"contract": "MintNagaKid.sol:MintNagaKid",
								"label": "_isPublicMinted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INagaKidNFT)958": {
								"encoding": "inplace",
								"label": "contract INagaKidNFT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "MintNagaKid.sol:MintNagaKid",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "MintNagaKid.sol:MintNagaKid",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"VerifySignature.sol": {
				"VerifySignature": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VerifySignature.sol\":61:2303  contract VerifySignature {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VerifySignature.sol\":61:2303  contract VerifySignature {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":2058:2072   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2051:2073   */\n      iszero\n        /* \"#utility.yul\":2033:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2021:2023   */\n      0x20\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      tag_12\n        /* \"#utility.yul\":1893:2080   */\n      jump\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_5:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2642:2674   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2624:2675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2612:2614   */\n      0x20\n        /* \"#utility.yul\":2597:2615   */\n      add\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      tag_12\n        /* \"#utility.yul\":2478:2681   */\n      jump\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3209:3234   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3250:3268   */\n      dup5\n      add\n        /* \"#utility.yul\":3243:3277   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3325:3329   */\n      0xff\n        /* \"#utility.yul\":3313:3330   */\n      and\n        /* \"#utility.yul\":3293:3311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3286:3331   */\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x60\n        /* \"#utility.yul\":3182:3200   */\n      add\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_12\n        /* \"#utility.yul\":3011:3337   */\n      jump\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_7:\n      tag_8\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_11:\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3754:3756   */\n      0x60\n        /* \"#utility.yul\":3750:3765   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":3746:3770   */\n      dup3\n      and\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":3734:3771   */\n      mstore\n        /* \"VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":3805:3820   */\n      swap1\n      shl\n        /* \"#utility.yul\":3801:3825   */\n      and\n        /* \"#utility.yul\":3787:3799   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":3780:3826   */\n      mstore\n        /* \"VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":3842:3854   */\n      0x48\n      add\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_38:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_17:\n        /* \"VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_41\n        /* \"VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"VerifySignature.sol\":935:949  getMessageHash */\n      tag_11\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_41:\n        /* \"VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_42\n        /* \"VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_35\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_42:\n        /* \"VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_43\n        /* \"VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_23\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_23:\n        /* \"VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_45\n        /* \"VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"VerifySignature.sol\":1306:1320  splitSignature */\n      tag_29\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_45:\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":4092:4117   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":4165:4169   */\n      0xff\n        /* \"#utility.yul\":4153:4170   */\n      dup4\n      and\n        /* \"#utility.yul\":4133:4151   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4126:4171   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4187:4205   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":4180:4214   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4230:4248   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":4223:4257   */\n      dup4\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":4064:4083   */\n      0xa0\n      add\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_29:\n        /* \"VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4452:4473   */\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x18\n        /* \"#utility.yul\":4489:4507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4482:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4574   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":4528:4546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4521:4575   */\n      mstore\n        /* \"#utility.yul\":4592:4610   */\n      0x64\n      add\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n      pop\n      pop\n      pop\n        /* \"VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_35:\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":4863:4929   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4851:4930   */\n      mstore\n        /* \"#utility.yul\":4946:4958   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":4939:4967   */\n      dup3\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":4983:4995   */\n      0x5c\n      add\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_38\n        /* \"#utility.yul\":4621:5001   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_57:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_62:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_64:\n        /* \"#utility.yul\":343:372   */\n      tag_65\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_57\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:692   */\n    tag_58:\n        /* \"#utility.yul\":626:636   */\n      0x4e487b71\n        /* \"#utility.yul\":621:624   */\n      0xe0\n        /* \"#utility.yul\":617:637   */\n      shl\n        /* \"#utility.yul\":614:615   */\n      0x00\n        /* \"#utility.yul\":607:638   */\n      mstore\n        /* \"#utility.yul\":657:661   */\n      0x41\n        /* \"#utility.yul\":654:655   */\n      0x04\n        /* \"#utility.yul\":647:662   */\n      mstore\n        /* \"#utility.yul\":681:685   */\n      0x24\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":671:686   */\n      revert\n        /* \"#utility.yul\":697:1415   */\n    tag_59:\n        /* \"#utility.yul\":739:744   */\n      0x00\n        /* \"#utility.yul\":792:795   */\n      dup3\n        /* \"#utility.yul\":785:789   */\n      0x1f\n        /* \"#utility.yul\":777:783   */\n      dup4\n        /* \"#utility.yul\":773:790   */\n      add\n        /* \"#utility.yul\":769:796   */\n      slt\n        /* \"#utility.yul\":759:814   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":759:814   */\n    tag_69:\n        /* \"#utility.yul\":846:852   */\n      dup2\n        /* \"#utility.yul\":833:853   */\n      calldataload\n        /* \"#utility.yul\":872:890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":909:911   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      dup3\n        /* \"#utility.yul\":902:912   */\n      gt\n        /* \"#utility.yul\":899:935   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":915:933   */\n      tag_71\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":990:992   */\n      0x40\n        /* \"#utility.yul\":984:993   */\n      mload\n        /* \"#utility.yul\":958:960   */\n      0x1f\n        /* \"#utility.yul\":1044:1057   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1040:1062   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1064:1066   */\n      0x3f\n        /* \"#utility.yul\":1036:1067   */\n      add\n        /* \"#utility.yul\":1032:1072   */\n      and\n        /* \"#utility.yul\":1020:1073   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1088:1106   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1108:1130   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1085:1131   */\n      or\n        /* \"#utility.yul\":1082:1154   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1134:1152   */\n      tag_73\n      tag_58\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1174:1184   */\n      dup2\n        /* \"#utility.yul\":1170:1172   */\n      0x40\n        /* \"#utility.yul\":1163:1185   */\n      mstore\n        /* \"#utility.yul\":1209:1211   */\n      dup4\n        /* \"#utility.yul\":1201:1207   */\n      dup2\n        /* \"#utility.yul\":1194:1212   */\n      mstore\n        /* \"#utility.yul\":1255:1258   */\n      dup7\n        /* \"#utility.yul\":1248:1252   */\n      0x20\n        /* \"#utility.yul\":1243:1245   */\n      dup6\n        /* \"#utility.yul\":1235:1241   */\n      dup9\n        /* \"#utility.yul\":1231:1246   */\n      add\n        /* \"#utility.yul\":1227:1253   */\n      add\n        /* \"#utility.yul\":1224:1259   */\n      gt\n        /* \"#utility.yul\":1221:1276   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1272:1273   */\n      0x00\n        /* \"#utility.yul\":1269:1270   */\n      dup1\n        /* \"#utility.yul\":1262:1274   */\n      revert\n        /* \"#utility.yul\":1221:1276   */\n    tag_74:\n        /* \"#utility.yul\":1336:1338   */\n      dup4\n        /* \"#utility.yul\":1329:1333   */\n      0x20\n        /* \"#utility.yul\":1321:1327   */\n      dup8\n        /* \"#utility.yul\":1317:1334   */\n      add\n        /* \"#utility.yul\":1310:1314   */\n      0x20\n        /* \"#utility.yul\":1302:1308   */\n      dup4\n        /* \"#utility.yul\":1298:1315   */\n      add\n        /* \"#utility.yul\":1285:1339   */\n      calldatacopy\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1376:1380   */\n      0x20\n        /* \"#utility.yul\":1371:1373   */\n      dup6\n        /* \"#utility.yul\":1363:1369   */\n      dup4\n        /* \"#utility.yul\":1359:1374   */\n      add\n        /* \"#utility.yul\":1355:1381   */\n      add\n        /* \"#utility.yul\":1348:1385   */\n      mstore\n        /* \"#utility.yul\":1403:1409   */\n      dup1\n        /* \"#utility.yul\":1394:1409   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":697:1415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1888   */\n    tag_16:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1522:1528   */\n      0x00\n        /* \"#utility.yul\":1575:1577   */\n      0x60\n        /* \"#utility.yul\":1563:1572   */\n      dup5\n        /* \"#utility.yul\":1554:1561   */\n      dup7\n        /* \"#utility.yul\":1550:1573   */\n      sub\n        /* \"#utility.yul\":1546:1578   */\n      slt\n        /* \"#utility.yul\":1543:1595   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1588:1589   */\n      dup1\n        /* \"#utility.yul\":1581:1593   */\n      revert\n        /* \"#utility.yul\":1543:1595   */\n    tag_76:\n        /* \"#utility.yul\":1614:1643   */\n      tag_77\n        /* \"#utility.yul\":1633:1642   */\n      dup5\n        /* \"#utility.yul\":1614:1643   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1604:1643   */\n      swap3\n      pop\n        /* \"#utility.yul\":1662:1700   */\n      tag_78\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1685:1694   */\n      dup6\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1662:1700   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1652:1700   */\n      swap2\n      pop\n        /* \"#utility.yul\":1751:1753   */\n      0x40\n        /* \"#utility.yul\":1740:1749   */\n      dup5\n        /* \"#utility.yul\":1736:1754   */\n      add\n        /* \"#utility.yul\":1723:1755   */\n      calldataload\n        /* \"#utility.yul\":1778:1796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1767:1797   */\n      gt\n        /* \"#utility.yul\":1764:1814   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1764:1814   */\n    tag_79:\n        /* \"#utility.yul\":1833:1882   */\n      tag_80\n        /* \"#utility.yul\":1874:1881   */\n      dup7\n        /* \"#utility.yul\":1865:1871   */\n      dup3\n        /* \"#utility.yul\":1854:1863   */\n      dup8\n        /* \"#utility.yul\":1850:1872   */\n      add\n        /* \"#utility.yul\":1833:1882   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1823:1882   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1420:1888   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2473   */\n    tag_22:\n        /* \"#utility.yul\":2162:2168   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup1\n        /* \"#utility.yul\":2223:2225   */\n      0x40\n        /* \"#utility.yul\":2211:2220   */\n      dup4\n        /* \"#utility.yul\":2202:2209   */\n      dup6\n        /* \"#utility.yul\":2198:2221   */\n      sub\n        /* \"#utility.yul\":2194:2226   */\n      slt\n        /* \"#utility.yul\":2191:2243   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      dup1\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2191:2243   */\n    tag_83:\n        /* \"#utility.yul\":2275:2284   */\n      dup3\n        /* \"#utility.yul\":2262:2285   */\n      calldataload\n        /* \"#utility.yul\":2252:2285   */\n      swap2\n      pop\n        /* \"#utility.yul\":2336:2338   */\n      0x20\n        /* \"#utility.yul\":2325:2334   */\n      dup4\n        /* \"#utility.yul\":2321:2339   */\n      add\n        /* \"#utility.yul\":2308:2340   */\n      calldataload\n        /* \"#utility.yul\":2363:2381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2355:2361   */\n      dup2\n        /* \"#utility.yul\":2352:2382   */\n      gt\n        /* \"#utility.yul\":2349:2399   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2392:2393   */\n      dup1\n        /* \"#utility.yul\":2385:2397   */\n      revert\n        /* \"#utility.yul\":2349:2399   */\n    tag_84:\n        /* \"#utility.yul\":2418:2467   */\n      tag_85\n        /* \"#utility.yul\":2459:2466   */\n      dup6\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2439:2448   */\n      dup7\n        /* \"#utility.yul\":2435:2457   */\n      add\n        /* \"#utility.yul\":2418:2467   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2408:2467   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2085:2473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3006   */\n    tag_28:\n        /* \"#utility.yul\":2754:2760   */\n      0x00\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2795:2804   */\n      dup3\n        /* \"#utility.yul\":2786:2793   */\n      dup5\n        /* \"#utility.yul\":2782:2805   */\n      sub\n        /* \"#utility.yul\":2778:2810   */\n      slt\n        /* \"#utility.yul\":2775:2827   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2823:2824   */\n      0x00\n        /* \"#utility.yul\":2820:2821   */\n      dup1\n        /* \"#utility.yul\":2813:2825   */\n      revert\n        /* \"#utility.yul\":2775:2827   */\n    tag_88:\n        /* \"#utility.yul\":2863:2872   */\n      dup2\n        /* \"#utility.yul\":2850:2873   */\n      calldataload\n        /* \"#utility.yul\":2896:2914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2888:2894   */\n      dup2\n        /* \"#utility.yul\":2885:2915   */\n      gt\n        /* \"#utility.yul\":2882:2932   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      dup1\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2882:2932   */\n    tag_89:\n        /* \"#utility.yul\":2951:3000   */\n      tag_90\n        /* \"#utility.yul\":2992:2999   */\n      dup5\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup6\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2951:3000   */\n      tag_59\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2941:3000   */\n      swap5\n        /* \"#utility.yul\":2686:3006   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3522   */\n    tag_34:\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3456   */\n      0x20\n        /* \"#utility.yul\":3442:3451   */\n      dup3\n        /* \"#utility.yul\":3433:3440   */\n      dup5\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3457   */\n      slt\n        /* \"#utility.yul\":3422:3474   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3467:3468   */\n      dup1\n        /* \"#utility.yul\":3460:3472   */\n      revert\n        /* \"#utility.yul\":3422:3474   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":3493:3516   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3342:3522   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH13 0x6176A6C88125F697F6914A0374 PUSH4 0x77EA0AB4 0xC0 PUSH19 0x96500E4A71BFF06FBCF164736F6C634300080F STOP CALLER ",
							"sourceMap": "61:2242:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getEthSignedMessageHash_1480": {
									"entryPoint": 664,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_1464": {
									"entryPoint": 276,
									"id": 1464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recoverSigner_1538": {
									"entryPoint": 417,
									"id": 1538,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@splitSignature_1559": {
									"entryPoint": 544,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@verify_1511": {
									"entryPoint": 350,
									"id": 1511,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5003:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:13",
														"type": ""
													}
												],
												"src": "383:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "621:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "626:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "647:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "671:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "671:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "777:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "785:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "792:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:35:13"
															},
															"nodeType": "YulIf",
															"src": "759:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "833:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "827:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "872:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "866:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "915:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "905:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:10:13"
															},
															"nodeType": "YulIf",
															"src": "899:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "944:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "948:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "984:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "974:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1048:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1052:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1044:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1059:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1040:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1040:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1006:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1134:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1134:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1134:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1091:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1103:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1088:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1111:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1108:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1085:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:46:13"
															},
															"nodeType": "YulIf",
															"src": "1082:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1174:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1209:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1243:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1231:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1255:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:35:13"
															},
															"nodeType": "YulIf",
															"src": "1221:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1285:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1371:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1359:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1376:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1394:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1403:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1394:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "723:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "739:5:13",
														"type": ""
													}
												],
												"src": "697:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1533:355:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1579:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1588:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1581:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1581:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:32:13"
															},
															"nodeType": "YulIf",
															"src": "1543:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1604:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1614:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1652:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1662:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1736:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1723:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1713:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1767:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:30:13"
															},
															"nodeType": "YulIf",
															"src": "1764:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1823:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1874:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1833:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1522:6:13",
														"type": ""
													}
												],
												"src": "1420:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1998:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2010:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1998:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2040:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2058:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2051:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2033:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1957:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1968:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1979:4:13",
														"type": ""
													}
												],
												"src": "1893:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2202:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:32:13"
															},
															"nodeType": "YulIf",
															"src": "2191:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2262:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2298:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2383:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2392:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2395:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2385:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2385:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:30:13"
															},
															"nodeType": "YulIf",
															"src": "2349:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2408:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2459:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2418:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2139:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2150:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2170:6:13",
														"type": ""
													}
												],
												"src": "2085:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2631:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2662:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2667:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2658:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2671:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2654:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2559:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2570:4:13",
														"type": ""
													}
												],
												"src": "2478:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2813:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2786:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2782:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:32:13"
															},
															"nodeType": "YulIf",
															"src": "2775:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2850:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2888:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2885:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:30:13"
															},
															"nodeType": "YulIf",
															"src": "2882:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2941:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2992:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2951:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2731:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2742:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:13",
														"type": ""
													}
												],
												"src": "2686:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3164:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3174:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3174:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3227:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3265:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3308:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3117:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3128:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3136:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3144:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3155:4:13",
														"type": ""
													}
												],
												"src": "3011:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:32:13"
															},
															"nodeType": "YulIf",
															"src": "3422:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3483:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3506:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3378:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3389:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:13",
														"type": ""
													}
												],
												"src": "3342:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3674:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3684:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3688:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3754:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3758:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3750:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3750:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3767:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3791:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3796:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3809:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3813:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3805:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3805:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3822:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3642:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3647:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3666:3:13",
														"type": ""
													}
												],
												"src": "3527:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4056:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4068:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4099:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4202:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4250:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4002:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4010:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4037:4:13",
														"type": ""
													}
												],
												"src": "3865:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4442:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4452:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4548:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4596:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4584:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4433:4:13",
														"type": ""
													}
												],
												"src": "4268:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4858:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4851:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4950:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4955:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4960:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4976:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4817:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4822:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4833:3:13",
														"type": ""
													}
												],
												"src": "4621:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH13 0x6176A6C88125F697F6914A0374 PUSH4 0x77EA0AB4 0xC0 PUSH19 0x96500E4A71BFF06FBCF164736F6C634300080F STOP CALLER ",
							"sourceMap": "61:2242:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:160;;;;;;:::i;:::-;;:::i;:::-;;;529:25:13;;;517:2;502:18;99:160:11;;;;;;;;769:350;;;;;;:::i;:::-;;:::i;:::-;;;2058:14:13;;2051:22;2033:41;;2021:2;2006:18;769:350:11;1893:187:13;1127:274:11;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2642:32:13;;;2624:51;;2612:2;2597:18;1127:274:11;2478:203:13;1409:891:11;;;;;;:::i;:::-;;:::i;:::-;;;;3209:25:13;;;3265:2;3250:18;;3243:34;;;;3325:4;3313:17;3293:18;;;3286:45;3197:2;3182:18;1409:891:11;3011:326:13;267:494:11;;;;;;:::i;:::-;;:::i;99:160::-;212:38;;-1:-1:-1;;3754:2:13;3750:15;;;3746:24;;212:38:11;;;3734:37:13;244:4:11;3805:15:13;;3801:24;3787:12;;;3780:46;175:7:11;;3842:12:13;;212:38:11;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:11;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:11;;;769:350;-1:-1:-1;;;;;;769:350:11:o;1127:274::-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;4092:25:13;;;4165:4;4153:17;;4133:18;;;4126:45;;;;4187:18;;;4180:34;;;4230:18;;;4223:34;;;1272:60:11;;-1:-1:-1;1272:60:11;;-1:-1:-1;1272:60:11;-1:-1:-1;1352:41:11;;4064:19:13;;1352:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:11;;-1:-1:-1;;1352:41:11;;;1127:274;-1:-1:-1;;;;;;;1127:274:11:o;1409:891::-;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:11;;4470:2:13;1596:53:11;;;4452:21:13;4509:2;4489:18;;;4482:30;4548:26;4528:18;;;4521:54;4592:18;;1596:53:11;;;;;;;;-1:-1:-1;;;2058:2:11;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;267:494::-;611:127;;4863:66:13;611:127:11;;;4851:79:13;4946:12;;;4939:28;;;370:7:11;;4983:12:13;;611:127:11;4621:380:13;14:173;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:718;739:5;792:3;785:4;777:6;773:17;769:27;759:55;;810:1;807;800:12;759:55;846:6;833:20;872:18;909:2;905;902:10;899:36;;;915:18;;:::i;:::-;990:2;984:9;958:2;1044:13;;-1:-1:-1;;1040:22:13;;;1064:2;1036:31;1032:40;1020:53;;;1088:18;;;1108:22;;;1085:46;1082:72;;;1134:18;;:::i;:::-;1174:10;1170:2;1163:22;1209:2;1201:6;1194:18;1255:3;1248:4;1243:2;1235:6;1231:15;1227:26;1224:35;1221:55;;;1272:1;1269;1262:12;1221:55;1336:2;1329:4;1321:6;1317:17;1310:4;1302:6;1298:17;1285:54;1383:1;1376:4;1371:2;1363:6;1359:15;1355:26;1348:37;1403:6;1394:15;;;;;;697:718;;;;:::o;1420:468::-;1506:6;1514;1522;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1614:29;1633:9;1614:29;:::i;:::-;1604:39;;1662:38;1696:2;1685:9;1681:18;1662:38;:::i;:::-;1652:48;;1751:2;1740:9;1736:18;1723:32;1778:18;1770:6;1767:30;1764:50;;;1810:1;1807;1800:12;1764:50;1833:49;1874:7;1865:6;1854:9;1850:22;1833:49;:::i;:::-;1823:59;;;1420:468;;;;;:::o;2085:388::-;2162:6;2170;2223:2;2211:9;2202:7;2198:23;2194:32;2191:52;;;2239:1;2236;2229:12;2191:52;2275:9;2262:23;2252:33;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;2085:388;;;;;:::o;2686:320::-;2754:6;2807:2;2795:9;2786:7;2782:23;2778:32;2775:52;;;2823:1;2820;2813:12;2775:52;2863:9;2850:23;2896:18;2888:6;2885:30;2882:50;;;2928:1;2925;2918:12;2882:50;2951:49;2992:7;2983:6;2972:9;2968:22;2951:49;:::i;:::-;2941:59;2686:320;-1:-1:-1;;;;2686:320:13:o;3342:180::-;3401:6;3454:2;3442:9;3433:7;3429:23;3425:32;3422:52;;;3470:1;3467;3460:12;3422:52;-1:-1:-1;3493:23:13;;3342:180;-1:-1:-1;3342:180:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "294",
								"totalCost": "250894"
							},
							"external": {
								"getEthSignedMessageHash(bytes32)": "511",
								"getMessageHash(address)": "519",
								"recoverSigner(bytes32,bytes)": "infinite",
								"splitSignature(bytes)": "infinite",
								"verify(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "1F5AC1B2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "42920A46"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "97ABA7F9"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "A7BB5803"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "FA540801"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2478,
											"end": 2681,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3329,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3313,
											"end": 3330,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3011,
											"end": 3337,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4452,
											"end": 4473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4929,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4621,
											"end": 5001,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 692,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 565,
											"end": 692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 626,
											"end": 636,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 637,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 773,
											"end": 790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 796,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 833,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 905,
											"end": 907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 902,
											"end": 912,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1036,
											"end": 1067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1072,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1252,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1245,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1259,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1614,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1833,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2226,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2418,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2782,
											"end": 2805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2873,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2951,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 3000,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 3006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidNFT.sol",
								"MintNagaKid.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMessageHash(address)": "1f5ac1b2",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"splitSignature(bytes)": "a7bb5803",
							"verify(address,address,bytes)": "42920a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VerifySignature.sol\":\"VerifySignature\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"VerifySignature.sol\":{\"keccak256\":\"0xeb2b2d1d8bcce32bb58f628eb83abd605d782fb594107e23cde2c6a60cec8ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3bb714697d808302d945dd1aa580191998c2d8400c0b46af83eb930cb3e8bbd\",\"dweb:/ipfs/Qmds4fcezGFSqzhtpHjjyKwd4GcPE3wP7Vwwro2Foq5cmR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Whitelist.sol\":133:603  contract Whitelist {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Whitelist.sol\":133:603  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n    tag_3:\n      tag_4\n      sload(0x00)\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50607d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80632eb4a7ab14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7D DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH8 0xFB281CC173CD521E GASLIMIT 0xB8 0xBD PUSH23 0xE4AB104772E00362BF6994E4B4BA0CBF64DA64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "133:470:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@merkleRoot_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80632eb4a7ab14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH8 0xFB281CC173CD521E GASLIMIT 0xB8 0xBD PUSH23 0xE4AB104772E00362BF6994E4B4BA0CBF64DA64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "133:470:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:25;;;;;;;;;160::13;;;148:2;133:18;161:25:12;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "25000",
								"executionCost": "75",
								"totalCost": "25075"
							},
							"external": {
								"merkleRoot()": "2261"
							},
							"internal": {
								"isWhitelist(bytes32[] calldata,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
									".code": [
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "2EB4A7AB"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "RETURN",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidNFT.sol",
								"MintNagaKid.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"merkleRoot()": "2eb4a7ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"Whitelist.sol\":{\"keccak256\":\"0x3c4c5dc32634034c6f37fc379525c3e3e89fc48e1a788ddb9fa82e027b4eb489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://080dc62e901a60d391d3eae01cd0d25a8581a79196452f84d129234bf421bc76\",\"dweb:/ipfs/QmNb4H54fDhAmpv41eLnb1jB1frUpAexRtESTpVCHJx9PU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1565,
								"contract": "Whitelist.sol:Whitelist",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							570
						],
						"ERC165": [
							890
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"Strings": [
							773
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 571,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 774,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 891,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 570,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								890,
								902,
								392,
								570
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										889
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 889,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$773_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 772,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$773_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 772,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							902
						],
						"IERC721": [
							548
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 903,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "271:7:3"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								902
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 447,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 456,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 465,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 548,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 548,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 548,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 548,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 548,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 548,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 548,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 548,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 548,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 549,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 551,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 556,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 555,
												"id": 558,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 570,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 565,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 564,
												"id": 567,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 570,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 571,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							773
						]
					},
					"id": 774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 773,
							"linearizedBaseContracts": [
								773
							],
							"name": "Strings",
							"nameLocation": "154:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 576,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "168:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 574,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "399:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "601:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "597:51:5",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "613:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 583,
															"id": 588,
															"nodeType": "Return",
															"src": "627:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "657:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"id": 593,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "672:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:5"
											},
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "687:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:5"
											},
											{
												"body": {
													"id": 608,
													"nodeType": "Block",
													"src": "729:57:5",
													"statements": [
														{
															"expression": {
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:5",
																"subExpression": {
																	"id": 601,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "743:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 603,
															"nodeType": "ExpressionStatement",
															"src": "743:8:5"
														},
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 604,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "765:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "765:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "718:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "WhileStatement",
												"src": "711:75:5"
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "795:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 610,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"id": 614,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 612,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:5"
											},
											{
												"body": {
													"id": 647,
													"nodeType": "Block",
													"src": "863:131:5",
													"statements": [
														{
															"expression": {
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 620,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "877:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "877:11:5"
														},
														{
															"expression": {
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 624,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "902:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"id": 625,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "909:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 634,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 579,
																									"src": "945:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 635,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 633,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 632,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 629,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 627,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "902:56:5"
														},
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 643,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "972:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "972:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "851:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "WhileStatement",
												"src": "844:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "1017:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 649,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 583,
												"id": 653,
												"nodeType": "Return",
												"src": "1003:21:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "346:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:5"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "384:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:5"
									},
									"scope": 773,
									"src": "328:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1210:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 663,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1224:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "1220:54:5",
												"trueBody": {
													"id": 668,
													"nodeType": "Block",
													"src": "1236:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 662,
															"id": 667,
															"nodeType": "Return",
															"src": "1250:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1283:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"id": 672,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "1298:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:5"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1313:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"hexValue": "30",
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:5"
											},
											{
												"body": {
													"id": 688,
													"nodeType": "Block",
													"src": "1359:57:5",
													"statements": [
														{
															"expression": {
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:5",
																"subExpression": {
																	"id": 681,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "1373:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:5"
														},
														{
															"expression": {
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 684,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "1395:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1348:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "WhileStatement",
												"src": "1341:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "1444:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 692,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "1451:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															696,
															772
														],
														"referencedDeclaration": 772,
														"src": "1432:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 662,
												"id": 694,
												"nodeType": "Return",
												"src": "1425:33:5"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1195:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:5"
									},
									"scope": 773,
									"src": "1136:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "1678:351:5",
										"statements": [
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "1688:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 706,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 711,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1724:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:5"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 717,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1745:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 719,
														"indexExpression": {
															"hexValue": "30",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:5"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 723,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1770:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 725,
														"indexExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:5"
											},
											{
												"body": {
													"id": 757,
													"nodeType": "Block",
													"src": "1840:87:5",
													"statements": [
														{
															"expression": {
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 743,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "1854:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 745,
																	"indexExpression": {
																		"id": 744,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1861:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 746,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "1866:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "1879:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:5"
														},
														{
															"expression": {
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "1905:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 756,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "1828:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 758,
												"initializationExpression": {
													"assignments": [
														730
													],
													"declarations": [
														{
															"constant": false,
															"id": 730,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 758,
															"src": "1800:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 729,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 736,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 732,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "1816:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:5",
														"subExpression": {
															"id": 740,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "1837:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 742,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "1944:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "2015:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 766,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 770,
												"nodeType": "Return",
												"src": "2001:21:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1609:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1624:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:5"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1663:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:5"
									},
									"scope": 773,
									"src": "1588:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 774,
							"src": "146:1885:5",
							"usedErrors": []
						}
					],
					"src": "86:1946:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							866
						]
					},
					"id": 867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "143:656:6",
								"text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
							},
							"fullyImplemented": true,
							"id": 866,
							"linearizedBaseContracts": [
								866
							],
							"name": "MerkleProof",
							"nameLocation": "808:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "1281:57:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 790,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "1311:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 791,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1318:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 789,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1298:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1298:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 793,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "1327:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1298:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 788,
												"id": 795,
												"nodeType": "Return",
												"src": "1291:40:6"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "826:323:6",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1163:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1196:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1179:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 778,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1179:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 779,
													"nodeType": "ArrayTypeName",
													"src": "1179:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1219:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1211:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 781,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1241:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1233:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:82:6"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1275:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:6"
									},
									"scope": 866,
									"src": "1154:184:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1781:570:6",
										"statements": [
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "1799:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "1791:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 808,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"id": 810,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 803,
													"src": "1814:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:27:6"
											},
											{
												"body": {
													"id": 849,
													"nodeType": "Block",
													"src": "1871:445:6",
													"statements": [
														{
															"assignments": [
																824
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 824,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "1893:12:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 849,
																	"src": "1885:20:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 828,
															"initialValue": {
																"baseExpression": {
																	"id": 825,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "1908:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1908:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1885:31:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 829,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1934:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 830,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "1950:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1934:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 847,
																"nodeType": "Block",
																"src": "2138:168:6",
																"statements": [
																	{
																		"expression": {
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 840,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "2234:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 842,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "2264:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 843,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "2278:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 841,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "2249:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2249:42:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2234:57:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 846,
																		"nodeType": "ExpressionStatement",
																		"src": "2234:57:6"
																	}
																]
															},
															"id": 848,
															"nodeType": "IfStatement",
															"src": "1930:376:6",
															"trueBody": {
																"id": 839,
																"nodeType": "Block",
																"src": "1964:168:6",
																"statements": [
																	{
																		"expression": {
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "2060:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 834,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "2090:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 835,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "2104:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 833,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "2075:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2075:42:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2060:57:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 838,
																		"nodeType": "ExpressionStatement",
																		"src": "2060:57:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1848:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 817,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1852:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1852:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"initializationExpression": {
													"assignments": [
														813
													],
													"declarations": [
														{
															"constant": false,
															"id": 813,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1841:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 850,
															"src": "1833:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 812,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 815,
													"initialValue": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1833:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1866:3:6",
														"subExpression": {
															"id": 820,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "1866:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 822,
													"nodeType": "ExpressionStatement",
													"src": "1866:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1828:488:6"
											},
											{
												"expression": {
													"id": 851,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "2332:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 807,
												"id": 852,
												"nodeType": "Return",
												"src": "2325:19:6"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "1344:340:6",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1728:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1711:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 799,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1711:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 800,
													"nodeType": "ArrayTypeName",
													"src": "1711:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1743:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1735:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:38:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1772:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:6"
									},
									"scope": 866,
									"src": "1689:662:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2440:135:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:110:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:6",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2514:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:15:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:30:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2538:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2529:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:6",
														"valueSize": 1
													},
													{
														"declaration": 858,
														"isOffset": false,
														"isSlot": false,
														"src": "2514:1:6",
														"valueSize": 1
													},
													{
														"declaration": 861,
														"isOffset": false,
														"isSlot": false,
														"src": "2529:5:6",
														"valueSize": 1
													}
												],
												"id": 863,
												"nodeType": "InlineAssembly",
												"src": "2450:119:6"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "2366:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2389:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2381:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2400:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2392:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:22:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2425:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 860,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:6"
									},
									"scope": 866,
									"src": "2357:218:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 867,
							"src": "800:1777:6",
							"usedErrors": []
						}
					],
					"src": "118:2460:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							890
						],
						"IERC165": [
							902
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 868,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 903,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 871,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "754:7:7"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 890,
							"linearizedBaseContracts": [
								890,
								902
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 883,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$902_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$902_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 882,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$902",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 880,
												"id": 887,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 877,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 890,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 891,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							902
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 902,
							"linearizedBaseContracts": [
								902
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 895,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 902,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 903,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"INagaKidNFT.sol": {
				"ast": {
					"absolutePath": "INagaKidNFT.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"IERC721": [
							548
						],
						"INagaKidNFT": [
							958
						]
					},
					"id": 959,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 959,
							"sourceUnit": 549,
							"src": "61:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 959,
							"sourceUnit": 393,
							"src": "121:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 907,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 548,
										"src": "209:7:9"
									},
									"id": 908,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:9"
								},
								{
									"baseName": {
										"id": 909,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "217:14:9"
									},
									"id": 910,
									"nodeType": "InheritanceSpecifier",
									"src": "217:14:9"
								}
							],
							"canonicalName": "INagaKidNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 958,
							"linearizedBaseContracts": [
								958,
								392,
								548,
								902
							],
							"name": "INagaKidNFT",
							"nameLocation": "194:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "250:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "287:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:9"
									},
									"scope": 958,
									"src": "241:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "302:174:9",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "491:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "519:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "511:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "534:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "526:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:30:9"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "564:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:9:9"
									},
									"scope": 958,
									"src": "482:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4f6ccce7",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "588:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "609:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "601:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:15:9"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "639:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:9"
									},
									"scope": 958,
									"src": "579:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "663:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:9"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "698:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:9"
									},
									"scope": 958,
									"src": "654:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "722:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:9"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "754:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:6:9"
									},
									"scope": 958,
									"src": "713:47:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40d097c3",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "775:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "792:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "784:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:12:9"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:9"
									},
									"scope": 958,
									"src": "766:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e63ab1e9",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PAUSER_ROLE",
									"nameLocation": "820:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:9"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "857:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:9:9"
									},
									"scope": 958,
									"src": "811:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5391393",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINTER_ROLE",
									"nameLocation": "881:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "918:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:9"
									},
									"scope": 958,
									"src": "872:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 959,
							"src": "184:748:9",
							"usedErrors": []
						}
					],
					"src": "33:899:9"
				},
				"id": 9
			},
			"MintNagaKid.sol": {
				"ast": {
					"absolutePath": "MintNagaKid.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							570
						],
						"ERC165": [
							890
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"IERC721": [
							548
						],
						"INagaKidNFT": [
							958
						],
						"MerkleProof": [
							866
						],
						"MintNagaKid": [
							1443
						],
						"ReentrancyGuard": [
							432
						],
						"Strings": [
							773
						],
						"VerifySignature": [
							1560
						],
						"Whitelist": [
							1599
						]
					},
					"id": 1444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 960,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 433,
							"src": "61:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 320,
							"src": "125:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "VerifySignature.sol",
							"file": "./VerifySignature.sol",
							"id": 963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 1561,
							"src": "185:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Whitelist.sol",
							"file": "./Whitelist.sol",
							"id": 964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 1600,
							"src": "218:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "INagaKidNFT.sol",
							"file": "./INagaKidNFT.sol",
							"id": 965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 959,
							"src": "245:27:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 966,
										"name": "Whitelist",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "300:9:10"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "300:9:10"
								},
								{
									"baseName": {
										"id": 968,
										"name": "VerifySignature",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1560,
										"src": "311:15:10"
									},
									"id": 969,
									"nodeType": "InheritanceSpecifier",
									"src": "311:15:10"
								},
								{
									"baseName": {
										"id": 970,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "328:13:10"
									},
									"id": 971,
									"nodeType": "InheritanceSpecifier",
									"src": "328:13:10"
								},
								{
									"baseName": {
										"id": 972,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "343:15:10"
									},
									"id": 973,
									"nodeType": "InheritanceSpecifier",
									"src": "343:15:10"
								}
							],
							"canonicalName": "MintNagaKid",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1443,
							"linearizedBaseContracts": [
								1443,
								432,
								319,
								890,
								902,
								392,
								570,
								1560,
								1599
							],
							"name": "MintNagaKid",
							"nameLocation": "285:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8b7b80b7",
									"id": 976,
									"mutability": "mutable",
									"name": "NagaKidContract",
									"nameLocation": "387:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "368:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INagaKidNFT_$958",
										"typeString": "contract INagaKidNFT"
									},
									"typeName": {
										"id": 975,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 974,
											"name": "INagaKidNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 958,
											"src": "368:11:10"
										},
										"referencedDeclaration": 958,
										"src": "368:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INagaKidNFT_$958",
											"typeString": "contract INagaKidNFT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4435dfd",
									"id": 978,
									"mutability": "mutable",
									"name": "isPublicMintOpen",
									"nameLocation": "421:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "409:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 977,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "409:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18f52c48",
									"id": 980,
									"mutability": "mutable",
									"name": "isWhitelistMintOpen",
									"nameLocation": "456:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "444:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 979,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "444:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 982,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "499:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "484:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 981,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 986,
									"mutability": "mutable",
									"name": "_isWhitelistMinted",
									"nameLocation": "539:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "514:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 985,
										"keyType": {
											"id": 983,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "522:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "514:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 984,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "533:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_isWhitelistMintedAmount",
									"nameLocation": "592:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "564:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 989,
										"keyType": {
											"id": 987,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "572:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "564:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 988,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "583:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 994,
									"mutability": "mutable",
									"name": "_isPublicMinted",
									"nameLocation": "648:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "623:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 993,
										"keyType": {
											"id": 991,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "631:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "623:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 992,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "642:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938",
									"id": 1002,
									"name": "WhitelistMinted",
									"nameLocation": "678:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "710:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "694:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "723:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "715:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "738:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "730:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:55:10"
									},
									"src": "672:77:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b",
									"id": 1008,
									"name": "PublicMinted",
									"nameLocation": "761:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "790:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "774:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "803:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "795:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:40:10"
									},
									"src": "755:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "92ce13baec98d66394cf79a9f16b88c346e6bd6dd4df75ac1144e5dc7ff8e541",
									"id": 1014,
									"name": "SetNagaKidContract",
									"nameLocation": "826:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "NagaKidBefore",
												"nameLocation": "853:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "845:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "NagaKidAfter",
												"nameLocation": "875:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "867:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:44:10"
									},
									"src": "820:69:10"
								},
								{
									"anonymous": false,
									"eventSelector": "3271c8694494a7cc76cd185c743e9ee6b515a043ea98c0db7f5ca112f694add4",
									"id": 1020,
									"name": "SetSigner",
									"nameLocation": "901:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerBefore",
												"nameLocation": "919:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "911:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "signerAfter",
												"nameLocation": "941:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "933:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:43:10"
									},
									"src": "895:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1e78b6fb38a6776b3b021a6298e924f52991aa2bb97dd89e0a8cd9765df86367",
									"id": 1024,
									"name": "SetWhitelistMintOpen",
									"nameLocation": "966:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "992:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "987:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:13:10"
									},
									"src": "960:40:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7955b9c09440c823c45ec1ed87cd3f0860e31e9f5a8e65cff61bed27545bedd7",
									"id": 1028,
									"name": "SetPublicMintOpen",
									"nameLocation": "1012:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "1035:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1030:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1030:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:13:10"
									},
									"src": "1006:37:10"
								},
								{
									"anonymous": false,
									"eventSelector": "8c059dfa273e5360f0ad8d03524cfc0e8e91f05bf893452e7e92c8bf0feffb65",
									"id": 1034,
									"name": "SetMerkleRoot",
									"nameLocation": "1055:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootBefore",
												"nameLocation": "1077:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1069:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "merkleRootAfter",
												"nameLocation": "1103:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1095:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:51:10"
									},
									"src": "1049:71:10"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1182:141:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1206:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1044,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1226:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1226:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1042,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1195:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "1195:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "_NagaKid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "1267:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														],
														"id": 1048,
														"name": "setNagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "1248:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_INagaKidNFT_$958_$returns$__$",
															"typeString": "function (contract INagaKidNFT)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1248:28:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1053,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "1301:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1052,
														"name": "setMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1287:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1287:26:10"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_NagaKid",
												"nameLocation": "1152:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1140:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKidNFT_$958",
													"typeString": "contract INagaKidNFT"
												},
												"typeName": {
													"id": 1036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1035,
														"name": "INagaKidNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "1140:11:10"
													},
													"referencedDeclaration": 958,
													"src": "1140:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidNFT_$958",
														"typeString": "contract INagaKidNFT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "1169:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1161:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1038,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:42:10"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:0:10"
									},
									"scope": 1443,
									"src": "1128:195:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "1349:80:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1060,
																	"name": "isPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "1368:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1368:9:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1381:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1368:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6167614b696420776173205061757365642e",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1387:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca3a03f67e8dbf8744f527043671723697d91a5fc2a2a3dc15b4ceb31b6dbf12",
																"typeString": "literal_string \"NagaKid was Paused.\""
															},
															"value": "NagaKid was Paused."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca3a03f67e8dbf8744f527043671723697d91a5fc2a2a3dc15b4ceb31b6dbf12",
																"typeString": "literal_string \"NagaKid was Paused.\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1360:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1360:49:10"
											},
											{
												"id": 1067,
												"nodeType": "PlaceholderStatement",
												"src": "1420:1:10"
											}
										]
									},
									"id": 1069,
									"name": "Paused",
									"nameLocation": "1340:6:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:2:10"
									},
									"src": "1331:98:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1523:183:10",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "NagaKidBefore",
														"nameLocation": "1542:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1097,
														"src": "1534:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1078,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1534:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"arguments": [
														{
															"id": 1082,
															"name": "NagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1566:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														],
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1558:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1080,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1558:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1534:48:10"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "NagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1603:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKidNFT_$958",
															"typeString": "contract INagaKidNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1086,
														"name": "_NagaKid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "1621:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKidNFT_$958",
															"typeString": "contract INagaKidNFT"
														}
													},
													"src": "1603:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidNFT_$958",
														"typeString": "contract INagaKidNFT"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1603:26:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1090,
															"name": "NagaKidBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1666:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1093,
																	"name": "_NagaKid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "1688:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																		"typeString": "contract INagaKidNFT"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																		"typeString": "contract INagaKidNFT"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1680:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1680:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1680:17:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1089,
														"name": "SetNagaKidContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1647:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1647:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "EmitStatement",
												"src": "1642:56:10"
											}
										]
									},
									"functionSelector": "9e6c8855",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1075,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1503:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1074,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1494:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1494:28:10"
										}
									],
									"name": "setNagaKidContract",
									"nameLocation": "1446:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_NagaKid",
												"nameLocation": "1477:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1465:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKidNFT_$958",
													"typeString": "contract INagaKidNFT"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "INagaKidNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "1465:11:10"
													},
													"referencedDeclaration": 958,
													"src": "1465:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidNFT_$958",
														"typeString": "contract INagaKidNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:22:10"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:10"
									},
									"scope": 1443,
									"src": "1437:269:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "1790:124:10",
										"statements": [
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "signerBefore",
														"nameLocation": "1809:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "1801:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1801:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"id": 1108,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 982,
													"src": "1824:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:29:10"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1110,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "1841:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1111,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "1850:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1841:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "1841:16:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1115,
															"name": "signerBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1885:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "_signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "1898:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1114,
														"name": "SetSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1875:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "1870:36:10"
											}
										]
									},
									"functionSelector": "6c19e783",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1103,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1770:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1102,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1761:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:28:10"
										}
									],
									"name": "setSigner",
									"nameLocation": "1727:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "1745:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1737:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:17:10"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1790:0:10"
									},
									"scope": 1443,
									"src": "1718:196:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2003:95:10",
										"statements": [
											{
												"expression": {
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "isWhitelistMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "2014:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1129,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2036:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2014:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "2014:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1133,
															"name": "_isOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2082:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1132,
														"name": "SetWhitelistMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2061:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "EmitStatement",
												"src": "2056:34:10"
											}
										]
									},
									"functionSelector": "fade63c9",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1125,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1983:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1124,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1974:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1974:28:10"
										}
									],
									"name": "setWhitelistMintOpen",
									"nameLocation": "1932:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "1958:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1953:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:14:10"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:10"
									},
									"scope": 1443,
									"src": "1923:175:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "2183:89:10",
										"statements": [
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "isPublicMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2194:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1146,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "2213:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2194:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "2194:26:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1150,
															"name": "_isOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2256:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1149,
														"name": "SetPublicMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2238:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "EmitStatement",
												"src": "2233:31:10"
											}
										]
									},
									"functionSelector": "6387f804",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1142,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2163:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1141,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2154:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2154:28:10"
										}
									],
									"name": "setPublicMintOpen",
									"nameLocation": "2115:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "2138:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2133:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2133:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:14:10"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:10"
									},
									"scope": 1443,
									"src": "2106:166:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2364:154:10",
										"statements": [
											{
												"assignments": [
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "_merkleRootBefore",
														"nameLocation": "2383:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "2375:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2375:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"id": 1164,
													"name": "merkleRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1565,
													"src": "2403:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2375:38:10"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1166,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "2424:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2437:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2424:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "2424:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1171,
															"name": "_merkleRootBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "2480:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1172,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "2498:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1170,
														"name": "SetMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2466:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "EmitStatement",
												"src": "2461:49:10"
											}
										]
									},
									"functionSelector": "7cb64759",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1159,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2344:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2335:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2335:28:10"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "2293:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "2315:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2307:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2306:21:10"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:0:10"
									},
									"scope": 1443,
									"src": "2284:234:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "2635:768:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "isWhitelistMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2654:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2677:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2654:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2683:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															},
															"value": "Whitelist not open to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2646:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "2646:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1196,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "2732:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2732:16:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1198,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "2751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2732:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31313131",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2761:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1111_by_1",
																	"typeString": "int_const 1111"
																},
																"value": "1111"
															},
															"src": "2732:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2767:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2724:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2724:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "2724:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1207,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2818:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2818:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1206,
																	"name": "isWhitelistMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "2800:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2800:29:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2800:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2839:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2792:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "2792:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1218,
																				"name": "NagaKidContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "2908:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																					"typeString": "contract INagaKidNFT"
																				}
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "MINTER_ROLE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "2908:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view external returns (bytes32)"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2908:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1223,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2946:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MintNagaKid_$1443",
																					"typeString": "contract MintNagaKid"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MintNagaKid_$1443",
																					"typeString": "contract MintNagaKid"
																				}
																			],
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2938:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1221,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2938:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2938:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1216,
																		"name": "NagaKidContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2884:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																			"typeString": "contract INagaKidNFT"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 359,
																	"src": "2884:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view external returns (bool)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2884:68:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2956:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2884:76:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f6e20746f206d696e742e",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2961:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															},
															"value": "This Contract not have permission to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2876:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2876:130:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "2876:130:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1233,
																	"name": "_proofMerkle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "3037:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"expression": {
																		"id": 1234,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3050:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3050:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1236,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "3061:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1232,
																"name": "isWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "3025:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] calldata,address,uint256) view returns (bool)"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3025:44:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320557365722e",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3071:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															},
															"value": "Unauthorized WhitelistMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3017:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3017:94:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "3017:94:10"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1241,
															"name": "_isWhitelistMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "3124:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1244,
														"indexExpression": {
															"expression": {
																"id": 1242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3143:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3143:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3124:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3157:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3124:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "3124:37:10"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1248,
															"name": "_isWhitelistMintedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "3172:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1251,
														"indexExpression": {
															"expression": {
																"id": 1249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3197:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3197:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3172:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1252,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3212:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3172:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "3172:47:10"
											},
											{
												"body": {
													"id": 1272,
													"nodeType": "Block",
													"src": "3264:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1268,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3304:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3304:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1265,
																		"name": "NagaKidContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "3279:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																			"typeString": "contract INagaKidNFT"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeMint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "3279:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address) external"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1271,
															"nodeType": "ExpressionStatement",
															"src": "3279:36:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1259,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "3248:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1260,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3251:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3248:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"initializationExpression": {
													"assignments": [
														1256
													],
													"declarations": [
														{
															"constant": false,
															"id": 1256,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3241:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1273,
															"src": "3236:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1255,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3236:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1258,
													"initialValue": {
														"hexValue": "30",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3245:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3236:10:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3260:3:10",
														"subExpression": {
															"id": 1262,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "3260:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1264,
													"nodeType": "ExpressionStatement",
													"src": "3260:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3232:95:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3360:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3360:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3371:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1278,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3379:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3379:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1274,
														"name": "WhitelistMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "3344:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "EmitStatement",
												"src": "3339:56:10"
											}
										]
									},
									"functionSelector": "2904e6d9",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "2615:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2615:12:10"
										},
										{
											"id": 1186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1185,
												"name": "Paused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1069,
												"src": "2628:6:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2628:6:10"
										}
									],
									"name": "whitelistMint",
									"nameLocation": "2537:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "_proofMerkle",
												"nameLocation": "2570:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2551:31:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2551:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "2551:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2591:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "2583:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:49:10"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2635:0:10"
									},
									"scope": 1443,
									"src": "2528:875:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "3487:699:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1293,
																"name": "isPublicMintOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "3508:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3528:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3508:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3534:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															},
															"value": "Whitelist not open to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3500:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "3500:64:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1300,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "3583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "3583:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1302,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3596:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3596:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3583:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															},
															"value": "haha Contract can't call me"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3575:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "3575:63:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1310,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3672:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3672:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1309,
																	"name": "isPublicMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "3657:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3657:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3687:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3657:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3649:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "3649:70:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1319,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "3738:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3738:16:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3757:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3738:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31313131",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3761:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1111_by_1",
																	"typeString": "int_const 1111"
																},
																"value": "1111"
															},
															"src": "3738:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220537570706c7920416d6f756e74",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3766:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38",
																"typeString": "literal_string \"Over Supply Amount\""
															},
															"value": "Over Supply Amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38",
																"typeString": "literal_string \"Over Supply Amount\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3730:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "3730:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1331,
																				"name": "NagaKidContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "3830:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																					"typeString": "contract INagaKidNFT"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "MINTER_ROLE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "3830:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view external returns (bytes32)"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3830:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1336,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3868:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MintNagaKid_$1443",
																					"typeString": "contract MintNagaKid"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MintNagaKid_$1443",
																					"typeString": "contract MintNagaKid"
																				}
																			],
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3860:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3860:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3860:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1329,
																		"name": "NagaKidContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "3806:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																			"typeString": "contract INagaKidNFT"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 359,
																	"src": "3806:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view external returns (bool)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3806:68:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3878:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3806:76:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f6e20746f206d696e742e",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3883:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															},
															"value": "This Contract not have permission to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															}
														],
														"id": 1328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3798:130:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "3798:130:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1346,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3954:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1347,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3961:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3961:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1349,
																	"name": "_sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "3972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1345,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "3947:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,bytes memory) view returns (bool)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3947:30:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365722e",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3979:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															},
															"value": "Unauthorized PublicMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3939:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "3939:77:10"
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1354,
															"name": "_isPublicMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "4029:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1357,
														"indexExpression": {
															"expression": {
																"id": 1355,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4045:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4045:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4029:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4029:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4029:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1364,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4099:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4099:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1361,
															"name": "NagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4074:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "4074:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4074:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "4074:36:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1369,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4151:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4151:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4162:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4162:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1368,
														"name": "PublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "4138:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4138:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "4133:45:10"
											}
										]
									},
									"functionSelector": "de6892c8",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "3467:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3467:12:10"
										},
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "Paused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1069,
												"src": "3480:6:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3480:6:10"
										}
									],
									"name": "publicMint",
									"nameLocation": "3420:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "3446:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3431:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3431:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:21:10"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3487:0:10"
									},
									"scope": 1443,
									"src": "3411:775:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "4262:51:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1383,
														"name": "_isWhitelistMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "4280:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1385,
													"indexExpression": {
														"id": 1384,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "4299:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4280:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1386,
												"nodeType": "Return",
												"src": "4273:32:10"
											}
										]
									},
									"functionSelector": "5997bbee",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistMinted",
									"nameLocation": "4203:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4229:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "4221:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:15:10"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "4256:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4256:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4255:6:10"
									},
									"scope": 1443,
									"src": "4194:119:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "4398:57:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1395,
														"name": "_isWhitelistMintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "4416:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1397,
													"indexExpression": {
														"id": 1396,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "4441:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4416:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1398,
												"nodeType": "Return",
												"src": "4409:38:10"
											}
										]
									},
									"functionSelector": "1b0d2d3b",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistMintedAmount",
									"nameLocation": "4330:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4362:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "4354:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:15:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "4389:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:9:10"
									},
									"scope": 1443,
									"src": "4321:134:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "4528:48:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1407,
														"name": "_isPublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4546:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1409,
													"indexExpression": {
														"id": 1408,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "4562:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4546:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1406,
												"id": 1410,
												"nodeType": "Return",
												"src": "4539:29:10"
											}
										]
									},
									"functionSelector": "f055c7a9",
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPublicMinted",
									"nameLocation": "4472:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4495:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "4487:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:15:10"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "4522:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:6:10"
									},
									"scope": 1443,
									"src": "4463:113:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "4640:55:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1417,
															"name": "NagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4658:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "4658:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1420,
												"nodeType": "Return",
												"src": "4651:36:10"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "4593:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4607:2:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "4631:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:9:10"
									},
									"scope": 1443,
									"src": "4584:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "4757:53:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1427,
															"name": "NagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4775:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "4775:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4775:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1430,
												"nodeType": "Return",
												"src": "4768:34:10"
											}
										]
									},
									"functionSelector": "4c0f38c2",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxSupply",
									"nameLocation": "4712:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:2:10"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "4748:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4748:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4747:9:10"
									},
									"scope": 1443,
									"src": "4703:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "4864:50:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1437,
															"name": "NagaKidContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4882:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidNFT_$958",
																"typeString": "contract INagaKidNFT"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "4882:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
															"typeString": "function () view external returns (bool)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1440,
												"nodeType": "Return",
												"src": "4875:31:10"
											}
										]
									},
									"functionSelector": "ff0938a7",
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPause",
									"nameLocation": "4827:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4834:2:10"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4858:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4858:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:6:10"
									},
									"scope": 1443,
									"src": "4818:96:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1444,
							"src": "276:4641:10",
							"usedErrors": []
						}
					],
					"src": "33:4886:10"
				},
				"id": 10
			},
			"VerifySignature.sol": {
				"ast": {
					"absolutePath": "VerifySignature.sol",
					"exportedSymbols": {
						"VerifySignature": [
							1560
						]
					},
					"id": 1561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifySignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1560,
							"linearizedBaseContracts": [
								1560
							],
							"name": "VerifySignature",
							"nameLocation": "70:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "184:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1455,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "229:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1458,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "244:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VerifySignature_$1560",
																				"typeString": "contract VerifySignature"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VerifySignature_$1560",
																				"typeString": "contract VerifySignature"
																			}
																		],
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "236:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "236:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "236:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1453,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "212:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "212:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "212:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1452,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "202:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "202:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1462,
												"nodeType": "Return",
												"src": "195:56:11"
											}
										]
									},
									"functionSelector": "1f5ac1b2",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "108:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "141:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "133:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:31:11"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "175:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:9:11"
									},
									"scope": 1560,
									"src": "99:160:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "384:377:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "650:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 1475,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "707:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1472,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "611:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "611:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:127:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1471,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "583:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:170:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1478,
												"nodeType": "Return",
												"src": "563:190:11"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "276:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "308:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "300:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:22:11"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "370:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:11"
									},
									"scope": 1560,
									"src": "267:494:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "902:217:11",
										"statements": [
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "921:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "913:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"arguments": [
														{
															"id": 1494,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "950:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1493,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "935:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) view returns (bytes32)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:43:11"
											},
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "975:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "967:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1497,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "967:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"arguments": [
														{
															"id": 1500,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "1022:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1499,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "998:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:67:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1068:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1505,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "1090:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1503,
															"name": "recoverSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "1054:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1054:46:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1507,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "1104:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1054:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1490,
												"id": 1509,
												"nodeType": "Return",
												"src": "1047:64:11"
											}
										]
									},
									"functionSelector": "42920a46",
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "778:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "803:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "795:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "829:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "821:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "858:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "845:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "845:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:90:11"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "896:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:11"
									},
									"scope": 1560,
									"src": "769:350:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1261:140:11",
										"statements": [
											{
												"assignments": [
													1521,
													1523,
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1521,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1281:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "1273:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1520,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1292:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "1284:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1522,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1301:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "1295:7:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1524,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"arguments": [
														{
															"id": 1527,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "1321:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1526,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "1306:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "_ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1362:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1532,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "1385:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1533,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1388:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1534,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "1391:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1530,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1352:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1519,
												"id": 1536,
												"nodeType": "Return",
												"src": "1345:48:11"
											}
										]
									},
									"functionSelector": "97aba7f9",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1136:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_ethSignedMessageHash",
												"nameLocation": "1168:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1160:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1213:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1200:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1200:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:81:11"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1252:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:9:11"
									},
									"scope": 1560,
									"src": "1127:274:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "1585:715:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1550,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "1604:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1604:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1618:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "1604:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															},
															"value": "invalid signature length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															}
														],
														"id": 1549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1596:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "1596:53:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1671:580:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2038:24:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2053:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:12:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:19:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2038:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:24:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:12:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:19:11"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "2108:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:33:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2235:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2226:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2226:12:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2220:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:19:11"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:28:11"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1545,
														"isOffset": false,
														"isSlot": false,
														"src": "2108:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": false,
														"src": "2123:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": false,
														"src": "2230:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1547,
														"isOffset": false,
														"isSlot": false,
														"src": "2207:1:11",
														"valueSize": 1
													}
												],
												"id": 1557,
												"nodeType": "InlineAssembly",
												"src": "1662:589:11"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "1418:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1446:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1433:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:18:11"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1513:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1545:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1537:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1567:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1561:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1546,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1561:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:81:11"
									},
									"scope": 1560,
									"src": "1409:891:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1561,
							"src": "61:2242:11",
							"usedErrors": []
						}
					],
					"src": "33:2272:11"
				},
				"id": 11
			},
			"Whitelist.sol": {
				"ast": {
					"absolutePath": "Whitelist.sol",
					"exportedSymbols": {
						"MerkleProof": [
							866
						],
						"Whitelist": [
							1599
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 1563,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1600,
							"sourceUnit": 867,
							"src": "61:68:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599
							],
							"name": "Whitelist",
							"nameLocation": "142:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 1565,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "176:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1599,
									"src": "161:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1564,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "338:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "353:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "367:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "353:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "349:60:12",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "370:39:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "392:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1576,
															"id": 1581,
															"nodeType": "Return",
															"src": "385:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "_proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "478:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														{
															"id": 1587,
															"name": "merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "503:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1591,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "559:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1592,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "566:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1589,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "542:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "542:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "542:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1588,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "532:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "532:43:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1584,
															"name": "MerkleProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "441:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MerkleProof_$866_$",
																"typeString": "type(library MerkleProof)"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "441:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:149:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1596,
												"nodeType": "Return",
												"src": "421:169:12"
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelist",
									"nameLocation": "204:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "245:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "226:25:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1566,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "226:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1567,
													"nodeType": "ArrayTypeName",
													"src": "226:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "270:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "262:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "294:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "286:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:93:12"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "332:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:12"
									},
									"scope": 1599,
									"src": "195:403:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1600,
							"src": "133:470:12",
							"usedErrors": []
						}
					],
					"src": "33:572:12"
				},
				"id": 12
			}
		}
	}
}