{
	"id": "91846130ac399badc15a977e6a1a2a18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"MintNagaKids.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"./VerifySignature.sol\";\r\nimport \"./Whitelist.sol\";\r\nimport \"./INagaKidsNFT.sol\";\r\n\r\ncontract MintNagaKids is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {\r\n\r\n    INagaKidsNFT public nagaKidsContract;\r\n    bool public isPublicOpen;\r\n    bool public isWhitelistOpen;\r\n\r\n    address public signer;\r\n\r\n    mapping(address => bool) _isWhitelistMinted;\r\n    mapping(address => uint256) _isWhitelistMintedAmount;\r\n    mapping(address => bool) _isPublicMinted;\r\n\r\n    event WhitelistMinted(address indexed user,uint256 amount,uint256 timestamp);\r\n    event PublicMinted(address indexed user,uint256 timestamp);\r\n\r\n    constructor(INagaKidsNFT _nagaKids,bytes32 _merkleRoot) {\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        setNagaKidsContract(_nagaKids);\r\n        setMerkleRoot(_merkleRoot);\r\n\r\n    }\r\n\r\n    modifier Paused() {\r\n        require(isPause() == false,\"NagaKids was Paused.\");\r\n        _;\r\n    }\r\n\r\n    function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        nagaKidsContract = _nagaKids;\r\n    }\r\n    \r\n    function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        signer = _signer;\r\n    } \r\n\r\n    function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        isWhitelistOpen = _isOpen;\r\n    }\r\n\r\n    function setPublicOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        isPublicOpen = _isOpen;\r\n    }\r\n    \r\n    function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        merkleRoot = _merkleRoot;\r\n    }\r\n\r\n\r\n    function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {\r\n        require(isWhitelistOpen == true, \"Whitelist not open to mint.\");\r\n        require(getTotalSupply() + _amount < 1111, \"Over supply\");\r\n        require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\");\r\n        require(nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\");\r\n        require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\");\r\n\r\n        _isWhitelistMinted[msg.sender] = true;\r\n        _isWhitelistMintedAmount[msg.sender] += _amount;\r\n\r\n        for(uint i = 0; i< _amount; i++){\r\n            nagaKidsContract.safeMint(msg.sender);\r\n        }\r\n\r\n        emit WhitelistMinted(msg.sender,_amount,block.timestamp);\r\n    }\r\n\r\n    function publicMint(bytes calldata _sig) public payable nonReentrant Paused {\r\n\r\n        require(isPublicOpen == true, \"Whitelist not open to mint.\");\r\n        require(tx.origin == msg.sender, \"haha Contract can't call me\");\r\n        require(isPublicMinted(msg.sender) != true, \"You are already minted.\");\r\n        require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\");\r\n        require(nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\");\r\n        require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\");\r\n\r\n        _isPublicMinted[msg.sender] = true;\r\n        nagaKidsContract.safeMint(msg.sender);\r\n\r\n        \r\n        emit PublicMinted(msg.sender,block.timestamp);\r\n    }\r\n\r\n    function isWhitelistMinted(address _user) public view returns(bool) {\r\n        return _isWhitelistMinted[_user];\r\n    }\r\n\r\n    function isWhitelistMintedAmount(address _user) public view returns(uint256) {\r\n        return _isWhitelistMintedAmount[_user];\r\n    }\r\n\r\n    function isPublicMinted(address _user) public view returns(bool) {\r\n        return _isPublicMinted[_user];\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return nagaKidsContract.totalSupply();\r\n    }\r\n\r\n    function getMaxSupply() public view returns (uint256) {\r\n        return nagaKidsContract.maxSupply();\r\n    }\r\n\r\n    function isPause() public view returns (bool) {\r\n        return nagaKidsContract.paused();\r\n    }\r\n}\r\n"
			},
			"INagaKidsNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/IAccessControl.sol\";\r\n\r\ninterface INagaKidsNFT is IERC721,IAccessControl {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n    function maxSupply() external view returns (uint256);\r\n    function paused() external view returns (bool);\r\n    function safeMint(address to) external;\r\n    function PAUSER_ROLE() external view returns (bytes32);\r\n    function MINTER_ROLE() external view returns (bytes32);\r\n\r\n}"
			},
			"Whitelist.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract Whitelist {\r\n\r\n    bytes32 public merkleRoot;\r\n\r\n    function isWhitelist(\r\n        bytes32[] calldata _proof,\r\n        address _user,\r\n        uint256 _amount\r\n    ) internal view returns (bool) {\r\n        if (merkleRoot == 0) {\r\n            return false;\r\n        }\r\n\r\n        return\r\n            MerkleProof.verify(\r\n                _proof,\r\n                merkleRoot,\r\n                keccak256(abi.encodePacked(_user, _amount))\r\n            );\r\n    }\r\n\r\n}\r\n"
			},
			"VerifySignature.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\ncontract VerifySignature {\r\n    \r\n    function getMessageHash(\r\n        address _user\r\n    ) public view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_user, address(this)));\r\n    }\r\n\r\n    function getEthSignedMessageHash(bytes32 _messageHash)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        /*\r\n        Signature is produced by signing a keccak256 hash with the following format:\r\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\r\n        */\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\r\n                    \"\\x19Ethereum Signed Message:\\n32\",\r\n                    _messageHash\r\n                )\r\n            );\r\n    }\r\n\r\n    function verify(\r\n        address _signer,\r\n        address _user,\r\n        bytes memory signature\r\n    ) public view returns (bool) {\r\n        bytes32 messageHash = getMessageHash(_user);\r\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\r\n\r\n        return recoverSigner(ethSignedMessageHash, signature) == _signer;\r\n    }\r\n\r\n    function recoverSigner(\r\n        bytes32 _ethSignedMessageHash,\r\n        bytes memory _signature\r\n    ) public pure returns (address) {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_ethSignedMessageHash, v, r, s);\r\n    }\r\n\r\n    function splitSignature(bytes memory sig)\r\n        public\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Trees proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n            }\n        }\n        return computedHash;\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x24 PUSH22 0xA97023F85002D88B36969440A2F71B0286AD4E8B8954 SWAP7 MLOAD CREATE2 RETURN 0xD8 0xD2 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "146:1885:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220482475a97023f85002d88b36969440a2f71b0286ad4e8b89549651f5f3d8d2c164736f6c634300080f0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidsNFT.sol",
								"MintNagaKids.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":800:2577  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;800:1777:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CALLDATASIZE PUSH9 0xFA5FA11D3D3DD24084 PUSH4 0x979970C2 PUSH28 0xE388D0F7DF26A4A92E9B7B8C470464736F6C634300080F0033000000 ",
							"sourceMap": "800:1777:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"processProof(bytes32[] memory,bytes32)": "infinite",
								"verify(bytes32[] memory,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 2577,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e53668fa5fa11d3d3dd2408463979970c27be388d0f7df26a4a92e9b7b8c470464736f6c634300080f0033",
									".code": [
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 2577,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidsNFT.sol",
								"MintNagaKids.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Trees proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"INagaKidsNFT.sol": {
				"INagaKidsNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"INagaKidsNFT.sol\":\"INagaKidsNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"INagaKidsNFT.sol\":{\"keccak256\":\"0xe96108ed4b125ef13341e3ac371d44cc3b1cea2b277a2a1bfcf11f0b9b121c32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5a04eafc03ad2e9905ebd2878263af3daf1a5f6ac2a49ba3d5a82d0fc1b544\",\"dweb:/ipfs/QmeCQGpp4fiCGq68L2mFqGYCx6S1iDmHBUciJj1SEdqJB1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MintNagaKids.sol": {
				"MintNagaKids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract INagaKidsNFT",
									"name": "_nagaKids",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PublicMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "WhitelistMinted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isPublicMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPublicOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isWhitelistMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isWhitelistMintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isWhitelistOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nagaKidsContract",
							"outputs": [
								{
									"internalType": "contract INagaKidsNFT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "publicMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setMerkleRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract INagaKidsNFT",
									"name": "_nagaKids",
									"type": "address"
								}
							],
							"name": "setNagaKidsContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "setPublicOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_isOpen",
									"type": "bool"
								}
							],
							"name": "setWhitelistMintOpen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_proofMerkle",
									"type": "bytes32[]"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "whitelistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MintNagaKids.sol\":277:4177  contract MintNagaKids is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"MintNagaKids.sol\":818:1017  constructor(INagaKidsNFT _nagaKids,bytes32 _merkleRoot) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x02\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"MintNagaKids.sol\":887:929  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"MintNagaKids.sol\":918:928  msg.sender */\n  caller\n    /* \"MintNagaKids.sol\":887:897  _grantRole */\n  tag_9\n    /* \"MintNagaKids.sol\":887:929  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n    /* \"MintNagaKids.sol\":940:970  setNagaKidsContract(_nagaKids) */\n  tag_10\n    /* \"MintNagaKids.sol\":960:969  _nagaKids */\n  dup3\n    /* \"MintNagaKids.sol\":940:959  setNagaKidsContract */\n  tag_11\n    /* \"MintNagaKids.sol\":940:970  setNagaKidsContract(_nagaKids) */\n  jump\t// in\ntag_10:\n    /* \"MintNagaKids.sol\":981:1007  setMerkleRoot(_merkleRoot) */\n  tag_12\n    /* \"MintNagaKids.sol\":995:1006  _merkleRoot */\n  dup2\n    /* \"MintNagaKids.sol\":981:994  setMerkleRoot */\n  tag_13\n    /* \"MintNagaKids.sol\":981:1007  setMerkleRoot(_merkleRoot) */\n  jump\t// in\ntag_12:\n    /* \"MintNagaKids.sol\":818:1017  constructor(INagaKidsNFT _nagaKids,bytes32 _merkleRoot) {... */\n  pop\n  pop\n    /* \"MintNagaKids.sol\":277:4177  contract MintNagaKids is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  jump(tag_74)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  dup7\n  and\n  dup1\n  dup7\n  mstore\n  swap3\n  mstore\n  dup1\n  dup5\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  swap1\n  mload\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup6\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MintNagaKids.sol\":1132:1268  function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_22:\n  pop\n    /* \"MintNagaKids.sol\":1232:1248  nagaKidsContract */\n  0x03\n    /* \"MintNagaKids.sol\":1232:1260  nagaKidsContract = _nagaKids */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"MintNagaKids.sol\":1132:1268  function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n  jump\t// out\n    /* \"MintNagaKids.sol\":1654:1777  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n  jump\t// in\ntag_26:\n  pop\n    /* \"MintNagaKids.sol\":1745:1755  merkleRoot */\n  0x00\n    /* \"MintNagaKids.sol\":1745:1769  merkleRoot = _merkleRoot */\n  sstore\n    /* \"MintNagaKids.sol\":1654:1777  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  tag_31\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n  tag_33\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  tag_37\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n  0x14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n  or(tag_0_185, shl(0x20, tag_38))\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  tag_39\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n  0x20\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n  tag_0_185\n  tag_38\n  dup3\n  shl\n  or\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n  dup2\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n  add(0x20, mload(0x40))\n  tag_40\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  0x40\n  dup1\n  mload\n  not(0x1f)\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n  swap1\n  dup3\n  swap1\n  mstore\n  shl(0xe5, 0x461bcd)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n  dup3\n  mstore\n  tag_42\n  swap2\n  0x04\n  add\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_45\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_47\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n  tag_48\n  jump\t// in\ntag_47:\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n  dup2\n  gt\n  iszero\n  tag_50\n  jumpi\n  tag_50\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  swap1\n  dup1\n  dup3\n  mstore\n  dup1\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  dup3\n  add\n  0x40\n  mstore\n  dup1\n  iszero\n  tag_52\n  jumpi\n  0x20\n  dup3\n  add\n  dup2\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\ntag_52:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n  swap1\n  pop\n  shl(0xfc, 0x03)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_54\n  jumpi\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n  shl(0xfb, 0x0f)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_57\n  jumpi\n  tag_57\n  tag_55\n  jump\t// in\ntag_57:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_61\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n  tag_46\n  jump\t// in\ntag_61:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_62\n  swap1\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n  tag_48\n  jump\t// in\ntag_62:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  iszero\n  tag_59\n  jumpi\n  shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n  0x0f\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n  and\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n  0x10\n  dup2\n  lt\n  tag_64\n  jumpi\n  tag_64\n  tag_55\n  jump\t// in\ntag_64:\n  byte\n  0xf8\n  shl\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_66\n  jumpi\n  tag_66\n  tag_55\n  jump\t// in\ntag_66:\n  0x20\n  add\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n  swap1\n  not(sub(shl(0xf8, 0x01), 0x01))\n  and\n  swap1\n  dup2\n  0x00\n  byte\n  swap1\n  mstore8\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n  0x04\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n  swap5\n  swap1\n  swap5\n  shr\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n  tag_67\n  dup2\n  tag_68\n  jump\t// in\ntag_67:\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n  jump(tag_58)\ntag_59:\n  pop\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n  dup4\n  iszero\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_69\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2877:2879   */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2859:2880   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":2896:2914   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2889:2919   */\n  mstore\n    /* \"#utility.yul\":2955:2989   */\n  0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n    /* \"#utility.yul\":2935:2953   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2928:2990   */\n  mstore\n    /* \"#utility.yul\":3007:3025   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n  tag_42\n    /* \"#utility.yul\":2675:3031   */\n  jump\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\ntag_69:\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n  swap4\n    /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:385   */\ntag_3:\n    /* \"#utility.yul\":113:119   */\n  0x00\n    /* \"#utility.yul\":121:127   */\n  dup1\n    /* \"#utility.yul\":174:176   */\n  0x40\n    /* \"#utility.yul\":162:171   */\n  dup4\n    /* \"#utility.yul\":153:160   */\n  dup6\n    /* \"#utility.yul\":149:172   */\n  sub\n    /* \"#utility.yul\":145:177   */\n  slt\n    /* \"#utility.yul\":142:194   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":190:191   */\n  0x00\n    /* \"#utility.yul\":187:188   */\n  dup1\n    /* \"#utility.yul\":180:192   */\n  revert\n    /* \"#utility.yul\":142:194   */\ntag_76:\n    /* \"#utility.yul\":216:232   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":261:292   */\n  dup2\n  and\n    /* \"#utility.yul\":251:293   */\n  dup2\n  eq\n    /* \"#utility.yul\":241:311   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":307:308   */\n  0x00\n    /* \"#utility.yul\":304:305   */\n  dup1\n    /* \"#utility.yul\":297:309   */\n  revert\n    /* \"#utility.yul\":241:311   */\ntag_77:\n    /* \"#utility.yul\":375:377   */\n  0x20\n    /* \"#utility.yul\":360:378   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":354:379   */\n  mload\n    /* \"#utility.yul\":330:335   */\n  swap3\n  swap5\n    /* \"#utility.yul\":354:379   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:385   */\n  jump\t// out\n    /* \"#utility.yul\":390:648   */\ntag_72:\n    /* \"#utility.yul\":462:463   */\n  0x00\n    /* \"#utility.yul\":472:585   */\ntag_79:\n    /* \"#utility.yul\":486:492   */\n  dup4\n    /* \"#utility.yul\":483:484   */\n  dup2\n    /* \"#utility.yul\":480:493   */\n  lt\n    /* \"#utility.yul\":472:585   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":562:573   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":556:574   */\n  mload\n    /* \"#utility.yul\":543:554   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":536:575   */\n  mstore\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":501:511   */\n  add\n    /* \"#utility.yul\":472:585   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":603:609   */\n  dup4\n    /* \"#utility.yul\":600:601   */\n  dup2\n    /* \"#utility.yul\":597:610   */\n  gt\n    /* \"#utility.yul\":594:642   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":638:639   */\n  0x00\n    /* \"#utility.yul\":629:635   */\n  dup5\n    /* \"#utility.yul\":624:627   */\n  dup5\n    /* \"#utility.yul\":620:636   */\n  add\n    /* \"#utility.yul\":613:640   */\n  mstore\n    /* \"#utility.yul\":594:642   */\ntag_82:\n  pop\n    /* \"#utility.yul\":390:648   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":653:1439   */\ntag_41:\n    /* \"#utility.yul\":1064:1089   */\n  0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n    /* \"#utility.yul\":1059:1062   */\n  dup2\n    /* \"#utility.yul\":1052:1090   */\n  mstore\n    /* \"#utility.yul\":1034:1037   */\n  0x00\n    /* \"#utility.yul\":1119:1125   */\n  dup4\n    /* \"#utility.yul\":1113:1126   */\n  mload\n    /* \"#utility.yul\":1135:1197   */\n  tag_84\n    /* \"#utility.yul\":1190:1196   */\n  dup2\n    /* \"#utility.yul\":1185:1187   */\n  0x17\n    /* \"#utility.yul\":1180:1183   */\n  dup6\n    /* \"#utility.yul\":1176:1188   */\n  add\n    /* \"#utility.yul\":1169:1173   */\n  0x20\n    /* \"#utility.yul\":1161:1167   */\n  dup9\n    /* \"#utility.yul\":1157:1174   */\n  add\n    /* \"#utility.yul\":1135:1197   */\n  tag_72\n  jump\t// in\ntag_84:\n  shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n    /* \"#utility.yul\":1256:1258   */\n  0x17\n    /* \"#utility.yul\":1216:1232   */\n  swap2\n  dup5\n  add\n    /* \"#utility.yul\":1248:1259   */\n  swap2\n  dup3\n  add\n    /* \"#utility.yul\":1241:1281   */\n  mstore\n    /* \"#utility.yul\":1306:1319   */\n  dup4\n  mload\n    /* \"#utility.yul\":1328:1391   */\n  tag_85\n    /* \"#utility.yul\":1306:1319   */\n  dup2\n    /* \"#utility.yul\":1377:1379   */\n  0x28\n    /* \"#utility.yul\":1369:1380   */\n  dup5\n  add\n    /* \"#utility.yul\":1362:1366   */\n  0x20\n    /* \"#utility.yul\":1350:1367   */\n  dup9\n  add\n    /* \"#utility.yul\":1328:1391   */\n  tag_72\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1411:1428   */\n  add\n    /* \"#utility.yul\":1430:1432   */\n  0x28\n    /* \"#utility.yul\":1407:1433   */\n  add\n  swap5\n    /* \"#utility.yul\":653:1439   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1444:1827   */\ntag_43:\n    /* \"#utility.yul\":1593:1595   */\n  0x20\n    /* \"#utility.yul\":1582:1591   */\n  dup2\n    /* \"#utility.yul\":1575:1596   */\n  mstore\n    /* \"#utility.yul\":1556:1560   */\n  0x00\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1619:1632   */\n  mload\n    /* \"#utility.yul\":1668:1674   */\n  dup1\n    /* \"#utility.yul\":1663:1665   */\n  0x20\n    /* \"#utility.yul\":1652:1661   */\n  dup5\n    /* \"#utility.yul\":1648:1666   */\n  add\n    /* \"#utility.yul\":1641:1675   */\n  mstore\n    /* \"#utility.yul\":1684:1750   */\n  tag_87\n    /* \"#utility.yul\":1743:1749   */\n  dup2\n    /* \"#utility.yul\":1738:1740   */\n  0x40\n    /* \"#utility.yul\":1727:1736   */\n  dup6\n    /* \"#utility.yul\":1723:1741   */\n  add\n    /* \"#utility.yul\":1718:1720   */\n  0x20\n    /* \"#utility.yul\":1710:1716   */\n  dup8\n    /* \"#utility.yul\":1706:1721   */\n  add\n    /* \"#utility.yul\":1684:1750   */\n  tag_72\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1811:1813   */\n  0x1f\n    /* \"#utility.yul\":1790:1805   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1786:1815   */\n  and\n    /* \"#utility.yul\":1771:1816   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":1818:1820   */\n  0x40\n    /* \"#utility.yul\":1767:1821   */\n  add\n  swap3\n    /* \"#utility.yul\":1444:1827   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1832:1959   */\ntag_73:\n    /* \"#utility.yul\":1893:1903   */\n  0x4e487b71\n    /* \"#utility.yul\":1888:1891   */\n  0xe0\n    /* \"#utility.yul\":1884:1904   */\n  shl\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1905   */\n  mstore\n    /* \"#utility.yul\":1924:1928   */\n  0x11\n    /* \"#utility.yul\":1921:1922   */\n  0x04\n    /* \"#utility.yul\":1914:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x24\n    /* \"#utility.yul\":1945:1946   */\n  0x00\n    /* \"#utility.yul\":1938:1953   */\n  revert\n    /* \"#utility.yul\":1964:2132   */\ntag_46:\n    /* \"#utility.yul\":2004:2011   */\n  0x00\n    /* \"#utility.yul\":2070:2071   */\n  dup2\n    /* \"#utility.yul\":2066:2067   */\n  0x00\n    /* \"#utility.yul\":2062:2068   */\n  not\n    /* \"#utility.yul\":2058:2072   */\n  div\n    /* \"#utility.yul\":2055:2056   */\n  dup4\n    /* \"#utility.yul\":2052:2073   */\n  gt\n    /* \"#utility.yul\":2047:2048   */\n  dup3\n    /* \"#utility.yul\":2040:2049   */\n  iszero\n    /* \"#utility.yul\":2033:2050   */\n  iszero\n    /* \"#utility.yul\":2029:2074   */\n  and\n    /* \"#utility.yul\":2026:2097   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2077:2095   */\n  tag_91\n  tag_73\n  jump\t// in\ntag_91:\n  pop\n    /* \"#utility.yul\":2117:2126   */\n  mul\n  swap1\n    /* \"#utility.yul\":1964:2132   */\n  jump\t// out\n    /* \"#utility.yul\":2137:2265   */\ntag_48:\n    /* \"#utility.yul\":2177:2180   */\n  0x00\n    /* \"#utility.yul\":2208:2209   */\n  dup3\n    /* \"#utility.yul\":2204:2210   */\n  not\n    /* \"#utility.yul\":2201:2202   */\n  dup3\n    /* \"#utility.yul\":2198:2211   */\n  gt\n    /* \"#utility.yul\":2195:2234   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2214:2232   */\n  tag_94\n  tag_73\n  jump\t// in\ntag_94:\n  pop\n    /* \"#utility.yul\":2250:2259   */\n  add\n  swap1\n    /* \"#utility.yul\":2137:2265   */\n  jump\t// out\n    /* \"#utility.yul\":2270:2397   */\ntag_51:\n    /* \"#utility.yul\":2331:2341   */\n  0x4e487b71\n    /* \"#utility.yul\":2326:2329   */\n  0xe0\n    /* \"#utility.yul\":2322:2342   */\n  shl\n    /* \"#utility.yul\":2319:2320   */\n  0x00\n    /* \"#utility.yul\":2312:2343   */\n  mstore\n    /* \"#utility.yul\":2362:2366   */\n  0x41\n    /* \"#utility.yul\":2359:2360   */\n  0x04\n    /* \"#utility.yul\":2352:2367   */\n  mstore\n    /* \"#utility.yul\":2386:2390   */\n  0x24\n    /* \"#utility.yul\":2383:2384   */\n  0x00\n    /* \"#utility.yul\":2376:2391   */\n  revert\n    /* \"#utility.yul\":2402:2529   */\ntag_55:\n    /* \"#utility.yul\":2463:2473   */\n  0x4e487b71\n    /* \"#utility.yul\":2458:2461   */\n  0xe0\n    /* \"#utility.yul\":2454:2474   */\n  shl\n    /* \"#utility.yul\":2451:2452   */\n  0x00\n    /* \"#utility.yul\":2444:2475   */\n  mstore\n    /* \"#utility.yul\":2494:2498   */\n  0x32\n    /* \"#utility.yul\":2491:2492   */\n  0x04\n    /* \"#utility.yul\":2484:2499   */\n  mstore\n    /* \"#utility.yul\":2518:2522   */\n  0x24\n    /* \"#utility.yul\":2515:2516   */\n  0x00\n    /* \"#utility.yul\":2508:2523   */\n  revert\n    /* \"#utility.yul\":2534:2670   */\ntag_68:\n    /* \"#utility.yul\":2573:2576   */\n  0x00\n    /* \"#utility.yul\":2601:2606   */\n  dup2\n    /* \"#utility.yul\":2591:2630   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2610:2628   */\n  tag_99\n  tag_73\n  jump\t// in\ntag_99:\n  pop\n  not(0x00)\n    /* \"#utility.yul\":2646:2664   */\n  add\n  swap1\n    /* \"#utility.yul\":2534:2670   */\n  jump\t// out\n    /* \"#utility.yul\":2675:3031   */\ntag_74:\n    /* \"MintNagaKids.sol\":277:4177  contract MintNagaKids is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MintNagaKids.sol\":277:4177  contract MintNagaKids is Whitelist, VerifySignature, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c19e783\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa7bb5803\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf055c7a9\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf055c7a9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfade63c9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xff0938a7\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa7bb5803\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xde6892c8\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x91d14854\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x94f4504d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x6c19e783\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7cb64759\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x80506494\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x2904e6d9\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4c0f38c2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5997bbee\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2904e6d9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2c8a1926\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1f5ac1b2\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x238ac933\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x27c25c20\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11c67efc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d2d3b\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MintNagaKids.sol\":413:437  bool public isPublicOpen */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      sload(0x03)\n      tag_40\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"MintNagaKids.sol\":3578:3712  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3673:3704  _isWhitelistMintedAmount[_user] */\n      and\n        /* \"MintNagaKids.sol\":3646:3653  uint256 */\n      0x00\n        /* \"MintNagaKids.sol\":3673:3704  _isWhitelistMintedAmount[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3673:3697  _isWhitelistMintedAmount */\n      0x06\n        /* \"MintNagaKids.sol\":3673:3704  _isWhitelistMintedAmount[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MintNagaKids.sol\":3578:3712  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":1031:1056   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1019:1021   */\n      0x20\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"MintNagaKids.sol\":3578:3712  function isWhitelistMintedAmount(address _user) public view returns(uint256) {... */\n      tag_44\n        /* \"#utility.yul\":885:1062   */\n      jump\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_51\n      tag_59\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"MintNagaKids.sol\":480:501  address public signer */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sload(0x04)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1413:1445   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1395:1446   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1368:1386   */\n      add\n        /* \"MintNagaKids.sol\":480:501  address public signer */\n      tag_44\n        /* \"#utility.yul\":1249:1452   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_51\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"MintNagaKids.sol\":370:406  INagaKidsNFT public nagaKidsContract */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sload(0x03)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"MintNagaKids.sol\":1787:2661  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n    tag_9:\n      tag_79\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"MintNagaKids.sol\":1132:1268  function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_79\n      tag_85\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_51\n      sload(0x00)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_79\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_79\n      tag_99\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_40\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"MintNagaKids.sol\":3961:4069  function getMaxSupply() public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_51\n      tag_109\n      jump\t// in\n        /* \"MintNagaKids.sol\":3451:3570  function isWhitelistMinted(address _user) public view returns(bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_40\n      tag_113\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3537:3562  _isWhitelistMinted[_user] */\n      and\n        /* \"MintNagaKids.sol\":3513:3517  bool */\n      0x00\n        /* \"MintNagaKids.sol\":3537:3562  _isWhitelistMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3537:3555  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKids.sol\":3537:3562  _isWhitelistMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MintNagaKids.sol\":3451:3570  function isWhitelistMinted(address _user) public view returns(bool) {... */\n      jump\n        /* \"MintNagaKids.sol\":1280:1387  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_79\n      tag_118\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"MintNagaKids.sol\":1654:1777  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_79\n      tag_122\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"MintNagaKids.sol\":1528:1642  function setPublicOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_79\n      tag_126\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_40\n      tag_131\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"MintNagaKids.sol\":444:471  bool public isWhitelistOpen */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      sload(0x03)\n      tag_40\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_64\n      tag_140\n      calldatasize\n      0x04\n      tag_141\n      jump\t// in\n    tag_140:\n      tag_142\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_51\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5897:5922   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5953:5955   */\n      0x20\n        /* \"#utility.yul\":5938:5956   */\n      dup5\n      add\n        /* \"#utility.yul\":5931:5965   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6013:6017   */\n      0xff\n        /* \"#utility.yul\":6001:6018   */\n      and\n        /* \"#utility.yul\":5981:5999   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5974:6019   */\n      mstore\n        /* \"#utility.yul\":5885:5887   */\n      0x60\n        /* \"#utility.yul\":5870:5888   */\n      add\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_44\n        /* \"#utility.yul\":5699:6025   */\n      jump\n        /* \"MintNagaKids.sol\":3841:3953  function getTotalSupply() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_51\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_79\n      tag_161\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"MintNagaKids.sol\":2669:3443  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n    tag_27:\n      tag_79\n      tag_164\n      calldatasize\n      0x04\n      tag_165\n      jump\t// in\n    tag_164:\n      tag_166\n      jump\t// in\n        /* \"MintNagaKids.sol\":3720:3833  function isPublicMinted(address _user) public view returns(bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_40\n      tag_169\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3803:3825  _isPublicMinted[_user] */\n      and\n        /* \"MintNagaKids.sol\":3779:3783  bool */\n      0x00\n        /* \"MintNagaKids.sol\":3803:3825  _isPublicMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3803:3818  _isPublicMinted */\n      0x07\n        /* \"MintNagaKids.sol\":3803:3825  _isPublicMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MintNagaKids.sol\":3720:3833  function isPublicMinted(address _user) public view returns(bool) {... */\n      jump\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_51\n      tag_174\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"MintNagaKids.sol\":1396:1520  function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_79\n      tag_179\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"MintNagaKids.sol\":4077:4174  function isPause() public view returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_40\n      tag_183\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_188\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_60:\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":6853:6855   */\n      0x60\n        /* \"#utility.yul\":6849:6864   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":6845:6869   */\n      dup3\n      and\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":6833:6870   */\n      mstore\n        /* \"VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":6904:6919   */\n      swap1\n      shl\n        /* \"#utility.yul\":6900:6924   */\n      and\n        /* \"#utility.yul\":6886:6898   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":6879:6925   */\n      mstore\n        /* \"VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":6941:6953   */\n      0x48\n      add\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_192:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":1787:2661  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7166:7168   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7148:7169   */\n      mstore\n        /* \"#utility.yul\":7205:7207   */\n      0x1f\n        /* \"#utility.yul\":7185:7203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7178:7208   */\n      mstore\n        /* \"#utility.yul\":7244:7277   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7224:7242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7217:7278   */\n      mstore\n        /* \"#utility.yul\":7295:7313   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"MintNagaKids.sol\":1062:1071  isPause() */\n      tag_200\n        /* \"MintNagaKids.sol\":1062:1069  isPause */\n      tag_183\n        /* \"MintNagaKids.sol\":1062:1071  isPause() */\n      jump\t// in\n    tag_200:\n        /* \"MintNagaKids.sol\":1062:1080  isPause() == false */\n      iszero\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7526:7528   */\n      0x20\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7508:7529   */\n      mstore\n        /* \"#utility.yul\":7565:7567   */\n      0x14\n        /* \"#utility.yul\":7545:7563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7538:7568   */\n      mstore\n      shl(0x61, 0x2730b3b0a5b4b239903bb0b9902830bab9b2b217)\n        /* \"#utility.yul\":7584:7602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7577:7627   */\n      mstore\n        /* \"#utility.yul\":7644:7662   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      tag_197\n        /* \"#utility.yul\":7324:7668   */\n      jump\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n    tag_201:\n        /* \"MintNagaKids.sol\":1913:1928  isWhitelistOpen */\n      sload(0x03)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"MintNagaKids.sol\":1913:1936  isWhitelistOpen == true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":1932:1936  true */\n      0x01\n        /* \"MintNagaKids.sol\":1913:1936  isWhitelistOpen == true */\n      eq\n        /* \"MintNagaKids.sol\":1905:1968  require(isWhitelistOpen == true, \"Whitelist not open to mint.\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7875:7877   */\n      0x20\n        /* \"MintNagaKids.sol\":1905:1968  require(isWhitelistOpen == true, \"Whitelist not open to mint.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7857:7878   */\n      mstore\n        /* \"#utility.yul\":7914:7916   */\n      0x1b\n        /* \"#utility.yul\":7894:7912   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7887:7917   */\n      mstore\n        /* \"#utility.yul\":7953:7982   */\n      0x57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000\n        /* \"#utility.yul\":7933:7951   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7926:7983   */\n      mstore\n        /* \"#utility.yul\":8000:8018   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":1905:1968  require(isWhitelistOpen == true, \"Whitelist not open to mint.\") */\n      tag_197\n        /* \"#utility.yul\":7673:8024   */\n      jump\n        /* \"MintNagaKids.sol\":1905:1968  require(isWhitelistOpen == true, \"Whitelist not open to mint.\") */\n    tag_205:\n        /* \"MintNagaKids.sol\":2016:2020  1111 */\n      0x0457\n        /* \"MintNagaKids.sol\":2006:2013  _amount */\n      dup2\n        /* \"MintNagaKids.sol\":1987:2003  getTotalSupply() */\n      tag_208\n        /* \"MintNagaKids.sol\":1987:2001  getTotalSupply */\n      tag_157\n        /* \"MintNagaKids.sol\":1987:2003  getTotalSupply() */\n      jump\t// in\n    tag_208:\n        /* \"MintNagaKids.sol\":1987:2013  getTotalSupply() + _amount */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"MintNagaKids.sol\":1987:2020  getTotalSupply() + _amount < 1111 */\n      lt\n        /* \"MintNagaKids.sol\":1979:2036  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8496:8498   */\n      0x20\n        /* \"MintNagaKids.sol\":1979:2036  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8478:8499   */\n      mstore\n        /* \"#utility.yul\":8535:8537   */\n      0x0b\n        /* \"#utility.yul\":8515:8533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8508:8538   */\n      mstore\n      shl(0xa8, 0x4f76657220737570706c79)\n        /* \"#utility.yul\":8554:8572   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8547:8588   */\n      mstore\n        /* \"#utility.yul\":8605:8623   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":1979:2036  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n      tag_197\n        /* \"#utility.yul\":8294:8629   */\n      jump\n        /* \"MintNagaKids.sol\":1979:2036  require(getTotalSupply() + _amount < 1111, \"Over supply\") */\n    tag_211:\n        /* \"MintNagaKids.sol\":2073:2083  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":3513:3517  bool */\n      0x00\n        /* \"MintNagaKids.sol\":3537:3562  _isWhitelistMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3537:3555  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKids.sol\":3537:3562  _isWhitelistMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MintNagaKids.sol\":2055:2092  isWhitelistMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":2088:2092  true */\n      0x01\n        /* \"MintNagaKids.sol\":2055:2092  isWhitelistMinted(msg.sender) != true */\n      sub\n        /* \"MintNagaKids.sol\":2047:2120  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"MintNagaKids.sol\":2047:2120  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8818:8839   */\n      mstore\n        /* \"#utility.yul\":8875:8877   */\n      0x17\n        /* \"#utility.yul\":8855:8873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8848:8878   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":8894:8912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8887:8940   */\n      mstore\n        /* \"#utility.yul\":8957:8975   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":2047:2120  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_197\n        /* \"#utility.yul\":8634:8981   */\n      jump\n        /* \"MintNagaKids.sol\":2047:2120  require(isWhitelistMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_215:\n        /* \"MintNagaKids.sol\":2139:2155  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":2164:2194  nagaKidsContract.MINTER_ROLE() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5391393)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":2139:2155  nagaKidsContract */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"MintNagaKids.sol\":2139:2163  nagaKidsContract.hasRole */\n      0x91d14854\n      swap2\n        /* \"MintNagaKids.sol\":2139:2155  nagaKidsContract */\n      dup4\n      swap2\n        /* \"MintNagaKids.sol\":2164:2192  nagaKidsContract.MINTER_ROLE */\n      0xd5391393\n      swap2\n        /* \"MintNagaKids.sol\":2164:2194  nagaKidsContract.MINTER_ROLE() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKids.sol\":2139:2155  nagaKidsContract */\n      dup7\n        /* \"MintNagaKids.sol\":2164:2194  nagaKidsContract.MINTER_ROLE() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"MintNagaKids.sol\":2139:2209  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9349:9374   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"MintNagaKids.sol\":2203:2207  this */\n      address\n        /* \"#utility.yul\":9390:9408   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9383:9443   */\n      mstore\n        /* \"#utility.yul\":9322:9340   */\n      0x44\n      add\n        /* \"MintNagaKids.sol\":2139:2209  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"MintNagaKids.sol\":2139:2217  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":2213:2217  true */\n      0x01\n        /* \"MintNagaKids.sol\":2139:2217  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true */\n      eq\n        /* \"MintNagaKids.sol\":2131:2263  require(nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_230\n      jump\t// in\n    tag_228:\n        /* \"MintNagaKids.sol\":2282:2326  isWhitelist(_proofMerkle,msg.sender,_amount) */\n      tag_231\n        /* \"MintNagaKids.sol\":2294:2306  _proofMerkle */\n      dup4\n      dup4\n        /* \"MintNagaKids.sol\":2307:2317  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":2318:2325  _amount */\n      dup5\n        /* \"MintNagaKids.sol\":2282:2293  isWhitelist */\n      tag_232\n        /* \"MintNagaKids.sol\":2282:2326  isWhitelist(_proofMerkle,msg.sender,_amount) */\n      jump\t// in\n    tag_231:\n        /* \"MintNagaKids.sol\":2274:2368  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10317:10319   */\n      0x20\n        /* \"MintNagaKids.sol\":2274:2368  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10299:10320   */\n      mstore\n        /* \"#utility.yul\":10356:10358   */\n      0x25\n        /* \"#utility.yul\":10336:10354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10329:10359   */\n      mstore\n        /* \"#utility.yul\":10395:10429   */\n      0x556e617574686f72697a65642057686974656c6973744d696e74205468697320\n        /* \"#utility.yul\":10375:10393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10368:10430   */\n      mstore\n      shl(0xd9, 0x2ab9b2b917)\n        /* \"#utility.yul\":10446:10464   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10439:10474   */\n      mstore\n        /* \"#utility.yul\":10491:10510   */\n      0x84\n      add\n        /* \"MintNagaKids.sol\":2274:2368  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n      tag_197\n        /* \"#utility.yul\":10115:10516   */\n      jump\n        /* \"MintNagaKids.sol\":2274:2368  require(isWhitelist(_proofMerkle,msg.sender,_amount), \"Unauthorized WhitelistMint This User.\") */\n    tag_233:\n        /* \"MintNagaKids.sol\":2400:2410  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":2381:2411  _isWhitelistMinted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":2381:2399  _isWhitelistMinted */\n      0x05\n        /* \"MintNagaKids.sol\":2381:2411  _isWhitelistMinted[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MintNagaKids.sol\":2381:2418  _isWhitelistMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"MintNagaKids.sol\":2414:2418  true */\n      0x01\n        /* \"MintNagaKids.sol\":2381:2418  _isWhitelistMinted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":2429:2453  _isWhitelistMintedAmount */\n      0x06\n        /* \"MintNagaKids.sol\":2429:2465  _isWhitelistMintedAmount[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"MintNagaKids.sol\":2429:2476  _isWhitelistMintedAmount[msg.sender] += _amount */\n      dup1\n      sload\n        /* \"MintNagaKids.sol\":2469:2476  _amount */\n      dup4\n      swap3\n        /* \"MintNagaKids.sol\":2381:2411  _isWhitelistMinted[msg.sender] */\n      swap1\n        /* \"MintNagaKids.sol\":2429:2476  _isWhitelistMintedAmount[msg.sender] += _amount */\n      tag_236\n      swap1\n        /* \"MintNagaKids.sol\":2469:2476  _amount */\n      dup5\n      swap1\n        /* \"MintNagaKids.sol\":2429:2476  _isWhitelistMintedAmount[msg.sender] += _amount */\n      tag_210\n      jump\t// in\n    tag_236:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":2493:2499  uint i */\n      0x00\n      swap1\n      pop\n        /* \"MintNagaKids.sol\":2489:2585  for(uint i = 0; i< _amount; i++){... */\n    tag_237:\n        /* \"MintNagaKids.sol\":2508:2515  _amount */\n      dup2\n        /* \"MintNagaKids.sol\":2505:2506  i */\n      dup2\n        /* \"MintNagaKids.sol\":2505:2515  i< _amount */\n      lt\n        /* \"MintNagaKids.sol\":2489:2585  for(uint i = 0; i< _amount; i++){... */\n      iszero\n      tag_238\n      jumpi\n        /* \"MintNagaKids.sol\":2536:2552  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":2536:2573  nagaKidsContract.safeMint(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x40d097c3)\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":2562:2572  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":2536:2573  nagaKidsContract.safeMint(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1395:1446   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":2536:2552  nagaKidsContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"MintNagaKids.sol\":2536:2561  nagaKidsContract.safeMint */\n      0x40d097c3\n      swap1\n        /* \"#utility.yul\":1368:1386   */\n      0x24\n      add\n        /* \"MintNagaKids.sol\":2536:2573  nagaKidsContract.safeMint(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n        /* \"MintNagaKids.sol\":2517:2520  i++ */\n      dup1\n      dup1\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n      pop\n        /* \"MintNagaKids.sol\":2489:2585  for(uint i = 0; i< _amount; i++){... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"MintNagaKids.sol\":2602:2653  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10835:10860   */\n      dup3\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":2637:2652  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10891:10893   */\n      0x20\n        /* \"#utility.yul\":10876:10894   */\n      dup3\n      add\n        /* \"#utility.yul\":10869:10903   */\n      mstore\n        /* \"MintNagaKids.sol\":2618:2628  msg.sender */\n      caller\n      swap2\n        /* \"MintNagaKids.sol\":2602:2653  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      0xb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938\n      swap2\n        /* \"#utility.yul\":10808:10826   */\n      add\n        /* \"MintNagaKids.sol\":2602:2653  WhitelistMinted(msg.sender,_amount,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"MintNagaKids.sol\":1787:2661  function whitelistMint(bytes32[] calldata _proofMerkle,uint256 _amount) public payable nonReentrant Paused {... */\n      jump\t// out\n        /* \"MintNagaKids.sol\":1132:1268  function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_249\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_249:\n      pop\n        /* \"MintNagaKids.sol\":1232:1248  nagaKidsContract */\n      0x03\n        /* \"MintNagaKids.sol\":1232:1260  nagaKidsContract = _nagaKids */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":1132:1268  function setNagaKidsContract(INagaKidsNFT _nagaKids) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11116:11118   */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11098:11119   */\n      mstore\n        /* \"#utility.yul\":11155:11157   */\n      0x2f\n        /* \"#utility.yul\":11135:11153   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11128:11158   */\n      mstore\n        /* \"#utility.yul\":11194:11228   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":11174:11192   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11167:11229   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":11245:11263   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11238:11283   */\n      mstore\n        /* \"#utility.yul\":11300:11319   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_197\n        /* \"#utility.yul\":10914:11325   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_264\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_105:\n        /* \"VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_267\n        /* \"VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"VerifySignature.sol\":935:949  getMessageHash */\n      tag_60\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_267:\n        /* \"VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_268\n        /* \"VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_175\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_268:\n        /* \"VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_269\n        /* \"VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_142\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MintNagaKids.sol\":3961:4069  function getMaxSupply() public view returns (uint256) {... */\n    tag_109:\n        /* \"MintNagaKids.sol\":4033:4049  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":4033:4061  nagaKidsContract.maxSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5abeb01)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKids.sol\":4006:4013  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":4033:4049  nagaKidsContract */\n      and\n      swap2\n        /* \"MintNagaKids.sol\":4033:4059  nagaKidsContract.maxSupply */\n      0xd5abeb01\n      swap2\n        /* \"MintNagaKids.sol\":4033:4061  nagaKidsContract.maxSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKids.sol\":4033:4049  nagaKidsContract */\n      dup7\n        /* \"MintNagaKids.sol\":4033:4061  nagaKidsContract.maxSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_273:\n        /* \"MintNagaKids.sol\":4026:4061  return nagaKidsContract.maxSupply() */\n      swap1\n      pop\n        /* \"MintNagaKids.sol\":3961:4069  function getMaxSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MintNagaKids.sol\":1280:1387  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_277\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_277:\n      pop\n        /* \"MintNagaKids.sol\":1363:1369  signer */\n      0x04\n        /* \"MintNagaKids.sol\":1363:1379  signer = _signer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":1280:1387  function setSigner(address _signer) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"MintNagaKids.sol\":1654:1777  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"MintNagaKids.sol\":1745:1755  merkleRoot */\n      0x00\n        /* \"MintNagaKids.sol\":1745:1769  merkleRoot = _merkleRoot */\n      sstore\n        /* \"MintNagaKids.sol\":1654:1777  function setMerkleRoot(bytes32 _merkleRoot) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"MintNagaKids.sol\":1528:1642  function setPublicOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_283\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_283:\n      pop\n        /* \"MintNagaKids.sol\":1612:1624  isPublicOpen */\n      0x03\n        /* \"MintNagaKids.sol\":1612:1634  isPublicOpen = _isOpen */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":1528:1642  function setPublicOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_142:\n        /* \"VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_287\n        /* \"VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"VerifySignature.sol\":1306:1320  splitSignature */\n      tag_152\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_287:\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":11746:11771   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":11819:11823   */\n      0xff\n        /* \"#utility.yul\":11807:11824   */\n      dup4\n      and\n        /* \"#utility.yul\":11787:11805   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11780:11825   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11841:11859   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":11834:11868   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":11884:11902   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":11877:11911   */\n      dup4\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":11718:11737   */\n      0xa0\n      add\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_152:\n        /* \"VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12124:12126   */\n      0x20\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12106:12127   */\n      mstore\n        /* \"#utility.yul\":12163:12165   */\n      0x18\n        /* \"#utility.yul\":12143:12161   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12136:12166   */\n      mstore\n        /* \"#utility.yul\":12202:12228   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":12182:12200   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12175:12229   */\n      mstore\n        /* \"#utility.yul\":12246:12264   */\n      0x64\n      add\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_197\n        /* \"#utility.yul\":11922:12270   */\n      jump\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n    tag_293:\n      pop\n      pop\n      pop\n        /* \"VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"MintNagaKids.sol\":3841:3953  function getTotalSupply() public view returns (uint256) {... */\n    tag_157:\n        /* \"MintNagaKids.sol\":3915:3931  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":3915:3945  nagaKidsContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKids.sol\":3888:3895  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3915:3931  nagaKidsContract */\n      and\n      swap2\n        /* \"MintNagaKids.sol\":3915:3943  nagaKidsContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"MintNagaKids.sol\":3915:3945  nagaKidsContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKids.sol\":3915:3931  nagaKidsContract */\n      dup7\n        /* \"MintNagaKids.sol\":3915:3945  nagaKidsContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_302\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n        /* \"MintNagaKids.sol\":2669:3443  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7166:7168   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7148:7169   */\n      mstore\n        /* \"#utility.yul\":7205:7207   */\n      0x1f\n        /* \"#utility.yul\":7185:7203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7178:7208   */\n      mstore\n        /* \"#utility.yul\":7244:7277   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7224:7242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7217:7278   */\n      mstore\n        /* \"#utility.yul\":7295:7313   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_197\n        /* \"#utility.yul\":6964:7319   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_306:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"MintNagaKids.sol\":1062:1071  isPause() */\n      tag_309\n        /* \"MintNagaKids.sol\":1062:1069  isPause */\n      tag_183\n        /* \"MintNagaKids.sol\":1062:1071  isPause() */\n      jump\t// in\n    tag_309:\n        /* \"MintNagaKids.sol\":1062:1080  isPause() == false */\n      iszero\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7526:7528   */\n      0x20\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7508:7529   */\n      mstore\n        /* \"#utility.yul\":7565:7567   */\n      0x14\n        /* \"#utility.yul\":7545:7563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7538:7568   */\n      mstore\n      shl(0x61, 0x2730b3b0a5b4b239903bb0b9902830bab9b2b217)\n        /* \"#utility.yul\":7584:7602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7577:7627   */\n      mstore\n        /* \"#utility.yul\":7644:7662   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n      tag_197\n        /* \"#utility.yul\":7324:7668   */\n      jump\n        /* \"MintNagaKids.sol\":1054:1104  require(isPause() == false,\"NagaKids was Paused.\") */\n    tag_310:\n        /* \"MintNagaKids.sol\":2766:2778  isPublicOpen */\n      sload(0x03)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"MintNagaKids.sol\":2766:2786  isPublicOpen == true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":2782:2786  true */\n      0x01\n        /* \"MintNagaKids.sol\":2766:2786  isPublicOpen == true */\n      eq\n        /* \"MintNagaKids.sol\":2758:2818  require(isPublicOpen == true, \"Whitelist not open to mint.\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7875:7877   */\n      0x20\n        /* \"MintNagaKids.sol\":2758:2818  require(isPublicOpen == true, \"Whitelist not open to mint.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7857:7878   */\n      mstore\n        /* \"#utility.yul\":7914:7916   */\n      0x1b\n        /* \"#utility.yul\":7894:7912   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7887:7917   */\n      mstore\n        /* \"#utility.yul\":7953:7982   */\n      0x57686974656c697374206e6f74206f70656e20746f206d696e742e0000000000\n        /* \"#utility.yul\":7933:7951   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7926:7983   */\n      mstore\n        /* \"#utility.yul\":8000:8018   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":2758:2818  require(isPublicOpen == true, \"Whitelist not open to mint.\") */\n      tag_197\n        /* \"#utility.yul\":7673:8024   */\n      jump\n        /* \"MintNagaKids.sol\":2758:2818  require(isPublicOpen == true, \"Whitelist not open to mint.\") */\n    tag_313:\n        /* \"MintNagaKids.sol\":2837:2846  tx.origin */\n      origin\n        /* \"MintNagaKids.sol\":2850:2860  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":2837:2860  tx.origin == msg.sender */\n      eq\n        /* \"MintNagaKids.sol\":2829:2892  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12477:12479   */\n      0x20\n        /* \"MintNagaKids.sol\":2829:2892  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12459:12480   */\n      mstore\n        /* \"#utility.yul\":12516:12518   */\n      0x1b\n        /* \"#utility.yul\":12496:12514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12489:12519   */\n      mstore\n        /* \"#utility.yul\":12555:12584   */\n      0x6861686120436f6e74726163742063616e27742063616c6c206d650000000000\n        /* \"#utility.yul\":12535:12553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12528:12585   */\n      mstore\n        /* \"#utility.yul\":12602:12620   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":2829:2892  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n      tag_197\n        /* \"#utility.yul\":12275:12626   */\n      jump\n        /* \"MintNagaKids.sol\":2829:2892  require(tx.origin == msg.sender, \"haha Contract can't call me\") */\n    tag_315:\n        /* \"MintNagaKids.sol\":2926:2936  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":3779:3783  bool */\n      0x00\n        /* \"MintNagaKids.sol\":3803:3825  _isPublicMinted[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3803:3818  _isPublicMinted */\n      0x07\n        /* \"MintNagaKids.sol\":3803:3825  _isPublicMinted[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MintNagaKids.sol\":2911:2945  isPublicMinted(msg.sender) != true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":2941:2945  true */\n      0x01\n        /* \"MintNagaKids.sol\":2911:2945  isPublicMinted(msg.sender) != true */\n      sub\n        /* \"MintNagaKids.sol\":2903:2973  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"MintNagaKids.sol\":2903:2973  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8818:8839   */\n      mstore\n        /* \"#utility.yul\":8875:8877   */\n      0x17\n        /* \"#utility.yul\":8855:8873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8848:8878   */\n      mstore\n      shl(0x49, 0x2cb7ba9030b9329030b63932b0b23c9036b4b73a32b217)\n        /* \"#utility.yul\":8894:8912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8887:8940   */\n      mstore\n        /* \"#utility.yul\":8957:8975   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":2903:2973  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n      tag_197\n        /* \"#utility.yul\":8634:8981   */\n      jump\n        /* \"MintNagaKids.sol\":2903:2973  require(isPublicMinted(msg.sender) != true, \"You are already minted.\") */\n    tag_319:\n        /* \"MintNagaKids.sol\":3015:3019  1111 */\n      0x0457\n        /* \"MintNagaKids.sol\":2992:3008  getTotalSupply() */\n      tag_321\n        /* \"MintNagaKids.sol\":2992:3006  getTotalSupply */\n      tag_157\n        /* \"MintNagaKids.sol\":2992:3008  getTotalSupply() */\n      jump\t// in\n    tag_321:\n        /* \"MintNagaKids.sol\":2992:3012  getTotalSupply() + 1 */\n      tag_322\n      swap1\n        /* \"MintNagaKids.sol\":3011:3012  1 */\n      0x01\n        /* \"MintNagaKids.sol\":2992:3012  getTotalSupply() + 1 */\n      tag_210\n      jump\t// in\n    tag_322:\n        /* \"MintNagaKids.sol\":2992:3019  getTotalSupply() + 1 < 1111 */\n      lt\n        /* \"MintNagaKids.sol\":2984:3041  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12833:12835   */\n      0x20\n        /* \"MintNagaKids.sol\":2984:3041  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12815:12836   */\n      mstore\n        /* \"#utility.yul\":12872:12874   */\n      0x12\n        /* \"#utility.yul\":12852:12870   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12845:12875   */\n      mstore\n      shl(0x72, 0x13dd995c8814dd5c1c1b1e48105b5bdd5b9d)\n        /* \"#utility.yul\":12891:12909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12884:12932   */\n      mstore\n        /* \"#utility.yul\":12949:12967   */\n      0x64\n      add\n        /* \"MintNagaKids.sol\":2984:3041  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n      tag_197\n        /* \"#utility.yul\":12631:12973   */\n      jump\n        /* \"MintNagaKids.sol\":2984:3041  require(getTotalSupply() + 1 < 1111,\"Over Supply Amount\") */\n    tag_323:\n        /* \"MintNagaKids.sol\":3060:3076  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":3085:3115  nagaKidsContract.MINTER_ROLE() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd5391393)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3060:3076  nagaKidsContract */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"MintNagaKids.sol\":3060:3084  nagaKidsContract.hasRole */\n      0x91d14854\n      swap2\n        /* \"MintNagaKids.sol\":3060:3076  nagaKidsContract */\n      dup4\n      swap2\n        /* \"MintNagaKids.sol\":3085:3113  nagaKidsContract.MINTER_ROLE */\n      0xd5391393\n      swap2\n        /* \"MintNagaKids.sol\":3085:3115  nagaKidsContract.MINTER_ROLE() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKids.sol\":3060:3076  nagaKidsContract */\n      dup7\n        /* \"MintNagaKids.sol\":3085:3115  nagaKidsContract.MINTER_ROLE() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_327:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_328\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_328:\n        /* \"MintNagaKids.sol\":3060:3130  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":9349:9374   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"MintNagaKids.sol\":3124:3128  this */\n      address\n        /* \"#utility.yul\":9390:9408   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9383:9443   */\n      mstore\n        /* \"#utility.yul\":9322:9340   */\n      0x44\n      add\n        /* \"MintNagaKids.sol\":3060:3130  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_331:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_332\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"MintNagaKids.sol\":3060:3138  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true */\n      iszero\n      iszero\n        /* \"MintNagaKids.sol\":3134:3138  true */\n      0x01\n        /* \"MintNagaKids.sol\":3060:3138  nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true */\n      eq\n        /* \"MintNagaKids.sol\":3052:3184  require(nagaKidsContract.hasRole(nagaKidsContract.MINTER_ROLE(),address(this)) == true,\"This Contract not have permission to mint.\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_230\n      jump\t// in\n    tag_333:\n        /* \"MintNagaKids.sol\":3210:3216  signer */\n      sload(0x04)\n        /* \"MintNagaKids.sol\":3203:3233  verify(signer,msg.sender,_sig) */\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      dup6\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup4\n      dup2\n      mstore\n      tag_335\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3210:3216  signer */\n      and\n      swap2\n        /* \"MintNagaKids.sol\":3217:3227  msg.sender */\n      caller\n      swap2\n        /* \"MintNagaKids.sol\":3203:3233  verify(signer,msg.sender,_sig) */\n      swap1\n        /* \"MintNagaKids.sol\":3228:3232  _sig */\n      dup7\n      swap1\n      dup7\n      swap1\n      dup2\n      swap1\n        /* \"MintNagaKids.sol\":3203:3233  verify(signer,msg.sender,_sig) */\n      dup5\n      add\n        /* \"MintNagaKids.sol\":3228:3232  _sig */\n      dup4\n      dup3\n      dup1\n      dup3\n        /* \"MintNagaKids.sol\":3203:3233  verify(signer,msg.sender,_sig) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"MintNagaKids.sol\":3203:3209  verify */\n      tag_105\n      swap3\n      pop\n      pop\n      pop\n        /* \"MintNagaKids.sol\":3203:3233  verify(signer,msg.sender,_sig) */\n      jump\t// in\n    tag_335:\n        /* \"MintNagaKids.sol\":3195:3272  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13180:13182   */\n      0x20\n        /* \"MintNagaKids.sol\":3195:3272  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13162:13183   */\n      mstore\n        /* \"#utility.yul\":13219:13221   */\n      0x22\n        /* \"#utility.yul\":13199:13217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13192:13222   */\n      mstore\n        /* \"#utility.yul\":13258:13292   */\n      0x556e617574686f72697a6564205075626c69634d696e74205468697320557365\n        /* \"#utility.yul\":13238:13256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13231:13293   */\n      mstore\n      shl(0xf1, 0x3917)\n        /* \"#utility.yul\":13309:13327   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13302:13334   */\n      mstore\n        /* \"#utility.yul\":13351:13370   */\n      0x84\n      add\n        /* \"MintNagaKids.sol\":3195:3272  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n      tag_197\n        /* \"#utility.yul\":12978:13376   */\n      jump\n        /* \"MintNagaKids.sol\":3195:3272  require(verify(signer,msg.sender,_sig), \"Unauthorized PublicMint This User.\") */\n    tag_336:\n        /* \"MintNagaKids.sol\":3301:3311  msg.sender */\n      caller\n        /* \"MintNagaKids.sol\":3285:3312  _isPublicMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3285:3300  _isPublicMinted */\n      0x07\n        /* \"MintNagaKids.sol\":3285:3312  _isPublicMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"MintNagaKids.sol\":3285:3319  _isPublicMinted[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"MintNagaKids.sol\":3315:3319  true */\n      0x01\n        /* \"MintNagaKids.sol\":3285:3319  _isPublicMinted[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":3330:3346  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":3330:3367  nagaKidsContract.safeMint(msg.sender) */\n      swap1\n      mload\n      shl(0xe0, 0x40d097c3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1395:1446   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":3330:3346  nagaKidsContract */\n      and\n      swap1\n        /* \"MintNagaKids.sol\":3330:3355  nagaKidsContract.safeMint */\n      0x40d097c3\n      swap1\n        /* \"#utility.yul\":1368:1386   */\n      0x24\n      add\n        /* \"MintNagaKids.sol\":3330:3367  nagaKidsContract.safeMint(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n        /* \"MintNagaKids.sol\":3395:3435  PublicMinted(msg.sender,block.timestamp) */\n      mload(0x40)\n        /* \"MintNagaKids.sol\":3419:3434  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1031:1056   */\n      dup2\n      mstore\n        /* \"MintNagaKids.sol\":3408:3418  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"MintNagaKids.sol\":3395:3435  PublicMinted(msg.sender,block.timestamp) */\n      0xab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b\n      swap2\n      pop\n        /* \"#utility.yul\":1019:1021   */\n      0x20\n        /* \"#utility.yul\":1004:1022   */\n      add\n        /* \"MintNagaKids.sol\":3395:3435  PublicMinted(msg.sender,block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n        /* \"MintNagaKids.sol\":2669:3443  function publicMint(bytes calldata _sig) public payable nonReentrant Paused {... */\n      jump\t// out\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_175:\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":13623:13689   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":13611:13690   */\n      mstore\n        /* \"#utility.yul\":13706:13718   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":13699:13727   */\n      dup3\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":13743:13755   */\n      0x5c\n      add\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_192\n        /* \"#utility.yul\":13381:13761   */\n      jump\n        /* \"MintNagaKids.sol\":1396:1520  function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_349\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_349:\n      pop\n        /* \"MintNagaKids.sol\":1487:1502  isWhitelistOpen */\n      0x03\n        /* \"MintNagaKids.sol\":1487:1512  isWhitelistOpen = _isOpen */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MintNagaKids.sol\":1396:1520  function setWhitelistMintOpen(bool _isOpen) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"MintNagaKids.sol\":4077:4174  function isPause() public view returns (bool) {... */\n    tag_183:\n        /* \"MintNagaKids.sol\":4141:4157  nagaKidsContract */\n      sload(0x03)\n        /* \"MintNagaKids.sol\":4141:4166  nagaKidsContract.paused() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x5c975abb)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"MintNagaKids.sol\":4117:4121  bool */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MintNagaKids.sol\":4141:4157  nagaKidsContract */\n      and\n      swap2\n        /* \"MintNagaKids.sol\":4141:4164  nagaKidsContract.paused */\n      0x5c975abb\n      swap2\n        /* \"MintNagaKids.sol\":4141:4166  nagaKidsContract.paused() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MintNagaKids.sol\":4141:4157  nagaKidsContract */\n      dup7\n        /* \"MintNagaKids.sol\":4141:4166  nagaKidsContract.paused() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_353:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_358\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_210\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_360\n      jumpi\n      tag_360\n      tag_361\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_362:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_367\n      jumpi\n      tag_367\n      tag_365\n      jump\t// in\n    tag_367:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_371\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_357\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_372\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_210\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_369\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1884  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_365\n      jump\t// in\n    tag_374:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_376\n      tag_365\n      jump\t// in\n    tag_376:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1835:1838  --i */\n      tag_377\n      dup2\n      tag_378\n      jump\t// in\n    tag_377:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_368)\n    tag_369:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14414:14416   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14396:14417   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14433:14451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14426:14456   */\n      mstore\n        /* \"#utility.yul\":14492:14526   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":14472:14490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14465:14527   */\n      mstore\n        /* \"#utility.yul\":14544:14562   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_197\n        /* \"#utility.yul\":14212:14568   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2015:2021  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Whitelist.sol\":195:598  function isWhitelist(... */\n    tag_232:\n        /* \"Whitelist.sol\":332:336  bool */\n      0x00\n        /* \"Whitelist.sol\":353:363  merkleRoot */\n      dup1\n      sload\n        /* \"Whitelist.sol\":353:368  merkleRoot == 0 */\n      dup2\n      sub\n        /* \"Whitelist.sol\":349:409  if (merkleRoot == 0) {... */\n      tag_384\n      jumpi\n      pop\n        /* \"Whitelist.sol\":392:397  false */\n      0x00\n        /* \"Whitelist.sol\":385:397  return false */\n      jump(tag_383)\n        /* \"Whitelist.sol\":349:409  if (merkleRoot == 0) {... */\n    tag_384:\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      tag_385\n        /* \"Whitelist.sol\":478:484  _proof */\n      dup6\n      dup6\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      dup3\n      swap1\n      mstore\n      pop\n        /* \"Whitelist.sol\":503:513  merkleRoot */\n      sload\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":14750:14752   */\n      0x60\n        /* \"#utility.yul\":14746:14761   */\n      dup12\n      swap1\n      shl\n        /* \"#utility.yul\":14742:14795   */\n      and\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":14730:14796   */\n      mstore\n        /* \"#utility.yul\":14812:14824   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":14805:14833   */\n      dup10\n      swap1\n      mstore\n        /* \"Whitelist.sol\":503:513  merkleRoot */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":14849:14861   */\n      0x54\n      add\n      swap2\n      pop\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n      tag_386\n      swap1\n      pop\n        /* \"#utility.yul\":14573:14867   */\n      jump\n        /* \"Whitelist.sol\":542:574  abi.encodePacked(_user, _amount) */\n    tag_386:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Whitelist.sol\":532:575  keccak256(abi.encodePacked(_user, _amount)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Whitelist.sol\":441:459  MerkleProof.verify */\n      tag_388\n        /* \"Whitelist.sol\":441:590  MerkleProof.verify(... */\n      jump\t// in\n    tag_385:\n        /* \"Whitelist.sol\":421:590  return... */\n      swap1\n      pop\n        /* \"Whitelist.sol\":195:598  function isWhitelist(... */\n    tag_383:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_390\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_392\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_394\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n      swap3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_399\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7729  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7755:7760  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1275:1279  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1327:1331  root */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      tag_403\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1311:1316  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1318:1322  leaf */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1310  processProof */\n      tag_404\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1323  processProof(proof, leaf) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1298:1331  processProof(proof, leaf) == root */\n      eq\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1154:1338  function verify(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_406\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_408\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_409\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_410\n      swap3\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_197\n      swap2\n      0x04\n      add\n      tag_413\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1814:1818  leaf */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1772:1779  bytes32 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1857  proof */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1852:1864  proof.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1849  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1848:1864  i < proof.length */\n      lt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      iszero\n      tag_416\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1905  bytes32 proofElement */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1913  proof */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1914:1915  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1908:1916  proof[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_419\n      jumpi\n      tag_419\n      tag_365\n      jump\t// in\n    tag_419:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1885:1916  bytes32 proofElement = proof[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1950:1962  proofElement */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1946  computedHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1934:1962  computedHash <= proofElement */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2060:2117  computedHash = _efficientHash(computedHash, proofElement) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n      jump(tag_423)\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2425:2438  bytes32 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2473:2488  mstore(0x00, a) */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2508:2512  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2501:2516  mstore(0x20, b) */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2554:2558  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2538:2559  keccak256(0x00, 0x40) */\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2234:2291  computedHash = _efficientHash(proofElement, computedHash) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1930:2306  if (computedHash <= proofElement) {... */\n    tag_423:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1866:1869  i++ */\n      dup1\n      tag_425\n      dup2\n      tag_245\n      jump\t// in\n    tag_425:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1828:2316  for (uint256 i = 0; i < proof.length; i++) {... */\n      jump(tag_415)\n    tag_416:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":2332:2344  computedHash */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":1689:2351  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_42:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_434:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:628   */\n    tag_427:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":572:603   */\n      dup2\n      and\n        /* \"#utility.yul\":562:604   */\n      dup2\n      eq\n        /* \"#utility.yul\":552:622   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":618:619   */\n      0x00\n        /* \"#utility.yul\":615:616   */\n      dup1\n        /* \"#utility.yul\":608:620   */\n      revert\n        /* \"#utility.yul\":633:880   */\n    tag_53:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":745:747   */\n      0x20\n        /* \"#utility.yul\":733:742   */\n      dup3\n        /* \"#utility.yul\":724:731   */\n      dup5\n        /* \"#utility.yul\":720:743   */\n      sub\n        /* \"#utility.yul\":716:748   */\n      slt\n        /* \"#utility.yul\":713:765   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":758:759   */\n      dup1\n        /* \"#utility.yul\":751:763   */\n      revert\n        /* \"#utility.yul\":713:765   */\n    tag_440:\n        /* \"#utility.yul\":800:809   */\n      dup2\n        /* \"#utility.yul\":787:810   */\n      calldataload\n        /* \"#utility.yul\":819:850   */\n      tag_379\n        /* \"#utility.yul\":844:849   */\n      dup2\n        /* \"#utility.yul\":819:850   */\n      tag_427\n      jump\t// in\n        /* \"#utility.yul\":1457:1637   */\n    tag_71:\n        /* \"#utility.yul\":1516:1522   */\n      0x00\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1557:1566   */\n      dup3\n        /* \"#utility.yul\":1548:1555   */\n      dup5\n        /* \"#utility.yul\":1544:1567   */\n      sub\n        /* \"#utility.yul\":1540:1572   */\n      slt\n        /* \"#utility.yul\":1537:1589   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1582:1583   */\n      dup1\n        /* \"#utility.yul\":1575:1587   */\n      revert\n        /* \"#utility.yul\":1537:1589   */\n    tag_446:\n      pop\n        /* \"#utility.yul\":1608:1631   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1457:1637   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1870:2559   */\n    tag_81:\n        /* \"#utility.yul\":1965:1971   */\n      0x00\n        /* \"#utility.yul\":1973:1979   */\n      dup1\n        /* \"#utility.yul\":1981:1987   */\n      0x00\n        /* \"#utility.yul\":2034:2036   */\n      0x40\n        /* \"#utility.yul\":2022:2031   */\n      dup5\n        /* \"#utility.yul\":2013:2020   */\n      dup7\n        /* \"#utility.yul\":2009:2032   */\n      sub\n        /* \"#utility.yul\":2005:2037   */\n      slt\n        /* \"#utility.yul\":2002:2054   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2050:2051   */\n      0x00\n        /* \"#utility.yul\":2047:2048   */\n      dup1\n        /* \"#utility.yul\":2040:2052   */\n      revert\n        /* \"#utility.yul\":2002:2054   */\n    tag_449:\n        /* \"#utility.yul\":2090:2099   */\n      dup4\n        /* \"#utility.yul\":2077:2100   */\n      calldataload\n        /* \"#utility.yul\":2119:2137   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2160:2162   */\n      dup1\n        /* \"#utility.yul\":2152:2158   */\n      dup3\n        /* \"#utility.yul\":2149:2163   */\n      gt\n        /* \"#utility.yul\":2146:2180   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2173:2174   */\n      dup1\n        /* \"#utility.yul\":2166:2178   */\n      revert\n        /* \"#utility.yul\":2146:2180   */\n    tag_450:\n        /* \"#utility.yul\":2214:2220   */\n      dup2\n        /* \"#utility.yul\":2203:2212   */\n      dup7\n        /* \"#utility.yul\":2199:2221   */\n      add\n        /* \"#utility.yul\":2189:2221   */\n      swap2\n      pop\n        /* \"#utility.yul\":2259:2266   */\n      dup7\n        /* \"#utility.yul\":2252:2256   */\n      0x1f\n        /* \"#utility.yul\":2248:2250   */\n      dup4\n        /* \"#utility.yul\":2244:2257   */\n      add\n        /* \"#utility.yul\":2240:2267   */\n      slt\n        /* \"#utility.yul\":2230:2285   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2281:2282   */\n      0x00\n        /* \"#utility.yul\":2278:2279   */\n      dup1\n        /* \"#utility.yul\":2271:2283   */\n      revert\n        /* \"#utility.yul\":2230:2285   */\n    tag_451:\n        /* \"#utility.yul\":2321:2323   */\n      dup2\n        /* \"#utility.yul\":2308:2324   */\n      calldataload\n        /* \"#utility.yul\":2347:2349   */\n      dup2\n        /* \"#utility.yul\":2339:2345   */\n      dup2\n        /* \"#utility.yul\":2336:2350   */\n      gt\n        /* \"#utility.yul\":2333:2367   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":2363:2364   */\n      0x00\n        /* \"#utility.yul\":2360:2361   */\n      dup1\n        /* \"#utility.yul\":2353:2365   */\n      revert\n        /* \"#utility.yul\":2333:2367   */\n    tag_452:\n        /* \"#utility.yul\":2418:2425   */\n      dup8\n        /* \"#utility.yul\":2411:2415   */\n      0x20\n        /* \"#utility.yul\":2401:2407   */\n      dup3\n        /* \"#utility.yul\":2398:2399   */\n      0x05\n        /* \"#utility.yul\":2394:2408   */\n      shl\n        /* \"#utility.yul\":2390:2392   */\n      dup6\n        /* \"#utility.yul\":2386:2409   */\n      add\n        /* \"#utility.yul\":2382:2416   */\n      add\n        /* \"#utility.yul\":2379:2426   */\n      gt\n        /* \"#utility.yul\":2376:2443   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":2439:2440   */\n      0x00\n        /* \"#utility.yul\":2436:2437   */\n      dup1\n        /* \"#utility.yul\":2429:2441   */\n      revert\n        /* \"#utility.yul\":2376:2443   */\n    tag_453:\n        /* \"#utility.yul\":2470:2474   */\n      0x20\n        /* \"#utility.yul\":2462:2475   */\n      swap3\n      dup4\n      add\n      swap9\n        /* \"#utility.yul\":2494:2500   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":2532:2552   */\n      swap6\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2519:2553   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":1870:2559   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:3151   */\n    tag_95:\n        /* \"#utility.yul\":2904:2910   */\n      0x00\n        /* \"#utility.yul\":2912:2918   */\n      dup1\n        /* \"#utility.yul\":2965:2967   */\n      0x40\n        /* \"#utility.yul\":2953:2962   */\n      dup4\n        /* \"#utility.yul\":2944:2951   */\n      dup6\n        /* \"#utility.yul\":2940:2963   */\n      sub\n        /* \"#utility.yul\":2936:2968   */\n      slt\n        /* \"#utility.yul\":2933:2985   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2981:2982   */\n      0x00\n        /* \"#utility.yul\":2978:2979   */\n      dup1\n        /* \"#utility.yul\":2971:2983   */\n      revert\n        /* \"#utility.yul\":2933:2985   */\n    tag_458:\n        /* \"#utility.yul\":3017:3026   */\n      dup3\n        /* \"#utility.yul\":3004:3027   */\n      calldataload\n        /* \"#utility.yul\":2994:3027   */\n      swap2\n      pop\n        /* \"#utility.yul\":3077:3079   */\n      0x20\n        /* \"#utility.yul\":3066:3075   */\n      dup4\n        /* \"#utility.yul\":3062:3080   */\n      add\n        /* \"#utility.yul\":3049:3081   */\n      calldataload\n        /* \"#utility.yul\":3090:3121   */\n      tag_459\n        /* \"#utility.yul\":3115:3120   */\n      dup2\n        /* \"#utility.yul\":3090:3121   */\n      tag_427\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3140:3145   */\n      dup1\n        /* \"#utility.yul\":3130:3145   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2836:3151   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3156:3283   */\n    tag_361:\n        /* \"#utility.yul\":3217:3227   */\n      0x4e487b71\n        /* \"#utility.yul\":3212:3215   */\n      0xe0\n        /* \"#utility.yul\":3208:3228   */\n      shl\n        /* \"#utility.yul\":3205:3206   */\n      0x00\n        /* \"#utility.yul\":3198:3229   */\n      mstore\n        /* \"#utility.yul\":3248:3252   */\n      0x41\n        /* \"#utility.yul\":3245:3246   */\n      0x04\n        /* \"#utility.yul\":3238:3253   */\n      mstore\n        /* \"#utility.yul\":3272:3276   */\n      0x24\n        /* \"#utility.yul\":3269:3270   */\n      0x00\n        /* \"#utility.yul\":3262:3277   */\n      revert\n        /* \"#utility.yul\":3288:4006   */\n    tag_428:\n        /* \"#utility.yul\":3330:3335   */\n      0x00\n        /* \"#utility.yul\":3383:3386   */\n      dup3\n        /* \"#utility.yul\":3376:3380   */\n      0x1f\n        /* \"#utility.yul\":3368:3374   */\n      dup4\n        /* \"#utility.yul\":3364:3381   */\n      add\n        /* \"#utility.yul\":3360:3387   */\n      slt\n        /* \"#utility.yul\":3350:3405   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":3401:3402   */\n      0x00\n        /* \"#utility.yul\":3398:3399   */\n      dup1\n        /* \"#utility.yul\":3391:3403   */\n      revert\n        /* \"#utility.yul\":3350:3405   */\n    tag_462:\n        /* \"#utility.yul\":3437:3443   */\n      dup2\n        /* \"#utility.yul\":3424:3444   */\n      calldataload\n        /* \"#utility.yul\":3463:3481   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3500:3502   */\n      dup1\n        /* \"#utility.yul\":3496:3498   */\n      dup3\n        /* \"#utility.yul\":3493:3503   */\n      gt\n        /* \"#utility.yul\":3490:3526   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3506:3524   */\n      tag_464\n      tag_361\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3581:3583   */\n      0x40\n        /* \"#utility.yul\":3575:3584   */\n      mload\n        /* \"#utility.yul\":3549:3551   */\n      0x1f\n        /* \"#utility.yul\":3635:3648   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3631:3653   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3655:3657   */\n      0x3f\n        /* \"#utility.yul\":3627:3658   */\n      add\n        /* \"#utility.yul\":3623:3663   */\n      and\n        /* \"#utility.yul\":3611:3664   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3679:3697   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3699:3721   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3676:3722   */\n      or\n        /* \"#utility.yul\":3673:3745   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":3725:3743   */\n      tag_466\n      tag_361\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3765:3775   */\n      dup2\n        /* \"#utility.yul\":3761:3763   */\n      0x40\n        /* \"#utility.yul\":3754:3776   */\n      mstore\n        /* \"#utility.yul\":3800:3802   */\n      dup4\n        /* \"#utility.yul\":3792:3798   */\n      dup2\n        /* \"#utility.yul\":3785:3803   */\n      mstore\n        /* \"#utility.yul\":3846:3849   */\n      dup7\n        /* \"#utility.yul\":3839:3843   */\n      0x20\n        /* \"#utility.yul\":3834:3836   */\n      dup6\n        /* \"#utility.yul\":3826:3832   */\n      dup9\n        /* \"#utility.yul\":3822:3837   */\n      add\n        /* \"#utility.yul\":3818:3844   */\n      add\n        /* \"#utility.yul\":3815:3850   */\n      gt\n        /* \"#utility.yul\":3812:3867   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3863:3864   */\n      0x00\n        /* \"#utility.yul\":3860:3861   */\n      dup1\n        /* \"#utility.yul\":3853:3865   */\n      revert\n        /* \"#utility.yul\":3812:3867   */\n    tag_467:\n        /* \"#utility.yul\":3927:3929   */\n      dup4\n        /* \"#utility.yul\":3920:3924   */\n      0x20\n        /* \"#utility.yul\":3912:3918   */\n      dup8\n        /* \"#utility.yul\":3908:3925   */\n      add\n        /* \"#utility.yul\":3901:3905   */\n      0x20\n        /* \"#utility.yul\":3893:3899   */\n      dup4\n        /* \"#utility.yul\":3889:3906   */\n      add\n        /* \"#utility.yul\":3876:3930   */\n      calldatacopy\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3967:3971   */\n      0x20\n        /* \"#utility.yul\":3962:3964   */\n      dup6\n        /* \"#utility.yul\":3954:3960   */\n      dup4\n        /* \"#utility.yul\":3950:3965   */\n      add\n        /* \"#utility.yul\":3946:3972   */\n      add\n        /* \"#utility.yul\":3939:3976   */\n      mstore\n        /* \"#utility.yul\":3994:4000   */\n      dup1\n        /* \"#utility.yul\":3985:4000   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3288:4006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4607   */\n    tag_104:\n        /* \"#utility.yul\":4097:4103   */\n      0x00\n        /* \"#utility.yul\":4105:4111   */\n      dup1\n        /* \"#utility.yul\":4113:4119   */\n      0x00\n        /* \"#utility.yul\":4166:4168   */\n      0x60\n        /* \"#utility.yul\":4154:4163   */\n      dup5\n        /* \"#utility.yul\":4145:4152   */\n      dup7\n        /* \"#utility.yul\":4141:4164   */\n      sub\n        /* \"#utility.yul\":4137:4169   */\n      slt\n        /* \"#utility.yul\":4134:4186   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":4182:4183   */\n      0x00\n        /* \"#utility.yul\":4179:4180   */\n      dup1\n        /* \"#utility.yul\":4172:4184   */\n      revert\n        /* \"#utility.yul\":4134:4186   */\n    tag_469:\n        /* \"#utility.yul\":4221:4230   */\n      dup4\n        /* \"#utility.yul\":4208:4231   */\n      calldataload\n        /* \"#utility.yul\":4240:4271   */\n      tag_470\n        /* \"#utility.yul\":4265:4270   */\n      dup2\n        /* \"#utility.yul\":4240:4271   */\n      tag_427\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4290:4295   */\n      swap3\n      pop\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4332:4350   */\n      dup5\n      add\n        /* \"#utility.yul\":4319:4351   */\n      calldataload\n        /* \"#utility.yul\":4360:4393   */\n      tag_471\n        /* \"#utility.yul\":4319:4351   */\n      dup2\n        /* \"#utility.yul\":4360:4393   */\n      tag_427\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4412:4419   */\n      swap2\n      pop\n        /* \"#utility.yul\":4470:4472   */\n      0x40\n        /* \"#utility.yul\":4455:4473   */\n      dup5\n      add\n        /* \"#utility.yul\":4442:4474   */\n      calldataload\n        /* \"#utility.yul\":4497:4515   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4486:4516   */\n      dup2\n      gt\n        /* \"#utility.yul\":4483:4533   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4529:4530   */\n      0x00\n        /* \"#utility.yul\":4526:4527   */\n      dup1\n        /* \"#utility.yul\":4519:4531   */\n      revert\n        /* \"#utility.yul\":4483:4533   */\n    tag_472:\n        /* \"#utility.yul\":4552:4601   */\n      tag_473\n        /* \"#utility.yul\":4593:4600   */\n      dup7\n        /* \"#utility.yul\":4584:4590   */\n      dup3\n        /* \"#utility.yul\":4573:4582   */\n      dup8\n        /* \"#utility.yul\":4569:4591   */\n      add\n        /* \"#utility.yul\":4552:4601   */\n      tag_428\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4542:4601   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4011:4607   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4612:4730   */\n    tag_429:\n        /* \"#utility.yul\":4698:4703   */\n      dup1\n        /* \"#utility.yul\":4691:4704   */\n      iszero\n        /* \"#utility.yul\":4684:4705   */\n      iszero\n        /* \"#utility.yul\":4677:4682   */\n      dup2\n        /* \"#utility.yul\":4674:4706   */\n      eq\n        /* \"#utility.yul\":4664:4724   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":4720:4721   */\n      0x00\n        /* \"#utility.yul\":4717:4718   */\n      dup1\n        /* \"#utility.yul\":4710:4722   */\n      revert\n        /* \"#utility.yul\":4735:4976   */\n    tag_127:\n        /* \"#utility.yul\":4791:4797   */\n      0x00\n        /* \"#utility.yul\":4844:4846   */\n      0x20\n        /* \"#utility.yul\":4832:4841   */\n      dup3\n        /* \"#utility.yul\":4823:4830   */\n      dup5\n        /* \"#utility.yul\":4819:4842   */\n      sub\n        /* \"#utility.yul\":4815:4847   */\n      slt\n        /* \"#utility.yul\":4812:4864   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":4860:4861   */\n      0x00\n        /* \"#utility.yul\":4857:4858   */\n      dup1\n        /* \"#utility.yul\":4850:4862   */\n      revert\n        /* \"#utility.yul\":4812:4864   */\n    tag_477:\n        /* \"#utility.yul\":4899:4908   */\n      dup2\n        /* \"#utility.yul\":4886:4909   */\n      calldataload\n        /* \"#utility.yul\":4918:4946   */\n      tag_379\n        /* \"#utility.yul\":4940:4945   */\n      dup2\n        /* \"#utility.yul\":4918:4946   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":4981:5369   */\n    tag_141:\n        /* \"#utility.yul\":5058:5064   */\n      0x00\n        /* \"#utility.yul\":5066:5072   */\n      dup1\n        /* \"#utility.yul\":5119:5121   */\n      0x40\n        /* \"#utility.yul\":5107:5116   */\n      dup4\n        /* \"#utility.yul\":5098:5105   */\n      dup6\n        /* \"#utility.yul\":5094:5117   */\n      sub\n        /* \"#utility.yul\":5090:5122   */\n      slt\n        /* \"#utility.yul\":5087:5139   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5132:5133   */\n      dup1\n        /* \"#utility.yul\":5125:5137   */\n      revert\n        /* \"#utility.yul\":5087:5139   */\n    tag_480:\n        /* \"#utility.yul\":5171:5180   */\n      dup3\n        /* \"#utility.yul\":5158:5181   */\n      calldataload\n        /* \"#utility.yul\":5148:5181   */\n      swap2\n      pop\n        /* \"#utility.yul\":5232:5234   */\n      0x20\n        /* \"#utility.yul\":5221:5230   */\n      dup4\n        /* \"#utility.yul\":5217:5235   */\n      add\n        /* \"#utility.yul\":5204:5236   */\n      calldataload\n        /* \"#utility.yul\":5259:5277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5251:5257   */\n      dup2\n        /* \"#utility.yul\":5248:5278   */\n      gt\n        /* \"#utility.yul\":5245:5295   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":5291:5292   */\n      0x00\n        /* \"#utility.yul\":5288:5289   */\n      dup1\n        /* \"#utility.yul\":5281:5293   */\n      revert\n        /* \"#utility.yul\":5245:5295   */\n    tag_481:\n        /* \"#utility.yul\":5314:5363   */\n      tag_482\n        /* \"#utility.yul\":5355:5362   */\n      dup6\n        /* \"#utility.yul\":5346:5352   */\n      dup3\n        /* \"#utility.yul\":5335:5344   */\n      dup7\n        /* \"#utility.yul\":5331:5353   */\n      add\n        /* \"#utility.yul\":5314:5363   */\n      tag_428\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5304:5363   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4981:5369   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5374:5694   */\n    tag_151:\n        /* \"#utility.yul\":5442:5448   */\n      0x00\n        /* \"#utility.yul\":5495:5497   */\n      0x20\n        /* \"#utility.yul\":5483:5492   */\n      dup3\n        /* \"#utility.yul\":5474:5481   */\n      dup5\n        /* \"#utility.yul\":5470:5493   */\n      sub\n        /* \"#utility.yul\":5466:5498   */\n      slt\n        /* \"#utility.yul\":5463:5515   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":5511:5512   */\n      0x00\n        /* \"#utility.yul\":5508:5509   */\n      dup1\n        /* \"#utility.yul\":5501:5513   */\n      revert\n        /* \"#utility.yul\":5463:5515   */\n    tag_484:\n        /* \"#utility.yul\":5551:5560   */\n      dup2\n        /* \"#utility.yul\":5538:5561   */\n      calldataload\n        /* \"#utility.yul\":5584:5602   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5576:5582   */\n      dup2\n        /* \"#utility.yul\":5573:5603   */\n      gt\n        /* \"#utility.yul\":5570:5620   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":5616:5617   */\n      0x00\n        /* \"#utility.yul\":5613:5614   */\n      dup1\n        /* \"#utility.yul\":5606:5618   */\n      revert\n        /* \"#utility.yul\":5570:5620   */\n    tag_485:\n        /* \"#utility.yul\":5639:5688   */\n      tag_383\n        /* \"#utility.yul\":5680:5687   */\n      dup5\n        /* \"#utility.yul\":5671:5677   */\n      dup3\n        /* \"#utility.yul\":5660:5669   */\n      dup6\n        /* \"#utility.yul\":5656:5678   */\n      add\n        /* \"#utility.yul\":5639:5688   */\n      tag_428\n      jump\t// in\n        /* \"#utility.yul\":6030:6621   */\n    tag_165:\n        /* \"#utility.yul\":6100:6106   */\n      0x00\n        /* \"#utility.yul\":6108:6114   */\n      dup1\n        /* \"#utility.yul\":6161:6163   */\n      0x20\n        /* \"#utility.yul\":6149:6158   */\n      dup4\n        /* \"#utility.yul\":6140:6147   */\n      dup6\n        /* \"#utility.yul\":6136:6159   */\n      sub\n        /* \"#utility.yul\":6132:6164   */\n      slt\n        /* \"#utility.yul\":6129:6181   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":6177:6178   */\n      0x00\n        /* \"#utility.yul\":6174:6175   */\n      dup1\n        /* \"#utility.yul\":6167:6179   */\n      revert\n        /* \"#utility.yul\":6129:6181   */\n    tag_489:\n        /* \"#utility.yul\":6217:6226   */\n      dup3\n        /* \"#utility.yul\":6204:6227   */\n      calldataload\n        /* \"#utility.yul\":6246:6264   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6287:6289   */\n      dup1\n        /* \"#utility.yul\":6279:6285   */\n      dup3\n        /* \"#utility.yul\":6276:6290   */\n      gt\n        /* \"#utility.yul\":6273:6307   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6300:6301   */\n      dup1\n        /* \"#utility.yul\":6293:6305   */\n      revert\n        /* \"#utility.yul\":6273:6307   */\n    tag_490:\n        /* \"#utility.yul\":6341:6347   */\n      dup2\n        /* \"#utility.yul\":6330:6339   */\n      dup6\n        /* \"#utility.yul\":6326:6348   */\n      add\n        /* \"#utility.yul\":6316:6348   */\n      swap2\n      pop\n        /* \"#utility.yul\":6386:6393   */\n      dup6\n        /* \"#utility.yul\":6379:6383   */\n      0x1f\n        /* \"#utility.yul\":6375:6377   */\n      dup4\n        /* \"#utility.yul\":6371:6384   */\n      add\n        /* \"#utility.yul\":6367:6394   */\n      slt\n        /* \"#utility.yul\":6357:6412   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":6408:6409   */\n      0x00\n        /* \"#utility.yul\":6405:6406   */\n      dup1\n        /* \"#utility.yul\":6398:6410   */\n      revert\n        /* \"#utility.yul\":6357:6412   */\n    tag_491:\n        /* \"#utility.yul\":6448:6450   */\n      dup2\n        /* \"#utility.yul\":6435:6451   */\n      calldataload\n        /* \"#utility.yul\":6474:6476   */\n      dup2\n        /* \"#utility.yul\":6466:6472   */\n      dup2\n        /* \"#utility.yul\":6463:6477   */\n      gt\n        /* \"#utility.yul\":6460:6494   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":6490:6491   */\n      0x00\n        /* \"#utility.yul\":6487:6488   */\n      dup1\n        /* \"#utility.yul\":6480:6492   */\n      revert\n        /* \"#utility.yul\":6460:6494   */\n    tag_492:\n        /* \"#utility.yul\":6535:6542   */\n      dup7\n        /* \"#utility.yul\":6530:6532   */\n      0x20\n        /* \"#utility.yul\":6521:6527   */\n      dup3\n        /* \"#utility.yul\":6517:6519   */\n      dup6\n        /* \"#utility.yul\":6513:6528   */\n      add\n        /* \"#utility.yul\":6509:6533   */\n      add\n        /* \"#utility.yul\":6506:6543   */\n      gt\n        /* \"#utility.yul\":6503:6560   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":6556:6557   */\n      0x00\n        /* \"#utility.yul\":6553:6554   */\n      dup1\n        /* \"#utility.yul\":6546:6558   */\n      revert\n        /* \"#utility.yul\":6503:6560   */\n    tag_493:\n        /* \"#utility.yul\":6587:6589   */\n      0x20\n        /* \"#utility.yul\":6579:6590   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":6609:6615   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":6030:6621   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8029:8156   */\n    tag_430:\n        /* \"#utility.yul\":8090:8100   */\n      0x4e487b71\n        /* \"#utility.yul\":8085:8088   */\n      0xe0\n        /* \"#utility.yul\":8081:8101   */\n      shl\n        /* \"#utility.yul\":8078:8079   */\n      0x00\n        /* \"#utility.yul\":8071:8102   */\n      mstore\n        /* \"#utility.yul\":8121:8125   */\n      0x11\n        /* \"#utility.yul\":8118:8119   */\n      0x04\n        /* \"#utility.yul\":8111:8126   */\n      mstore\n        /* \"#utility.yul\":8145:8149   */\n      0x24\n        /* \"#utility.yul\":8142:8143   */\n      0x00\n        /* \"#utility.yul\":8135:8150   */\n      revert\n        /* \"#utility.yul\":8161:8289   */\n    tag_210:\n        /* \"#utility.yul\":8201:8204   */\n      0x00\n        /* \"#utility.yul\":8232:8233   */\n      dup3\n        /* \"#utility.yul\":8228:8234   */\n      not\n        /* \"#utility.yul\":8225:8226   */\n      dup3\n        /* \"#utility.yul\":8222:8235   */\n      gt\n        /* \"#utility.yul\":8219:8258   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8238:8256   */\n      tag_501\n      tag_430\n      jump\t// in\n    tag_501:\n      pop\n        /* \"#utility.yul\":8274:8283   */\n      add\n      swap1\n        /* \"#utility.yul\":8161:8289   */\n      jump\t// out\n        /* \"#utility.yul\":8986:9170   */\n    tag_221:\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9109:9111   */\n      0x20\n        /* \"#utility.yul\":9097:9106   */\n      dup3\n        /* \"#utility.yul\":9088:9095   */\n      dup5\n        /* \"#utility.yul\":9084:9107   */\n      sub\n        /* \"#utility.yul\":9080:9112   */\n      slt\n        /* \"#utility.yul\":9077:9129   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":9125:9126   */\n      0x00\n        /* \"#utility.yul\":9122:9123   */\n      dup1\n        /* \"#utility.yul\":9115:9127   */\n      revert\n        /* \"#utility.yul\":9077:9129   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":9148:9164   */\n      mload\n      swap2\n        /* \"#utility.yul\":8986:9170   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9454:9699   */\n    tag_227:\n        /* \"#utility.yul\":9521:9527   */\n      0x00\n        /* \"#utility.yul\":9574:9576   */\n      0x20\n        /* \"#utility.yul\":9562:9571   */\n      dup3\n        /* \"#utility.yul\":9553:9560   */\n      dup5\n        /* \"#utility.yul\":9549:9572   */\n      sub\n        /* \"#utility.yul\":9545:9577   */\n      slt\n        /* \"#utility.yul\":9542:9594   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9587:9588   */\n      dup1\n        /* \"#utility.yul\":9580:9592   */\n      revert\n        /* \"#utility.yul\":9542:9594   */\n    tag_508:\n        /* \"#utility.yul\":9622:9631   */\n      dup2\n        /* \"#utility.yul\":9616:9632   */\n      mload\n        /* \"#utility.yul\":9641:9669   */\n      tag_379\n        /* \"#utility.yul\":9663:9668   */\n      dup2\n        /* \"#utility.yul\":9641:9669   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":9704:10110   */\n    tag_230:\n        /* \"#utility.yul\":9906:9908   */\n      0x20\n        /* \"#utility.yul\":9888:9909   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9945:9947   */\n      0x2a\n        /* \"#utility.yul\":9925:9943   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9918:9948   */\n      mstore\n        /* \"#utility.yul\":9984:10018   */\n      0x5468697320436f6e7472616374206e6f742068617665207065726d697373696f\n        /* \"#utility.yul\":9979:9981   */\n      0x40\n        /* \"#utility.yul\":9964:9982   */\n      dup3\n      add\n        /* \"#utility.yul\":9957:10019   */\n      mstore\n      shl(0xb1, 0x37103a379036b4b73a17)\n        /* \"#utility.yul\":10050:10052   */\n      0x60\n        /* \"#utility.yul\":10035:10053   */\n      dup3\n      add\n        /* \"#utility.yul\":10028:10068   */\n      mstore\n        /* \"#utility.yul\":10100:10103   */\n      0x80\n        /* \"#utility.yul\":10085:10104   */\n      add\n      swap1\n        /* \"#utility.yul\":9704:10110   */\n      jump\t// out\n        /* \"#utility.yul\":10521:10656   */\n    tag_245:\n        /* \"#utility.yul\":10560:10563   */\n      0x00\n        /* \"#utility.yul\":10581:10598   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10578:10621   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":10601:10619   */\n      tag_514\n      tag_430\n      jump\t// in\n    tag_514:\n      pop\n        /* \"#utility.yul\":10648:10649   */\n      0x01\n        /* \"#utility.yul\":10637:10650   */\n      add\n      swap1\n        /* \"#utility.yul\":10521:10656   */\n      jump\t// out\n        /* \"#utility.yul\":13766:13934   */\n    tag_357:\n        /* \"#utility.yul\":13806:13813   */\n      0x00\n        /* \"#utility.yul\":13872:13873   */\n      dup2\n        /* \"#utility.yul\":13868:13869   */\n      0x00\n        /* \"#utility.yul\":13864:13870   */\n      not\n        /* \"#utility.yul\":13860:13874   */\n      div\n        /* \"#utility.yul\":13857:13858   */\n      dup4\n        /* \"#utility.yul\":13854:13875   */\n      gt\n        /* \"#utility.yul\":13849:13850   */\n      dup3\n        /* \"#utility.yul\":13842:13851   */\n      iszero\n        /* \"#utility.yul\":13835:13852   */\n      iszero\n        /* \"#utility.yul\":13831:13876   */\n      and\n        /* \"#utility.yul\":13828:13899   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":13879:13897   */\n      tag_527\n      tag_430\n      jump\t// in\n    tag_527:\n      pop\n        /* \"#utility.yul\":13919:13928   */\n      mul\n      swap1\n        /* \"#utility.yul\":13766:13934   */\n      jump\t// out\n        /* \"#utility.yul\":13939:14066   */\n    tag_365:\n        /* \"#utility.yul\":14000:14010   */\n      0x4e487b71\n        /* \"#utility.yul\":13995:13998   */\n      0xe0\n        /* \"#utility.yul\":13991:14011   */\n      shl\n        /* \"#utility.yul\":13988:13989   */\n      0x00\n        /* \"#utility.yul\":13981:14012   */\n      mstore\n        /* \"#utility.yul\":14031:14035   */\n      0x32\n        /* \"#utility.yul\":14028:14029   */\n      0x04\n        /* \"#utility.yul\":14021:14036   */\n      mstore\n        /* \"#utility.yul\":14055:14059   */\n      0x24\n        /* \"#utility.yul\":14052:14053   */\n      0x00\n        /* \"#utility.yul\":14045:14060   */\n      revert\n        /* \"#utility.yul\":14071:14207   */\n    tag_378:\n        /* \"#utility.yul\":14110:14113   */\n      0x00\n        /* \"#utility.yul\":14138:14143   */\n      dup2\n        /* \"#utility.yul\":14128:14167   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":14147:14165   */\n      tag_531\n      tag_430\n      jump\t// in\n    tag_531:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":14183:14201   */\n      add\n      swap1\n        /* \"#utility.yul\":14071:14207   */\n      jump\t// out\n        /* \"#utility.yul\":14872:15130   */\n    tag_431:\n        /* \"#utility.yul\":14944:14945   */\n      0x00\n        /* \"#utility.yul\":14954:15067   */\n    tag_535:\n        /* \"#utility.yul\":14968:14974   */\n      dup4\n        /* \"#utility.yul\":14965:14966   */\n      dup2\n        /* \"#utility.yul\":14962:14975   */\n      lt\n        /* \"#utility.yul\":14954:15067   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":15044:15055   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15038:15056   */\n      mload\n        /* \"#utility.yul\":15025:15036   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15018:15057   */\n      mstore\n        /* \"#utility.yul\":14990:14992   */\n      0x20\n        /* \"#utility.yul\":14983:14993   */\n      add\n        /* \"#utility.yul\":14954:15067   */\n      jump(tag_535)\n    tag_537:\n        /* \"#utility.yul\":15085:15091   */\n      dup4\n        /* \"#utility.yul\":15082:15083   */\n      dup2\n        /* \"#utility.yul\":15079:15092   */\n      gt\n        /* \"#utility.yul\":15076:15124   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":15120:15121   */\n      0x00\n        /* \"#utility.yul\":15111:15117   */\n      dup5\n        /* \"#utility.yul\":15106:15109   */\n      dup5\n        /* \"#utility.yul\":15102:15118   */\n      add\n        /* \"#utility.yul\":15095:15122   */\n      mstore\n        /* \"#utility.yul\":15076:15124   */\n    tag_538:\n      pop\n        /* \"#utility.yul\":14872:15130   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15135:15921   */\n    tag_411:\n        /* \"#utility.yul\":15546:15571   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":15541:15544   */\n      dup2\n        /* \"#utility.yul\":15534:15572   */\n      mstore\n        /* \"#utility.yul\":15516:15519   */\n      0x00\n        /* \"#utility.yul\":15601:15607   */\n      dup4\n        /* \"#utility.yul\":15595:15608   */\n      mload\n        /* \"#utility.yul\":15617:15679   */\n      tag_540\n        /* \"#utility.yul\":15672:15678   */\n      dup2\n        /* \"#utility.yul\":15667:15669   */\n      0x17\n        /* \"#utility.yul\":15662:15665   */\n      dup6\n        /* \"#utility.yul\":15658:15670   */\n      add\n        /* \"#utility.yul\":15651:15655   */\n      0x20\n        /* \"#utility.yul\":15643:15649   */\n      dup9\n        /* \"#utility.yul\":15639:15656   */\n      add\n        /* \"#utility.yul\":15617:15679   */\n      tag_431\n      jump\t// in\n    tag_540:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":15738:15740   */\n      0x17\n        /* \"#utility.yul\":15698:15714   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":15730:15741   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":15723:15763   */\n      mstore\n        /* \"#utility.yul\":15788:15801   */\n      dup4\n      mload\n        /* \"#utility.yul\":15810:15873   */\n      tag_541\n        /* \"#utility.yul\":15788:15801   */\n      dup2\n        /* \"#utility.yul\":15859:15861   */\n      0x28\n        /* \"#utility.yul\":15851:15862   */\n      dup5\n      add\n        /* \"#utility.yul\":15844:15848   */\n      0x20\n        /* \"#utility.yul\":15832:15849   */\n      dup9\n      add\n        /* \"#utility.yul\":15810:15873   */\n      tag_431\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":15893:15910   */\n      add\n        /* \"#utility.yul\":15912:15914   */\n      0x28\n        /* \"#utility.yul\":15889:15915   */\n      add\n      swap5\n        /* \"#utility.yul\":15135:15921   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15926:16309   */\n    tag_413:\n        /* \"#utility.yul\":16075:16077   */\n      0x20\n        /* \"#utility.yul\":16064:16073   */\n      dup2\n        /* \"#utility.yul\":16057:16078   */\n      mstore\n        /* \"#utility.yul\":16038:16042   */\n      0x00\n        /* \"#utility.yul\":16107:16113   */\n      dup3\n        /* \"#utility.yul\":16101:16114   */\n      mload\n        /* \"#utility.yul\":16150:16156   */\n      dup1\n        /* \"#utility.yul\":16145:16147   */\n      0x20\n        /* \"#utility.yul\":16134:16143   */\n      dup5\n        /* \"#utility.yul\":16130:16148   */\n      add\n        /* \"#utility.yul\":16123:16157   */\n      mstore\n        /* \"#utility.yul\":16166:16232   */\n      tag_543\n        /* \"#utility.yul\":16225:16231   */\n      dup2\n        /* \"#utility.yul\":16220:16222   */\n      0x40\n        /* \"#utility.yul\":16209:16218   */\n      dup6\n        /* \"#utility.yul\":16205:16223   */\n      add\n        /* \"#utility.yul\":16200:16202   */\n      0x20\n        /* \"#utility.yul\":16192:16198   */\n      dup8\n        /* \"#utility.yul\":16188:16203   */\n      add\n        /* \"#utility.yul\":16166:16232   */\n      tag_431\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16293:16295   */\n      0x1f\n        /* \"#utility.yul\":16272:16287   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16268:16297   */\n      and\n        /* \"#utility.yul\":16253:16298   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":16300:16302   */\n      0x40\n        /* \"#utility.yul\":16249:16303   */\n      add\n      swap3\n        /* \"#utility.yul\":15926:16309   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f89fae7d77ba9ce5ab030d50c1817c4d0c75e2b945ab9c9c60cf1df1cc17250d64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 319,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 304,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 100,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": null,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setMerkleRoot_1109": {
									"entryPoint": 285,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidsContract_1057": {
									"entryPoint": 237,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toHexString_772": {
									"entryPoint": 485,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKidsNFT_$958t_bytes32_fromMemory": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3033:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "132:253:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "178:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "187:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "190:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "180:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "180:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "153:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "162:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "149:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "149:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "174:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "145:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:32:13"
															},
															"nodeType": "YulIf",
															"src": "142:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "203:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "222:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "216:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "216:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "207:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "295:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "307:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "297:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "297:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "254:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "265:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "280:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "285:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "276:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "276:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "289:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "272:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "272:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "261:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "261:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "251:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "251:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "244:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "244:50:13"
															},
															"nodeType": "YulIf",
															"src": "241:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "320:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "330:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "320:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "344:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "364:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "375:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "360:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "354:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "354:25:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "344:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKidsNFT_$958t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "90:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "101:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "113:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "121:6:13",
														"type": ""
													}
												],
												"src": "14:371:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "443:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "453:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "462:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "457:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "547:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "552:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "543:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "543:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "566:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "571:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "562:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "562:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "556:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "556:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "536:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "536:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "536:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "483:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "486:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "480:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "494:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "496:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "505:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "508:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "501:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "496:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "476:3:13",
																"statements": []
															},
															"src": "472:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "624:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "629:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "620:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "620:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "600:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "603:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "597:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:13:13"
															},
															"nodeType": "YulIf",
															"src": "594:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "421:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "426:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "431:6:13",
														"type": ""
													}
												],
												"src": "390:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1042:397:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1059:3:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1064:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1052:38:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1099:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1119:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1113:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1103:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1169:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1157:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1157:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1180:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1185:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1176:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1176:12:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1190:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1135:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1135:62:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1206:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1220:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1225:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1210:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1252:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1248:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1248:11:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1261:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1241:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1241:40:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1290:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1312:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1306:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "1294:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1354:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1373:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1377:2:13",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1369:11:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "1382:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1328:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:63:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1328:63:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1400:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1415:2:13"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1411:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:26:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1010:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1015:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1023:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1034:3:13",
														"type": ""
													}
												],
												"src": "653:786:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1593:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1575:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1575:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1605:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1625:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1619:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1609:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1652:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1663:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1668:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1641:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1641:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1710:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1718:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1706:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1706:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1743:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1684:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1775:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1794:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1802:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1790:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1790:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1811:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1807:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1807:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1786:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1786:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1771:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1767:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1534:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1545:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1556:4:13",
														"type": ""
													}
												],
												"src": "1444:383:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1864:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1888:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1884:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1874:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1924:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1914:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1832:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2016:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2075:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2077:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2077:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2077:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2047:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2040:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2040:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2033:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2055:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2066:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2062:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2062:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2070:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2058:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2052:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2052:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2029:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:45:13"
															},
															"nodeType": "YulIf",
															"src": "2026:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2106:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2121:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2124:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2106:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1995:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1998:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2004:7:13",
														"type": ""
													}
												],
												"src": "1964:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2212:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2214:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2214:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2214:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2201:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2208:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2204:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2198:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:13:13"
															},
															"nodeType": "YulIf",
															"src": "2195:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2243:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2254:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2257:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2250:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2243:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2168:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2171:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2177:3:13",
														"type": ""
													}
												],
												"src": "2137:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2331:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2312:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2312:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2362:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2352:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2270:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2434:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2458:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2444:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2494:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2484:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2484:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2508:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2402:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2610:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2610:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2601:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:13:13"
															},
															"nodeType": "YulIf",
															"src": "2591:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2639:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2650:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2661:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2646:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2563:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2573:3:13",
														"type": ""
													}
												],
												"src": "2534:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2849:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2866:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2859:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2859:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2911:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2896:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2939:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2950:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:18:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2955:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2999:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3011:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2999:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2826:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2840:4:13",
														"type": ""
													}
												],
												"src": "2675:356:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_INagaKidsNFT_$958t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002212380380620022128339810160408190526200003491620003a5565b60016002556200004660003362000064565b6200005182620000ed565b6200005c816200011d565b50506200055b565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000e95760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45b5050565b6000620000fa8162000130565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006200012a8162000130565b50600055565b6200013c81336200013f565b50565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620000e9576200018b816001600160a01b03166014620001e560201b6200133b1760201c565b620001a18360206200133b620001e5821b17811c565b604051602001620001b492919062000414565b60408051601f198184030181529082905262461bcd60e51b8252620001dc916004016200048d565b60405180910390fd5b60606000620001f6836002620004d8565b62000203906002620004fa565b6001600160401b038111156200021d576200021d62000515565b6040519080825280601f01601f19166020018201604052801562000248576020820181803683370190505b509050600360fc1b816000815181106200026657620002666200052b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200029857620002986200052b565b60200101906001600160f81b031916908160001a9053506000620002be846002620004d8565b620002cb906001620004fa565b90505b60018111156200034d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200030357620003036200052b565b1a60f81b8282815181106200031c576200031c6200052b565b60200101906001600160f81b031916908160001a90535060049490941c93620003458162000541565b9050620002ce565b5083156200039e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401620001dc565b9392505050565b60008060408385031215620003b957600080fd5b82516001600160a01b0381168114620003d157600080fd5b6020939093015192949293505050565b60005b83811015620003fe578181015183820152602001620003e4565b838111156200040e576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516200044e816017850160208801620003e1565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162000481816028840160208801620003e1565b01602801949350505050565b6020815260008251806020840152620004ae816040850160208701620003e1565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620004f557620004f5620004c2565b500290565b60008219821115620005105762000510620004c2565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620005535762000553620004c2565b506000190190565b611ca7806200056b6000396000f3fe6080604052600436106101cd5760003560e01c80636c19e783116100f7578063a7bb580311610095578063f055c7a911610064578063f055c7a91461056a578063fa540801146105a3578063fade63c9146105c3578063ff0938a7146105e357600080fd5b8063a7bb5803146104e4578063c4e41b2214610522578063d547741f14610537578063de6892c81461055757600080fd5b806391d14854116100d157806391d148541461046e57806394f4504d1461048e57806397aba7f9146104af578063a217fddf146104cf57600080fd5b80636c19e7831461040e5780637cb647591461042e578063805064941461044e57600080fd5b80632904e6d91161016f57806336568abe1161013e57806336568abe1461038057806342920a46146103a05780634c0f38c2146103c05780635997bbee146103d557600080fd5b80632904e6d9146103155780632c8a19261461032a5780632eb4a7ab1461034a5780632f2ff15d1461036057600080fd5b80631f5ac1b2116101ab5780631f5ac1b21461026c578063238ac9331461028c578063248a9ca3146102c457806327c25c20146102f557600080fd5b806301ffc9a7146101d257806311c67efc146102075780631b0d2d3b14610228575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611748565b6105f8565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b506003546101f290600160a01b900460ff1681565b34801561023457600080fd5b5061025e610243366004611787565b6001600160a01b031660009081526006602052604090205490565b6040519081526020016101fe565b34801561027857600080fd5b5061025e610287366004611787565b61062f565b34801561029857600080fd5b506004546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b3480156102d057600080fd5b5061025e6102df3660046117a4565b6000908152600160208190526040909120015490565b34801561030157600080fd5b506003546102ac906001600160a01b031681565b6103286103233660046117bd565b610679565b005b34801561033657600080fd5b50610328610345366004611787565b610a89565b34801561035657600080fd5b5061025e60005481565b34801561036c57600080fd5b5061032861037b366004611838565b610ab7565b34801561038c57600080fd5b5061032861039b366004611838565b610ae2565b3480156103ac57600080fd5b506101f26103bb36600461190b565b610b60565b3480156103cc57600080fd5b5061025e610ba3565b3480156103e157600080fd5b506101f26103f0366004611787565b6001600160a01b031660009081526005602052604090205460ff1690565b34801561041a57600080fd5b50610328610429366004611787565b610c16565b34801561043a57600080fd5b506103286104493660046117a4565b610c44565b34801561045a57600080fd5b5061032861046936600461197b565b610c55565b34801561047a57600080fd5b506101f2610489366004611838565b610c7f565b34801561049a57600080fd5b506003546101f290600160a81b900460ff1681565b3480156104bb57600080fd5b506102ac6104ca366004611998565b610caa565b3480156104db57600080fd5b5061025e600081565b3480156104f057600080fd5b506105046104ff3660046119df565b610d29565b60408051938452602084019290925260ff16908201526060016101fe565b34801561052e57600080fd5b5061025e610d9d565b34801561054357600080fd5b50610328610552366004611838565b610de7565b610328610565366004611a14565b610e0d565b34801561057657600080fd5b506101f2610585366004611787565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156105af57600080fd5b5061025e6105be3660046117a4565b611268565b3480156105cf57600080fd5b506103286105de36600461197b565b6112a3565b3480156105ef57600080fd5b506101f26112cd565b60006001600160e01b03198216637965db0b60e01b148061062957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60028054036106cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280556106db6112cd565b1561071f5760405162461bcd60e51b81526020600482015260146024820152732730b3b0a5b4b239903bb0b9902830bab9b2b21760611b60448201526064016106c6565b600354600160a81b900460ff16151560011461077d5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b61045781610789610d9d565b6107939190611a9c565b106107ce5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106c6565b3360009081526005602052604090205460ff16151560010361082c5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190611ab4565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190611acd565b15156001146109295760405162461bcd60e51b81526004016106c690611aea565b610935838333846114de565b61098f5760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106c6565b336000908152600560209081526040808320805460ff191660011790556006909152812080548392906109c3908490611a9c565b90915550600090505b81811015610a44576003546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050508080610a3c90611b34565b9150506109cc565b506040805182815242602082015233917fb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938910160405180910390a25050600160025550565b6000610a948161157b565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526001602081905260409091200154610ad38161157b565b610add8383611588565b505050565b6001600160a01b0381163314610b525760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106c6565b610b5c82826115f3565b5050565b600080610b6c8461062f565b90506000610b7982611268565b9050856001600160a01b0316610b8f8286610caa565b6001600160a01b0316149695505050505050565b6003546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611ab4565b905090565b6000610c218161157b565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c4f8161157b565b50600055565b6000610c608161157b565b5060038054911515600160a01b0260ff60a01b19909216919091179055565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080600080610cb985610d29565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610d14573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114610d7f5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106c6565b50505060208101516040820151606090920151909260009190911a90565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bed573d6000803e3d6000fd5b60008281526001602081905260409091200154610e038161157b565b610add83836115f3565b6002805403610e5e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c6565b60028055610e6a6112cd565b15610eae5760405162461bcd60e51b81526020600482015260146024820152732730b3b0a5b4b239903bb0b9902830bab9b2b21760611b60448201526064016106c6565b600354600160a01b900460ff161515600114610f0c5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b323314610f5b5760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106c6565b3360009081526007602052604090205460ff161515600103610fb95760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b610457610fc4610d9d565b610fcf906001611a9c565b106110115760405162461bcd60e51b815260206004820152601260248201527113dd995c8814dd5c1c1b1e48105b5bdd5b9d60721b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611ab4565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190611acd565b151560011461110e5760405162461bcd60e51b81526004016106c690611aea565b600454604080516020601f850181900481028201810190925283815261115b926001600160a01b0316913391908690869081908401838280828437600092019190915250610b6092505050565b6111b25760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106c6565b3360008181526007602052604090819020805460ff1916600117905560035490516340d097c360e01b815260048101929092526001600160a01b0316906340d097c390602401600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b50506040514281523392507fab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b915060200160405180910390a250506001600255565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c0161065c565b60006112ae8161157b565b5060038054911515600160a81b0260ff60a81b19909216919091179055565b60035460408051635c975abb60e01b815290516000926001600160a01b031691635c975abb9160048083019260209291908290030181865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611acd565b6060600061134a836002611b4d565b611355906002611a9c565b67ffffffffffffffff81111561136d5761136d611868565b6040519080825280601f01601f191660200182016040528015611397576020820181803683370190505b509050600360fc1b816000815181106113b2576113b2611b6c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113e1576113e1611b6c565b60200101906001600160f81b031916908160001a9053506000611405846002611b4d565b611410906001611a9c565b90505b6001811115611488576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144457611444611b6c565b1a60f81b82828151811061145a5761145a611b6c565b60200101906001600160f81b031916908160001a90535060049490941c9361148181611b82565b9050611413565b5083156114d75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c6565b9392505050565b6000805481036114f057506000611573565b6115708585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250546040516bffffffffffffffffffffffff1960608b901b1660208201526034810189905290935060540191506115559050565b6040516020818303038152906040528051906020012061165a565b90505b949350505050565b6115858133611670565b50565b6115928282610c7f565b610b5c5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6115fd8282610c7f565b15610b5c5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261166785846116d4565b14949350505050565b61167a8282610c7f565b610b5c57611692816001600160a01b0316601461133b565b61169d83602061133b565b6040516020016116ae929190611bc9565b60408051601f198184030181529082905262461bcd60e51b82526106c691600401611c3e565b600081815b84518110156117405760008582815181106116f6576116f6611b6c565b6020026020010151905080831161171c576000838152602082905260409020925061172d565b600081815260208490526040902092505b508061173881611b34565b9150506116d9565b509392505050565b60006020828403121561175a57600080fd5b81356001600160e01b0319811681146114d757600080fd5b6001600160a01b038116811461158557600080fd5b60006020828403121561179957600080fd5b81356114d781611772565b6000602082840312156117b657600080fd5b5035919050565b6000806000604084860312156117d257600080fd5b833567ffffffffffffffff808211156117ea57600080fd5b818601915086601f8301126117fe57600080fd5b81358181111561180d57600080fd5b8760208260051b850101111561182257600080fd5b6020928301989097509590910135949350505050565b6000806040838503121561184b57600080fd5b82359150602083013561185d81611772565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261188f57600080fd5b813567ffffffffffffffff808211156118aa576118aa611868565b604051601f8301601f19908116603f011681019082821181831017156118d2576118d2611868565b816040528381528660208588010111156118eb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561192057600080fd5b833561192b81611772565b9250602084013561193b81611772565b9150604084013567ffffffffffffffff81111561195757600080fd5b6119638682870161187e565b9150509250925092565b801515811461158557600080fd5b60006020828403121561198d57600080fd5b81356114d78161196d565b600080604083850312156119ab57600080fd5b82359150602083013567ffffffffffffffff8111156119c957600080fd5b6119d58582860161187e565b9150509250929050565b6000602082840312156119f157600080fd5b813567ffffffffffffffff811115611a0857600080fd5b6115738482850161187e565b60008060208385031215611a2757600080fd5b823567ffffffffffffffff80821115611a3f57600080fd5b818501915085601f830112611a5357600080fd5b813581811115611a6257600080fd5b866020828501011115611a7457600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611aaf57611aaf611a86565b500190565b600060208284031215611ac657600080fd5b5051919050565b600060208284031215611adf57600080fd5b81516114d78161196d565b6020808252602a908201527f5468697320436f6e7472616374206e6f742068617665207065726d697373696f60408201526937103a379036b4b73a1760b11b606082015260800190565b600060018201611b4657611b46611a86565b5060010190565b6000816000190483118215151615611b6757611b67611a86565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611b9157611b91611a86565b506000190190565b60005b83811015611bb4578181015183820152602001611b9c565b83811115611bc3576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c01816017850160208801611b99565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611c32816028840160208801611b99565b01602801949350505050565b6020815260008251806020840152611c5d816040850160208701611b99565b601f01601f1916919091016040019291505056fea2646970667358221220f89fae7d77ba9ce5ab030d50c1817c4d0c75e2b945ab9c9c60cf1df1cc17250d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2212 CODESIZE SUB DUP1 PUSH3 0x2212 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE PUSH3 0x46 PUSH1 0x0 CALLER PUSH3 0x64 JUMP JUMPDEST PUSH3 0x51 DUP3 PUSH3 0xED JUMP JUMPDEST PUSH3 0x5C DUP2 PUSH3 0x11D JUMP JUMPDEST POP POP PUSH3 0x55B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xE9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFA DUP2 PUSH3 0x130 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12A DUP2 PUSH3 0x130 JUMP JUMPDEST POP PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH3 0x13C DUP2 CALLER PUSH3 0x13F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0xE9 JUMPI PUSH3 0x18B DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH3 0x1E5 PUSH1 0x20 SHL PUSH3 0x133B OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A1 DUP4 PUSH1 0x20 PUSH3 0x133B PUSH3 0x1E5 DUP3 SHL OR DUP2 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1B4 SWAP3 SWAP2 SWAP1 PUSH3 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH3 0x1DC SWAP2 PUSH1 0x4 ADD PUSH3 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x1F6 DUP4 PUSH1 0x2 PUSH3 0x4D8 JUMP JUMPDEST PUSH3 0x203 SWAP1 PUSH1 0x2 PUSH3 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x21D JUMPI PUSH3 0x21D PUSH3 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x248 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x266 JUMPI PUSH3 0x266 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x298 JUMPI PUSH3 0x298 PUSH3 0x52B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH3 0x2BE DUP5 PUSH1 0x2 PUSH3 0x4D8 JUMP JUMPDEST PUSH3 0x2CB SWAP1 PUSH1 0x1 PUSH3 0x4FA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x34D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH3 0x303 JUMPI PUSH3 0x303 PUSH3 0x52B JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x31C JUMPI PUSH3 0x31C PUSH3 0x52B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH3 0x345 DUP2 PUSH3 0x541 JUMP JUMPDEST SWAP1 POP PUSH3 0x2CE JUMP JUMPDEST POP DUP4 ISZERO PUSH3 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3FE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x3E4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x40E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH3 0x44E DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x3E1 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH3 0x481 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x3E1 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x4AE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x3E1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x4F5 JUMPI PUSH3 0x4F5 PUSH3 0x4C2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x510 JUMPI PUSH3 0x510 PUSH3 0x4C2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH3 0x553 JUMPI PUSH3 0x553 PUSH3 0x4C2 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x1CA7 DUP1 PUSH3 0x56B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C19E783 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF055C7A9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xFADE63C9 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFF0938A7 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x94F4504D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x80506494 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2904E6D9 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x5997BBEE EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2904E6D9 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x2C8A1926 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F5AC1B2 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x27C25C20 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x11C67EFC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1B0D2D3B EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x190B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1998 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xD9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH2 0x1268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x629 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x6DB PUSH2 0x12CD JUMP JUMPDEST ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2730B3B0A5B4B239903BB0B9902830BAB9B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x789 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST LT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x935 DUP4 DUP4 CALLER DUP5 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C3 SWAP1 DUP5 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA3C SWAP1 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xB7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xAD3 DUP2 PUSH2 0x157B JUMP JUMPDEST PUSH2 0xADD DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xB5C DUP3 DUP3 PUSH2 0x15F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6C DUP5 PUSH2 0x62F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F DUP3 DUP7 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4F DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xCB9 DUP6 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xE03 DUP2 PUSH2 0x157B JUMP JUMPDEST PUSH2 0xADD DUP4 DUP4 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xE6A PUSH2 0x12CD JUMP JUMPDEST ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2730B3B0A5B4B239903BB0B9902830BAB9B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 PUSH2 0xFC4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0xFCF SWAP1 PUSH1 0x1 PUSH2 0x1A9C JUMP JUMPDEST LT PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DD995C8814DD5C1C1B1E48105B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1063 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP6 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP4 DUP2 MSTORE PUSH2 0x115B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB60 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xAB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x65C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C975ABB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C975ABB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1317 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x134A DUP4 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1355 SWAP1 PUSH1 0x2 PUSH2 0x1A9C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1397 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13B2 JUMPI PUSH2 0x13B2 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH2 0x13E1 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1405 DUP5 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1410 SWAP1 PUSH1 0x1 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1488 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1444 JUMPI PUSH2 0x1444 PUSH2 0x1B6C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x145A JUMPI PUSH2 0x145A PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1481 DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP1 POP PUSH2 0x1413 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SUB PUSH2 0x14F0 JUMPI POP PUSH1 0x0 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1570 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x54 ADD SWAP2 POP PUSH2 0x1555 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x165A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 CALLER PUSH2 0x1670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1592 DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x15FD DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1667 DUP6 DUP5 PUSH2 0x16D4 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x167A DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH2 0x1692 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x169D DUP4 PUSH1 0x20 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16AE SWAP3 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C6 SWAP2 PUSH1 0x4 ADD PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F6 JUMPI PUSH2 0x16F6 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x171C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x172D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1738 DUP2 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x185D DUP2 PUSH2 0x1772 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18AA PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 PUSH2 0x1868 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x192B DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x193B DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1963 DUP7 DUP3 DUP8 ADD PUSH2 0x187E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D5 DUP6 DUP3 DUP7 ADD PUSH2 0x187E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1573 DUP5 DUP3 DUP6 ADD PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAF PUSH2 0x1A86 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D7 DUP2 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320436F6E7472616374206E6F742068617665207065726D697373696F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x37103A379036B4B73A17 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B46 JUMPI PUSH2 0x1B46 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B67 PUSH2 0x1A86 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B91 JUMPI PUSH2 0x1B91 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BB4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B9C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C01 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B99 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1C32 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B99 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SWAP16 0xAE PUSH30 0x77BA9CE5AB030D50C1817C4D0C75E2B945AB9C9C60CF1DF1CC17250D6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "277:3900:10:-:0;;;818:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;887:42:10;2072:4:0;918:10:10;887;:42::i;:::-;940:30;960:9;940:19;:30::i;:::-;981:26;995:11;981:13;:26::i;:::-;818:199;;277:3900;;7244:233:0;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:4;;7365:12:0;;7420:40;;7365:12;7420:40;7322:149;7244:233;;:::o;1132:136:10:-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1232:16:10::1;:28:::0;;-1:-1:-1;;;;;;1232:28:10::1;-1:-1:-1::0;;;;;1232:28:10;;;::::1;::::0;;;::::1;::::0;;1132:136::o;1654:123::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1745:10:10::1;:24:::0;1654:123::o;3334:103:0:-;3400:30;3411:4;719:10:4;3400::0;:30::i;:::-;3334:103;:::o;3718:492::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;;;;;:41;;:::i;:::-;4101:38;4129:4;4136:2;4101:19;;;;;:38;;:::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;:::-;;;;;;;;1588:441:5;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;-1:-1:-1;;;;;1710:25:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:5;;1688:47;;-1:-1:-1;;;1745:6:5;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:5;;;;;;;;;-1:-1:-1;;;1770:6:5;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:5;;;;;;;;-1:-1:-1;1800:9:5;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:5;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:5;;;;;;;;-1:-1:-1;1915:1:5;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:5;;1936:55;;;;-1:-1:-1;;;1936:55:5;;2877:2:13;1936:55:5;;;2859:21:13;;;2896:18;;;2889:30;2955:34;2935:18;;;2928:62;3007:18;;1936:55:5;2675:356:13;1936:55:5;2015:6;1588:441;-1:-1:-1;;;1588:441:5:o;14:371:13:-;113:6;121;174:2;162:9;153:7;149:23;145:32;142:52;;;190:1;187;180:12;142:52;216:16;;-1:-1:-1;;;;;261:31:13;;251:42;;241:70;;307:1;304;297:12;241:70;375:2;360:18;;;;354:25;330:5;;354:25;;-1:-1:-1;;;14:371:13:o;390:258::-;462:1;472:113;486:6;483:1;480:13;472:113;;;562:11;;;556:18;543:11;;;536:39;508:2;501:10;472:113;;;603:6;600:1;597:13;594:48;;;638:1;629:6;624:3;620:16;613:27;594:48;;390:258;;;:::o;653:786::-;1064:25;1059:3;1052:38;1034:3;1119:6;1113:13;1135:62;1190:6;1185:2;1180:3;1176:12;1169:4;1161:6;1157:17;1135:62;:::i;:::-;-1:-1:-1;;;1256:2:13;1216:16;;;1248:11;;;1241:40;1306:13;;1328:63;1306:13;1377:2;1369:11;;1362:4;1350:17;;1328:63;:::i;:::-;1411:17;1430:2;1407:26;;653:786;-1:-1:-1;;;;653:786:13:o;1444:383::-;1593:2;1582:9;1575:21;1556:4;1625:6;1619:13;1668:6;1663:2;1652:9;1648:18;1641:34;1684:66;1743:6;1738:2;1727:9;1723:18;1718:2;1710:6;1706:15;1684:66;:::i;:::-;1811:2;1790:15;-1:-1:-1;;1786:29:13;1771:45;;;;1818:2;1767:54;;1444:383;-1:-1:-1;;1444:383:13:o;1832:127::-;1893:10;1888:3;1884:20;1881:1;1874:31;1924:4;1921:1;1914:15;1948:4;1945:1;1938:15;1964:168;2004:7;2070:1;2066;2062:6;2058:14;2055:1;2052:21;2047:1;2040:9;2033:17;2029:45;2026:71;;;2077:18;;:::i;:::-;-1:-1:-1;2117:9:13;;1964:168::o;2137:128::-;2177:3;2208:1;2204:6;2201:1;2198:13;2195:39;;;2214:18;;:::i;:::-;-1:-1:-1;2250:9:13;;2137:128::o;2270:127::-;2331:10;2326:3;2322:20;2319:1;2312:31;2362:4;2359:1;2352:15;2386:4;2383:1;2376:15;2402:127;2463:10;2458:3;2454:20;2451:1;2444:31;2494:4;2491:1;2484:15;2518:4;2515:1;2508:15;2534:136;2573:3;2601:5;2591:39;;2610:18;;:::i;:::-;-1:-1:-1;;;2646:18:13;;2534:136::o;2675:356::-;277:3900:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 5744,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 5499,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_efficientHash_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_287": {
									"entryPoint": 5512,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_318": {
									"entryPoint": 5619,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getEthSignedMessageHash_1413": {
									"entryPoint": 4712,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMaxSupply_1365": {
									"entryPoint": 2979,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMessageHash_1397": {
									"entryPoint": 1583,
									"id": 1397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1355": {
									"entryPoint": 3485,
									"id": 1355,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 2743,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 3199,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isPause_1375": {
									"entryPoint": 4813,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isPublicMinted_1345": {
									"entryPoint": null,
									"id": 1345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPublicOpen_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelistMintedAmount_1333": {
									"entryPoint": null,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistMinted_1321": {
									"entryPoint": null,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistOpen_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelist_1531": {
									"entryPoint": 5342,
									"id": 1531,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@merkleRoot_1498": {
									"entryPoint": null,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nagaKidsContract_976": {
									"entryPoint": null,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@processProof_854": {
									"entryPoint": 5844,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@publicMint_1309": {
									"entryPoint": 3597,
									"id": 1309,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recoverSigner_1471": {
									"entryPoint": 3242,
									"id": 1471,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_213": {
									"entryPoint": 2786,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 3559,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMerkleRoot_1109": {
									"entryPoint": 3140,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNagaKidsContract_1057": {
									"entryPoint": 2697,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicOpen_1096": {
									"entryPoint": 3157,
									"id": 1096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigner_1070": {
									"entryPoint": 3094,
									"id": 1070,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelistMintOpen_1083": {
									"entryPoint": 4771,
									"id": 1083,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signer_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitSignature_1492": {
									"entryPoint": 3369,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@supportsInterface_60": {
									"entryPoint": 1528,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_772": {
									"entryPoint": 4923,
									"id": 772,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verify_1444": {
									"entryPoint": 2912,
									"id": 1444,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_797": {
									"entryPoint": 5722,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whitelistMint_1216": {
									"entryPoint": 1657,
									"id": 1216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_bytes": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 6552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_INagaKidsNFT_$958": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INagaKidsNFT_$958__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb57f8f9c8eace4f3cff285990b68679b8bb26950f0fd30c3a25c9ccd8b9c29f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16311:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "542:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "606:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "608:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "608:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "576:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "591:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "596:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "587:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "587:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "600:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "583:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "583:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "572:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:50:13"
															},
															"nodeType": "YulIf",
															"src": "552:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "531:5:13",
														"type": ""
													}
												],
												"src": "497:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "749:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "758:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "724:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "733:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "745:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:32:13"
															},
															"nodeType": "YulIf",
															"src": "713:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "774:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "800:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "787:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "778:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "844:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "819:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "819:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "859:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "869:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "669:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "680:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "692:6:13",
														"type": ""
													}
												],
												"src": "633:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "986:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "996:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1004:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "996:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1049:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1031:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "955:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "966:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "977:4:13",
														"type": ""
													}
												],
												"src": "885:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1178:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1220:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1213:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1213:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1137:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1148:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1159:4:13",
														"type": ""
													}
												],
												"src": "1067:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1360:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1360:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1402:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1433:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1438:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1429:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1429:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1442:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1425:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1425:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1413:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1319:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1330:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1341:4:13",
														"type": ""
													}
												],
												"src": "1249:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1573:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1585:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1575:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1575:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1575:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1557:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1540:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1540:32:13"
															},
															"nodeType": "YulIf",
															"src": "1537:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1608:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1493:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1504:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1516:6:13",
														"type": ""
													}
												],
												"src": "1457:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1763:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1773:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1785:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1773:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1830:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1846:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1851:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1842:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1842:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1855:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1838:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1838:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1808:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INagaKidsNFT_$958__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1732:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1743:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1754:4:13",
														"type": ""
													}
												],
												"src": "1642:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1992:567:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2038:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2047:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2050:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2040:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2040:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2040:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2013:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2022:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2005:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:32:13"
															},
															"nodeType": "YulIf",
															"src": "2002:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2063:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2090:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2077:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2067:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2109:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2119:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2113:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2164:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2173:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2166:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2152:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2160:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2149:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:14:13"
															},
															"nodeType": "YulIf",
															"src": "2146:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2189:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2203:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2214:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2199:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2193:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2269:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2281:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2271:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2248:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2252:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2244:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2244:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2259:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2240:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:35:13"
															},
															"nodeType": "YulIf",
															"src": "2230:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2321:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2298:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2360:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2363:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2353:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2339:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2347:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2336:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:14:13"
															},
															"nodeType": "YulIf",
															"src": "2333:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2427:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2436:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2439:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2429:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2429:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2429:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2390:2:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2398:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2401:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2394:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2394:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2386:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2386:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2411:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2382:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2382:34:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2418:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2379:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2379:47:13"
															},
															"nodeType": "YulIf",
															"src": "2376:67:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2452:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2466:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2462:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:13:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2484:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2494:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2484:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2509:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2547:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2532:20:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2519:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:34:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2509:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1942:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1953:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1965:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1973:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1981:6:13",
														"type": ""
													}
												],
												"src": "1870:689:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2700:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2709:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2702:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2702:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:32:13"
															},
															"nodeType": "YulIf",
															"src": "2664:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2725:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2751:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2738:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2729:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2795:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2770:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2770:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2810:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2820:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2810:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_INagaKidsNFT_$958",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2620:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2631:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"src": "2564:267:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2923:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2969:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2978:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2981:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2971:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2971:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2971:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2944:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2940:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2936:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2936:32:13"
															},
															"nodeType": "YulIf",
															"src": "2933:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2994:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3017:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3004:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3036:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3049:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3040:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3115:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3090:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3130:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3140:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2881:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2892:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2904:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2912:6:13",
														"type": ""
													}
												],
												"src": "2836:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3205:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3212:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3217:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3198:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3245:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3262:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3262:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3262:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3156:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3389:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3398:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3401:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3391:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3391:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3391:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3368:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3376:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3364:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3364:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3383:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3360:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3353:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:35:13"
															},
															"nodeType": "YulIf",
															"src": "3350:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3414:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3424:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3418:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3453:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3463:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3457:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3504:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3506:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3506:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3506:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3496:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3500:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3493:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:10:13"
															},
															"nodeType": "YulIf",
															"src": "3490:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3535:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3539:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3561:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3575:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3565:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3593:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3615:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3639:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3643:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3635:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3635:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3631:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3631:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3655:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3627:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3627:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3660:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3623:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3623:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3597:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3723:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3725:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3725:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3725:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3682:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3694:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3679:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3702:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3714:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3699:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3676:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:46:13"
															},
															"nodeType": "YulIf",
															"src": "3673:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3761:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3765:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3754:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3792:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3800:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3851:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3860:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3863:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3853:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3853:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3834:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3822:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3822:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3839:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3818:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3818:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3815:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:35:13"
															},
															"nodeType": "YulIf",
															"src": "3812:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3901:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3912:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3920:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3927:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3876:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3876:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3962:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3950:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3950:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3967:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3946:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3939:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3939:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3985:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3994:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3985:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3314:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3322:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3330:5:13",
														"type": ""
													}
												],
												"src": "3288:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4124:483:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4170:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4179:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4182:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4172:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4172:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4172:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4145:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4154:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4141:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4137:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:32:13"
															},
															"nodeType": "YulIf",
															"src": "4134:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4195:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4221:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4208:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4199:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4265:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4280:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4290:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4304:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4308:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4385:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4360:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4360:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4402:17:13",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4412:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4428:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4442:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4432:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4519:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4519:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4489:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4497:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4486:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:30:13"
															},
															"nodeType": "YulIf",
															"src": "4483:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4542:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4573:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4584:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4569:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4569:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4593:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4552:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4074:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4085:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4097:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4105:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4113:6:13",
														"type": ""
													}
												],
												"src": "4011:596:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4654:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4708:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4717:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4720:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4710:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4710:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4710:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4677:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4698:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4691:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4684:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4684:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4674:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4674:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:40:13"
															},
															"nodeType": "YulIf",
															"src": "4664:60:13"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4643:5:13",
														"type": ""
													}
												],
												"src": "4612:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4802:174:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4848:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4857:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4860:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4850:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4850:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4850:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4823:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4819:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4819:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:32:13"
															},
															"nodeType": "YulIf",
															"src": "4812:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4873:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4899:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4886:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4877:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4940:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4918:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4918:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4955:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4965:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4768:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4779:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4791:6:13",
														"type": ""
													}
												],
												"src": "4735:241:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5077:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5123:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5098:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5107:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5094:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5094:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:32:13"
															},
															"nodeType": "YulIf",
															"src": "5087:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5148:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5171:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5158:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5190:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5221:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5232:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5217:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5217:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5204:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5194:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5288:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5291:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5281:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5251:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5248:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:30:13"
															},
															"nodeType": "YulIf",
															"src": "5245:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5304:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5346:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5355:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5314:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5035:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5046:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5058:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5066:6:13",
														"type": ""
													}
												],
												"src": "4981:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5453:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5499:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5508:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5511:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5501:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5501:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5474:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5470:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5495:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5466:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5466:32:13"
															},
															"nodeType": "YulIf",
															"src": "5463:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5524:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5551:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5538:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5538:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5528:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5604:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5616:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5606:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5606:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5606:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5576:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5584:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5573:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:30:13"
															},
															"nodeType": "YulIf",
															"src": "5570:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5660:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5671:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5656:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5680:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5639:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5419:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5430:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:13",
														"type": ""
													}
												],
												"src": "5374:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5852:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5862:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5874:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5870:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5862:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5897:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5897:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5897:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5942:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5953:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5938:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5938:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5931:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5931:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5985:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5996:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5981:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5981:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "6005:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6013:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5974:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5805:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5816:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5824:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5832:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5843:4:13",
														"type": ""
													}
												],
												"src": "5699:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6119:502:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6140:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6149:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6136:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6136:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6132:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:32:13"
															},
															"nodeType": "YulIf",
															"src": "6129:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6190:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6217:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6204:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6194:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6236:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6246:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6240:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6291:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6300:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6303:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6293:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6293:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6293:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6279:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6287:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6276:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:14:13"
															},
															"nodeType": "YulIf",
															"src": "6273:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6316:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6330:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6341:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6320:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6396:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6408:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6398:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6398:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6398:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6375:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6379:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6371:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6371:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6386:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6367:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6367:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6360:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:35:13"
															},
															"nodeType": "YulIf",
															"src": "6357:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6421:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6448:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6435:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6425:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6478:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6487:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6490:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6480:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6480:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6480:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6466:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6474:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6463:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:14:13"
															},
															"nodeType": "YulIf",
															"src": "6460:34:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6544:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6553:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6556:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6546:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6546:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6546:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6517:2:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6521:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6513:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6513:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6509:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6535:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6506:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:37:13"
															},
															"nodeType": "YulIf",
															"src": "6503:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6569:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6583:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6579:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6579:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6599:16:13",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6609:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6077:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6088:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6100:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6108:6:13",
														"type": ""
													}
												],
												"src": "6030:591:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6773:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6783:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6797:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6793:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6793:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6787:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6840:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6853:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6857:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6849:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6849:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6866:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6845:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6833:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6833:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6833:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6890:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6895:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6908:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "6912:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6904:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6904:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6921:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6900:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6945:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6941:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6934:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6741:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6746:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6754:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6765:3:13",
														"type": ""
													}
												],
												"src": "6626:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7138:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7205:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7228:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7239:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7244:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7217:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7287:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7299:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7287:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7115:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7129:4:13",
														"type": ""
													}
												],
												"src": "6964:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7515:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7526:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7549:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7560:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7545:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7565:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7538:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7538:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7588:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7599:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7584:18:13"
																	},
																	{
																		"hexValue": "4e6167614b69647320776173205061757365642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7604:22:13",
																		"type": "",
																		"value": "NagaKids was Paused."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7577:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7577:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7636:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7648:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7659:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7644:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7636:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb57f8f9c8eace4f3cff285990b68679b8bb26950f0fd30c3a25c9ccd8b9c29f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7475:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7489:4:13",
														"type": ""
													}
												],
												"src": "7324:344:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7847:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7864:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7875:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7909:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7894:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7914:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7887:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7948:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7933:18:13"
																	},
																	{
																		"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7953:29:13",
																		"type": "",
																		"value": "Whitelist not open to mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7992:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8004:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8015:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8000:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7992:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7824:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7838:4:13",
														"type": ""
													}
												],
												"src": "7673:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8061:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8078:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8090:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8081:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8071:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8071:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8118:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8121:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8111:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8111:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8145:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8135:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8029:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8209:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8236:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8238:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8238:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8238:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8225:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8232:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8222:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:13:13"
															},
															"nodeType": "YulIf",
															"src": "8219:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8267:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8278:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8281:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8274:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8274:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8267:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8192:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8195:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8201:3:13",
														"type": ""
													}
												],
												"src": "8161:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8468:161:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8485:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8478:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8478:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8478:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8535:2:13",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8569:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8554:18:13"
																	},
																	{
																		"hexValue": "4f76657220737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8574:13:13",
																		"type": "",
																		"value": "Over supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8547:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8597:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8609:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8620:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8605:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8605:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8597:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8445:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8459:4:13",
														"type": ""
													}
												],
												"src": "8294:335:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8808:173:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8818:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8859:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8870:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8855:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8855:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8848:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8909:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8894:18:13"
																	},
																	{
																		"hexValue": "596f752061726520616c7265616479206d696e7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8914:25:13",
																		"type": "",
																		"value": "You are already minted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8887:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8887:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8949:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8961:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8972:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8949:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8785:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:13",
														"type": ""
													}
												],
												"src": "8634:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9067:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9113:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9122:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9125:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9115:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9115:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9115:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9088:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9097:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9084:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9084:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9109:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9080:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9080:32:13"
															},
															"nodeType": "YulIf",
															"src": "9077:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9138:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9154:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9148:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9138:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9033:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9044:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9056:6:13",
														"type": ""
													}
												],
												"src": "8986:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9304:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9314:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9326:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9322:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9314:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9356:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9367:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9394:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9390:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9414:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9430:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9435:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9426:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9426:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9439:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9422:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9422:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9410:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9410:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9383:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9383:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9265:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9276:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9284:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9295:4:13",
														"type": ""
													}
												],
												"src": "9175:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9532:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9578:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9587:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9590:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9580:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9580:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9580:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9553:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9562:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9574:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9545:32:13"
															},
															"nodeType": "YulIf",
															"src": "9542:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9603:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9622:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9616:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9616:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9607:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9663:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9641:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9641:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9678:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9688:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9498:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9509:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9521:6:13",
														"type": ""
													}
												],
												"src": "9454:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9878:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9895:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9888:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9888:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9929:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9940:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9925:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9925:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9945:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9968:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9979:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9964:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9964:18:13"
																	},
																	{
																		"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9984:34:13",
																		"type": "",
																		"value": "This Contract not have permissio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9957:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9957:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9957:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10039:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10050:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10035:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10035:18:13"
																	},
																	{
																		"hexValue": "6e20746f206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10055:12:13",
																		"type": "",
																		"value": "n to mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10028:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10028:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10028:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10077:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10089:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10100:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10077:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9855:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9869:4:13",
														"type": ""
													}
												],
												"src": "9704:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10289:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10306:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10317:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10299:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10299:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10351:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10336:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10336:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10356:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10329:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10379:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10390:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10375:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10375:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10395:34:13",
																		"type": "",
																		"value": "Unauthorized WhitelistMint This "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10368:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10368:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10368:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10461:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10446:18:13"
																	},
																	{
																		"hexValue": "557365722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10466:7:13",
																		"type": "",
																		"value": "User."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10483:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10495:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10506:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10491:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10491:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10483:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10266:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10280:4:13",
														"type": ""
													}
												],
												"src": "10115:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10568:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10599:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10601:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10601:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10601:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10584:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10595:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10591:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10591:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10581:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:17:13"
															},
															"nodeType": "YulIf",
															"src": "10578:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10630:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10641:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10648:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10630:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10550:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10560:3:13",
														"type": ""
													}
												],
												"src": "10521:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10790:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10800:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10812:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10823:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10808:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10808:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10800:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10842:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10853:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10835:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10835:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10880:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10891:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10876:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10896:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10869:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10751:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10762:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10770:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10781:4:13",
														"type": ""
													}
												],
												"src": "10661:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11088:237:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11105:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11116:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11098:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11098:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11098:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11139:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11150:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11135:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11155:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11128:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11178:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11189:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11174:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11174:18:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11194:34:13",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11167:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11249:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11260:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11245:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11245:18:13"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11265:17:13",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11238:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11238:45:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11292:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11304:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11315:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11300:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11300:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11292:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11065:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11079:4:13",
														"type": ""
													}
												],
												"src": "10914:411:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11411:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11457:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11466:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11469:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11459:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11459:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11459:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11432:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11441:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11428:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11424:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:32:13"
															},
															"nodeType": "YulIf",
															"src": "11421:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11482:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11498:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11492:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11377:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11388:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11400:6:13",
														"type": ""
													}
												],
												"src": "11330:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11700:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11710:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11722:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11733:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11718:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11718:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11710:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11753:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11746:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11746:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11746:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11802:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11787:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11811:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11819:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11807:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11807:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11780:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11780:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11845:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11856:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11861:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11888:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11899:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11884:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11904:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11877:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11645:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11656:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11664:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11672:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11691:4:13",
														"type": ""
													}
												],
												"src": "11519:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12096:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12113:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12124:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12106:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12106:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12147:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12158:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12143:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12163:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12136:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12136:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12136:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12186:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12197:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12182:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12182:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12202:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12175:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12175:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12175:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12238:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12250:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12261:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12246:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12238:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12073:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12087:4:13",
														"type": ""
													}
												],
												"src": "11922:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12449:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12466:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12477:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12459:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12459:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12459:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12500:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12511:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12496:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12516:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12489:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12489:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12489:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12539:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12550:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12535:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12535:18:13"
																	},
																	{
																		"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12555:29:13",
																		"type": "",
																		"value": "haha Contract can't call me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12528:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12528:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12528:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12594:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12606:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12602:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12602:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12594:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12426:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12440:4:13",
														"type": ""
													}
												],
												"src": "12275:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12805:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12822:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12833:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12815:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12815:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12815:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12856:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12867:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12852:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12852:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12872:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12845:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12895:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12906:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12891:18:13"
																	},
																	{
																		"hexValue": "4f76657220537570706c7920416d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12911:20:13",
																		"type": "",
																		"value": "Over Supply Amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12884:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12884:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12941:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12953:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12964:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12949:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12949:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12941:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12782:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12796:4:13",
														"type": ""
													}
												],
												"src": "12631:342:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13152:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13169:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13180:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13162:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13162:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13203:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13214:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13199:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13199:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13219:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13192:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13192:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13242:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13253:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13238:18:13"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13258:34:13",
																		"type": "",
																		"value": "Unauthorized PublicMint This Use"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13231:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13231:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13231:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13324:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:18:13"
																	},
																	{
																		"hexValue": "722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13329:4:13",
																		"type": "",
																		"value": "r."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13302:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13343:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13355:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13366:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13351:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13343:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13129:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13143:4:13",
														"type": ""
													}
												],
												"src": "12978:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13601:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13618:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13623:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13611:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13710:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13715:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13706:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13720:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13699:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13699:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13699:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13736:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13747:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13752:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13743:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13743:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13736:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13577:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13582:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13593:3:13",
														"type": ""
													}
												],
												"src": "13381:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13818:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13877:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13879:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13879:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13879:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13849:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13842:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13842:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13835:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13835:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13857:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13868:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13864:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13864:6:13"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13872:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13860:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13860:14:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13854:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13854:21:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13831:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13831:45:13"
															},
															"nodeType": "YulIf",
															"src": "13828:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13908:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13923:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13926:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13919:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13919:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13908:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13797:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13800:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13806:7:13",
														"type": ""
													}
												],
												"src": "13766:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13971:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13988:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13995:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14000:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13991:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13991:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13981:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13981:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14028:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14031:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14021:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14021:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14021:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14052:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14055:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14045:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14045:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13939:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14118:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14145:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14147:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14147:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14147:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14138:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14131:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14131:13:13"
															},
															"nodeType": "YulIf",
															"src": "14128:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14176:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14187:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14198:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14194:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14183:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14183:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14176:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14100:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14110:3:13",
														"type": ""
													}
												],
												"src": "14071:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14386:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14403:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14414:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14396:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14396:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14396:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14437:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14448:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14433:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14433:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14426:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14426:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14426:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14476:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14487:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14472:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14472:18:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14492:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14465:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14465:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14465:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14536:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14548:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14559:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14544:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14544:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14536:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14363:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14377:4:13",
														"type": ""
													}
												],
												"src": "14212:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14720:147:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14737:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14750:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "14754:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14746:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14746:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14767:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14763:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14763:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14742:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14742:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14730:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14730:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14730:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14816:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14821:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14812:12:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14826:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14805:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14805:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14805:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14842:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14853:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:13",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14849:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14849:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14842:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14688:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14693:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14701:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14712:3:13",
														"type": ""
													}
												],
												"src": "14573:294:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14925:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14935:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14944:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14939:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15004:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15029:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15034:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15025:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15025:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15048:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15053:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15044:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15044:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15038:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15038:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15018:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15018:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15018:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14965:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14968:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14962:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14962:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14976:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14978:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14987:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14990:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14983:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14983:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14978:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14958:3:13",
																"statements": []
															},
															"src": "14954:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15093:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15106:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15111:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15102:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15102:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15120:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15095:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15095:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15095:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15082:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15085:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15079:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15079:13:13"
															},
															"nodeType": "YulIf",
															"src": "15076:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14903:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14908:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14913:6:13",
														"type": ""
													}
												],
												"src": "14872:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15524:397:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15541:3:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15546:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15534:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15534:38:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15581:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15601:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15595:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15585:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15643:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15651:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15639:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15639:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15662:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15667:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15658:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15658:12:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15672:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15617:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15617:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15617:62:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15688:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15702:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15707:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15698:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15698:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15692:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15734:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15738:2:13",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15730:11:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15743:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15723:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15723:40:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15772:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15794:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15788:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15788:13:13"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "15776:8:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15836:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15844:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15832:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15832:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15855:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15859:2:13",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15851:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15851:11:13"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "15864:8:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15810:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15810:63:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15810:63:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15882:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15897:2:13"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "15901:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15893:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15893:17:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15912:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15889:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15889:26:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15882:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15492:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15497:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15505:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15516:3:13",
														"type": ""
													}
												],
												"src": "15135:786:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16047:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16064:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16075:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16057:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16057:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16057:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16087:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16107:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16101:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16101:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16091:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16134:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16145:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16130:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16130:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16150:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16123:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16123:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16123:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16192:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16209:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16220:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16205:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16225:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16166:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16166:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16166:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16241:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16257:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "16276:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16284:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "16272:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16272:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16293:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16289:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16289:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16268:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16268:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16253:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16253:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16300:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16249:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16249:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16241:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16016:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16027:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16038:4:13",
														"type": ""
													}
												],
												"src": "15926:383:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_INagaKidsNFT_$958__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_contract$_INagaKidsNFT_$958(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb57f8f9c8eace4f3cff285990b68679b8bb26950f0fd30c3a25c9ccd8b9c29f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NagaKids was Paused.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Whitelist not open to mint.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Over supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You are already minted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"This Contract not have permissio\")\n        mstore(add(headStart, 96), \"n to mint.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unauthorized WhitelistMint This \")\n        mstore(add(headStart, 96), \"User.\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"haha Contract can't call me\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Over Supply Amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Unauthorized PublicMint This Use\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cd5760003560e01c80636c19e783116100f7578063a7bb580311610095578063f055c7a911610064578063f055c7a91461056a578063fa540801146105a3578063fade63c9146105c3578063ff0938a7146105e357600080fd5b8063a7bb5803146104e4578063c4e41b2214610522578063d547741f14610537578063de6892c81461055757600080fd5b806391d14854116100d157806391d148541461046e57806394f4504d1461048e57806397aba7f9146104af578063a217fddf146104cf57600080fd5b80636c19e7831461040e5780637cb647591461042e578063805064941461044e57600080fd5b80632904e6d91161016f57806336568abe1161013e57806336568abe1461038057806342920a46146103a05780634c0f38c2146103c05780635997bbee146103d557600080fd5b80632904e6d9146103155780632c8a19261461032a5780632eb4a7ab1461034a5780632f2ff15d1461036057600080fd5b80631f5ac1b2116101ab5780631f5ac1b21461026c578063238ac9331461028c578063248a9ca3146102c457806327c25c20146102f557600080fd5b806301ffc9a7146101d257806311c67efc146102075780631b0d2d3b14610228575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611748565b6105f8565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b506003546101f290600160a01b900460ff1681565b34801561023457600080fd5b5061025e610243366004611787565b6001600160a01b031660009081526006602052604090205490565b6040519081526020016101fe565b34801561027857600080fd5b5061025e610287366004611787565b61062f565b34801561029857600080fd5b506004546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b3480156102d057600080fd5b5061025e6102df3660046117a4565b6000908152600160208190526040909120015490565b34801561030157600080fd5b506003546102ac906001600160a01b031681565b6103286103233660046117bd565b610679565b005b34801561033657600080fd5b50610328610345366004611787565b610a89565b34801561035657600080fd5b5061025e60005481565b34801561036c57600080fd5b5061032861037b366004611838565b610ab7565b34801561038c57600080fd5b5061032861039b366004611838565b610ae2565b3480156103ac57600080fd5b506101f26103bb36600461190b565b610b60565b3480156103cc57600080fd5b5061025e610ba3565b3480156103e157600080fd5b506101f26103f0366004611787565b6001600160a01b031660009081526005602052604090205460ff1690565b34801561041a57600080fd5b50610328610429366004611787565b610c16565b34801561043a57600080fd5b506103286104493660046117a4565b610c44565b34801561045a57600080fd5b5061032861046936600461197b565b610c55565b34801561047a57600080fd5b506101f2610489366004611838565b610c7f565b34801561049a57600080fd5b506003546101f290600160a81b900460ff1681565b3480156104bb57600080fd5b506102ac6104ca366004611998565b610caa565b3480156104db57600080fd5b5061025e600081565b3480156104f057600080fd5b506105046104ff3660046119df565b610d29565b60408051938452602084019290925260ff16908201526060016101fe565b34801561052e57600080fd5b5061025e610d9d565b34801561054357600080fd5b50610328610552366004611838565b610de7565b610328610565366004611a14565b610e0d565b34801561057657600080fd5b506101f2610585366004611787565b6001600160a01b031660009081526007602052604090205460ff1690565b3480156105af57600080fd5b5061025e6105be3660046117a4565b611268565b3480156105cf57600080fd5b506103286105de36600461197b565b6112a3565b3480156105ef57600080fd5b506101f26112cd565b60006001600160e01b03198216637965db0b60e01b148061062957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60028054036106cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600280556106db6112cd565b1561071f5760405162461bcd60e51b81526020600482015260146024820152732730b3b0a5b4b239903bb0b9902830bab9b2b21760611b60448201526064016106c6565b600354600160a81b900460ff16151560011461077d5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b61045781610789610d9d565b6107939190611a9c565b106107ce5760405162461bcd60e51b815260206004820152600b60248201526a4f76657220737570706c7960a81b60448201526064016106c6565b3360009081526005602052604090205460ff16151560010361082c5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190611ab4565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190611acd565b15156001146109295760405162461bcd60e51b81526004016106c690611aea565b610935838333846114de565b61098f5760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65642057686974656c6973744d696e742054686973206044820152642ab9b2b91760d91b60648201526084016106c6565b336000908152600560209081526040808320805460ff191660011790556006909152812080548392906109c3908490611a9c565b90915550600090505b81811015610a44576003546040516340d097c360e01b81523360048201526001600160a01b03909116906340d097c390602401600060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050508080610a3c90611b34565b9150506109cc565b506040805182815242602082015233917fb7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938910160405180910390a25050600160025550565b6000610a948161157b565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526001602081905260409091200154610ad38161157b565b610add8383611588565b505050565b6001600160a01b0381163314610b525760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106c6565b610b5c82826115f3565b5050565b600080610b6c8461062f565b90506000610b7982611268565b9050856001600160a01b0316610b8f8286610caa565b6001600160a01b0316149695505050505050565b6003546040805163d5abeb0160e01b815290516000926001600160a01b03169163d5abeb019160048083019260209291908290030181865afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611ab4565b905090565b6000610c218161157b565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c4f8161157b565b50600055565b6000610c608161157b565b5060038054911515600160a01b0260ff60a01b19909216919091179055565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080600080610cb985610d29565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610d14573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008060008351604114610d7f5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016106c6565b50505060208101516040820151606090920151909260009190911a90565b600354604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610bed573d6000803e3d6000fd5b60008281526001602081905260409091200154610e038161157b565b610add83836115f3565b6002805403610e5e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c6565b60028055610e6a6112cd565b15610eae5760405162461bcd60e51b81526020600482015260146024820152732730b3b0a5b4b239903bb0b9902830bab9b2b21760611b60448201526064016106c6565b600354600160a01b900460ff161515600114610f0c5760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206e6f74206f70656e20746f206d696e742e000000000060448201526064016106c6565b323314610f5b5760405162461bcd60e51b815260206004820152601b60248201527f6861686120436f6e74726163742063616e27742063616c6c206d65000000000060448201526064016106c6565b3360009081526007602052604090205460ff161515600103610fb95760405162461bcd60e51b81526020600482015260176024820152762cb7ba9030b9329030b63932b0b23c9036b4b73a32b21760491b60448201526064016106c6565b610457610fc4610d9d565b610fcf906001611a9c565b106110115760405162461bcd60e51b815260206004820152601260248201527113dd995c8814dd5c1c1b1e48105b5bdd5b9d60721b60448201526064016106c6565b6003546040805163d539139360e01b815290516001600160a01b03909216916391d1485491839163d5391393916004808201926020929091908290030181865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611ab4565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401602060405180830381865afa1580156110c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ed9190611acd565b151560011461110e5760405162461bcd60e51b81526004016106c690611aea565b600454604080516020601f850181900481028201810190925283815261115b926001600160a01b0316913391908690869081908401838280828437600092019190915250610b6092505050565b6111b25760405162461bcd60e51b815260206004820152602260248201527f556e617574686f72697a6564205075626c69634d696e74205468697320557365604482015261391760f11b60648201526084016106c6565b3360008181526007602052604090819020805460ff1916600117905560035490516340d097c360e01b815260048101929092526001600160a01b0316906340d097c390602401600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b50506040514281523392507fab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b915060200160405180910390a250506001600255565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c0161065c565b60006112ae8161157b565b5060038054911515600160a81b0260ff60a81b19909216919091179055565b60035460408051635c975abb60e01b815290516000926001600160a01b031691635c975abb9160048083019260209291908290030181865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190611acd565b6060600061134a836002611b4d565b611355906002611a9c565b67ffffffffffffffff81111561136d5761136d611868565b6040519080825280601f01601f191660200182016040528015611397576020820181803683370190505b509050600360fc1b816000815181106113b2576113b2611b6c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113e1576113e1611b6c565b60200101906001600160f81b031916908160001a9053506000611405846002611b4d565b611410906001611a9c565b90505b6001811115611488576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061144457611444611b6c565b1a60f81b82828151811061145a5761145a611b6c565b60200101906001600160f81b031916908160001a90535060049490941c9361148181611b82565b9050611413565b5083156114d75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c6565b9392505050565b6000805481036114f057506000611573565b6115708585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250546040516bffffffffffffffffffffffff1960608b901b1660208201526034810189905290935060540191506115559050565b6040516020818303038152906040528051906020012061165a565b90505b949350505050565b6115858133611670565b50565b6115928282610c7f565b610b5c5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6115fd8282610c7f565b15610b5c5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261166785846116d4565b14949350505050565b61167a8282610c7f565b610b5c57611692816001600160a01b0316601461133b565b61169d83602061133b565b6040516020016116ae929190611bc9565b60408051601f198184030181529082905262461bcd60e51b82526106c691600401611c3e565b600081815b84518110156117405760008582815181106116f6576116f6611b6c565b6020026020010151905080831161171c576000838152602082905260409020925061172d565b600081815260208490526040902092505b508061173881611b34565b9150506116d9565b509392505050565b60006020828403121561175a57600080fd5b81356001600160e01b0319811681146114d757600080fd5b6001600160a01b038116811461158557600080fd5b60006020828403121561179957600080fd5b81356114d781611772565b6000602082840312156117b657600080fd5b5035919050565b6000806000604084860312156117d257600080fd5b833567ffffffffffffffff808211156117ea57600080fd5b818601915086601f8301126117fe57600080fd5b81358181111561180d57600080fd5b8760208260051b850101111561182257600080fd5b6020928301989097509590910135949350505050565b6000806040838503121561184b57600080fd5b82359150602083013561185d81611772565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261188f57600080fd5b813567ffffffffffffffff808211156118aa576118aa611868565b604051601f8301601f19908116603f011681019082821181831017156118d2576118d2611868565b816040528381528660208588010111156118eb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561192057600080fd5b833561192b81611772565b9250602084013561193b81611772565b9150604084013567ffffffffffffffff81111561195757600080fd5b6119638682870161187e565b9150509250925092565b801515811461158557600080fd5b60006020828403121561198d57600080fd5b81356114d78161196d565b600080604083850312156119ab57600080fd5b82359150602083013567ffffffffffffffff8111156119c957600080fd5b6119d58582860161187e565b9150509250929050565b6000602082840312156119f157600080fd5b813567ffffffffffffffff811115611a0857600080fd5b6115738482850161187e565b60008060208385031215611a2757600080fd5b823567ffffffffffffffff80821115611a3f57600080fd5b818501915085601f830112611a5357600080fd5b813581811115611a6257600080fd5b866020828501011115611a7457600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611aaf57611aaf611a86565b500190565b600060208284031215611ac657600080fd5b5051919050565b600060208284031215611adf57600080fd5b81516114d78161196d565b6020808252602a908201527f5468697320436f6e7472616374206e6f742068617665207065726d697373696f60408201526937103a379036b4b73a1760b11b606082015260800190565b600060018201611b4657611b46611a86565b5060010190565b6000816000190483118215151615611b6757611b67611a86565b500290565b634e487b7160e01b600052603260045260246000fd5b600081611b9157611b91611a86565b506000190190565b60005b83811015611bb4578181015183820152602001611b9c565b83811115611bc3576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c01816017850160208801611b99565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611c32816028840160208801611b99565b01602801949350505050565b6020815260008251806020840152611c5d816040850160208701611b99565b601f01601f1916919091016040019291505056fea2646970667358221220f89fae7d77ba9ce5ab030d50c1817c4d0c75e2b945ab9c9c60cf1df1cc17250d64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C19E783 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA7BB5803 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF055C7A9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF055C7A9 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x5A3 JUMPI DUP1 PUSH4 0xFADE63C9 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0xFF0938A7 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xDE6892C8 EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x94F4504D EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x80506494 EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2904E6D9 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x4C0F38C2 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x5997BBEE EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2904E6D9 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x2C8A1926 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F5AC1B2 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x27C25C20 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x11C67EFC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x1B0D2D3B EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x190B JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1998 JUMP JUMPDEST PUSH2 0xCAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x4FF CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xD9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x328 PUSH2 0x565 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A14 JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x17A4 JUMP JUMPDEST PUSH2 0x1268 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x629 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x6DB PUSH2 0x12CD JUMP JUMPDEST ISZERO PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2730B3B0A5B4B239903BB0B9902830BAB9B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x77D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH2 0x789 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x793 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST LT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F76657220737570706C79 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x935 DUP4 DUP4 CALLER DUP5 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65642057686974656C6973744D696E74205468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2AB9B2B917 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9C3 SWAP1 DUP5 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA3C SWAP1 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xB7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA94 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xAD3 DUP2 PUSH2 0x157B JUMP JUMPDEST PUSH2 0xADD DUP4 DUP4 PUSH2 0x1588 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0xB5C DUP3 DUP3 PUSH2 0x15F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6C DUP5 PUSH2 0x62F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB79 DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F DUP3 DUP7 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xD5ABEB01 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4F DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xCB9 DUP6 PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0xD7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xE03 DUP2 PUSH2 0x157B JUMP JUMPDEST PUSH2 0xADD DUP4 DUP4 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0xE6A PUSH2 0x12CD JUMP JUMPDEST ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2730B3B0A5B4B239903BB0B9902830BAB9B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST ORIGIN CALLER EQ PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6861686120436F6E74726163742063616E27742063616C6C206D650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x457 PUSH2 0xFC4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0xFCF SWAP1 PUSH1 0x1 PUSH2 0x1A9C JUMP JUMPDEST LT PUSH2 0x1011 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13DD995C8814DD5C1C1B1E48105B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x91D14854 SWAP2 DUP4 SWAP2 PUSH4 0xD5391393 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1063 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10ED SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C6 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP6 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP4 DUP2 MSTORE PUSH2 0x115B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xB60 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A6564205075626C69634D696E74205468697320557365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6C6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x40D097C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40D097C3 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xAB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x65C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP2 PUSH2 0x157B JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C975ABB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5C975ABB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1317 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x134A DUP4 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1355 SWAP1 PUSH1 0x2 PUSH2 0x1A9C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1397 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x13B2 JUMPI PUSH2 0x13B2 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH2 0x13E1 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1405 DUP5 PUSH1 0x2 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1410 SWAP1 PUSH1 0x1 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1488 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1444 JUMPI PUSH2 0x1444 PUSH2 0x1B6C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x145A JUMPI PUSH2 0x145A PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1481 DUP2 PUSH2 0x1B82 JUMP JUMPDEST SWAP1 POP PUSH2 0x1413 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SUB PUSH2 0x14F0 JUMPI POP PUSH1 0x0 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1570 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x54 ADD SWAP2 POP PUSH2 0x1555 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x165A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 CALLER PUSH2 0x1670 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1592 DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x15FD DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1667 DUP6 DUP5 PUSH2 0x16D4 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x167A DUP3 DUP3 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH2 0x1692 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x169D DUP4 PUSH1 0x20 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16AE SWAP3 SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6C6 SWAP2 PUSH1 0x4 ADD PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16F6 JUMPI PUSH2 0x16F6 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x171C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP PUSH2 0x172D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1738 DUP2 PUSH2 0x1B34 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x14D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x185D DUP2 PUSH2 0x1772 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18AA PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18D2 JUMPI PUSH2 0x18D2 PUSH2 0x1868 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x192B DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x193B DUP2 PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1963 DUP7 DUP3 DUP8 ADD PUSH2 0x187E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D5 DUP6 DUP3 DUP7 ADD PUSH2 0x187E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1573 DUP5 DUP3 DUP6 ADD PUSH2 0x187E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AAF JUMPI PUSH2 0x1AAF PUSH2 0x1A86 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D7 DUP2 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320436F6E7472616374206E6F742068617665207065726D697373696F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x37103A379036B4B73A17 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B46 JUMPI PUSH2 0x1B46 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B67 PUSH2 0x1A86 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B91 JUMPI PUSH2 0x1B91 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BB4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B9C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C01 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B99 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1C32 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B99 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 SWAP16 0xAE PUSH30 0x77BA9CE5AB030D50C1817C4D0C75E2B945AB9C9C60CF1DF1CC17250D6473 PUSH16 0x6C634300080F00330000000000000000 ",
							"sourceMap": "277:3900:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;-1:-1:-1;2606:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;2606:202:0;;;;;;;;413:24:10;;;;;;;;;;-1:-1:-1;413:24:10;;;;-1:-1:-1;;;413:24:10;;;;;;3578:134;;;;;;;;;;-1:-1:-1;3578:134:10;;;;;:::i;:::-;-1:-1:-1;;;;;3673:31:10;3646:7;3673:31;;;:24;:31;;;;;;;3578:134;;;;1031:25:13;;;1019:2;1004:18;3578:134:10;885:177:13;99:160:11;;;;;;;;;;-1:-1:-1;99:160:11;;;;;:::i;:::-;;:::i;480:21:10:-;;;;;;;;;;-1:-1:-1;480:21:10;;;;-1:-1:-1;;;;;480:21:10;;;;;;-1:-1:-1;;;;;1413:32:13;;;1395:51;;1383:2;1368:18;480:21:10;1249:203:13;4391:129:0;;;;;;;;;;-1:-1:-1;4391:129:0;;;;;:::i;:::-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;;4391:129;370:36:10;;;;;;;;;;-1:-1:-1;370:36:10;;;;-1:-1:-1;;;;;370:36:10;;;1787:874;;;;;;:::i;:::-;;:::i;:::-;;1132:136;;;;;;;;;;-1:-1:-1;1132:136:10;;;;;:::i;:::-;;:::i;161:25:12:-;;;;;;;;;;;;;;;;4770:145:0;;;;;;;;;;-1:-1:-1;4770:145:0;;;;;:::i;:::-;;:::i;5787:214::-;;;;;;;;;;-1:-1:-1;5787:214:0;;;;;:::i;:::-;;:::i;769:350:11:-;;;;;;;;;;-1:-1:-1;769:350:11;;;;;:::i;:::-;;:::i;3961:108:10:-;;;;;;;;;;;;;:::i;3451:119::-;;;;;;;;;;-1:-1:-1;3451:119:10;;;;;:::i;:::-;-1:-1:-1;;;;;3537:25:10;3513:4;3537:25;;;:18;:25;;;;;;;;;3451:119;1280:107;;;;;;;;;;-1:-1:-1;1280:107:10;;;;;:::i;:::-;;:::i;1654:123::-;;;;;;;;;;-1:-1:-1;1654:123:10;;;;;:::i;:::-;;:::i;1528:114::-;;;;;;;;;;-1:-1:-1;1528:114:10;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;;;;;-1:-1:-1;2895:145:0;;;;;:::i;:::-;;:::i;444:27:10:-;;;;;;;;;;-1:-1:-1;444:27:10;;;;-1:-1:-1;;;444:27:10;;;;;;1127:274:11;;;;;;;;;;-1:-1:-1;1127:274:11;;;;;:::i;:::-;;:::i;2027:49:0:-;;;;;;;;;;-1:-1:-1;2027:49:0;2072:4;2027:49;;1409:891:11;;;;;;;;;;-1:-1:-1;1409:891:11;;;;;:::i;:::-;;:::i;:::-;;;;5897:25:13;;;5953:2;5938:18;;5931:34;;;;6013:4;6001:17;5981:18;;;5974:45;5885:2;5870:18;1409:891:11;5699:326:13;3841:112:10;;;;;;;;;;;;;:::i;5149:147:0:-;;;;;;;;;;-1:-1:-1;5149:147:0;;;;;:::i;:::-;;:::i;2669:774:10:-;;;;;;:::i;:::-;;:::i;3720:113::-;;;;;;;;;;-1:-1:-1;3720:113:10;;;;;:::i;:::-;-1:-1:-1;;;;;3803:22:10;3779:4;3803:22;;;:15;:22;;;;;;;;;3720:113;267:494:11;;;;;;;;;;-1:-1:-1;267:494:11;;;;;:::i;:::-;;:::i;1396:124:10:-;;;;;;;;;;-1:-1:-1;1396:124:10;;;;;:::i;:::-;;:::i;4077:97::-;;;;;;;;;;;;;:::i;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:7;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;99:160:11:-;212:38;;-1:-1:-1;;6853:2:13;6849:15;;;6845:24;;212:38:11;;;6833:37:13;244:4:11;6904:15:13;;6900:24;6886:12;;;6879:46;175:7:11;;6941:12:13;;212:38:11;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;1787:874:10:-;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;7166:2:13;2317:63:2;;;7148:21:13;7205:2;7185:18;;;7178:30;7244:33;7224:18;;;7217:61;7295:18;;2317:63:2;;;;;;;;;1744:1;2455:18;;1062:9:10::1;:7;:9::i;:::-;:18;1054:50;;;::::0;-1:-1:-1;;;1054:50:10;;7526:2:13;1054:50:10::1;::::0;::::1;7508:21:13::0;7565:2;7545:18;;;7538:30;-1:-1:-1;;;7584:18:13;;;7577:50;7644:18;;1054:50:10::1;7324:344:13::0;1054:50:10::1;1913:15:::2;::::0;-1:-1:-1;;;1913:15:10;::::2;;;:23;;1932:4;1913:23;1905:63;;;::::0;-1:-1:-1;;;1905:63:10;;7875:2:13;1905:63:10::2;::::0;::::2;7857:21:13::0;7914:2;7894:18;;;7887:30;7953:29;7933:18;;;7926:57;8000:18;;1905:63:10::2;7673:351:13::0;1905:63:10::2;2016:4;2006:7;1987:16;:14;:16::i;:::-;:26;;;;:::i;:::-;:33;1979:57;;;::::0;-1:-1:-1;;;1979:57:10;;8496:2:13;1979:57:10::2;::::0;::::2;8478:21:13::0;8535:2;8515:18;;;8508:30;-1:-1:-1;;;8554:18:13;;;8547:41;8605:18;;1979:57:10::2;8294:335:13::0;1979:57:10::2;2073:10;3513:4:::0;3537:25;;;:18;:25;;;;;;;;2055:37:::2;;2088:4;2055:37:::0;2047:73:::2;;;::::0;-1:-1:-1;;;2047:73:10;;8836:2:13;2047:73:10::2;::::0;::::2;8818:21:13::0;8875:2;8855:18;;;8848:30;-1:-1:-1;;;8894:18:13;;;8887:53;8957:18;;2047:73:10::2;8634:347:13::0;2047:73:10::2;2139:16;::::0;2164:30:::2;::::0;;-1:-1:-1;;;2164:30:10;;;;-1:-1:-1;;;;;2139:16:10;;::::2;::::0;:24:::2;::::0;:16;;2164:28:::2;::::0;:30:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;2139:16;2164:30:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2139:70;::::0;-1:-1:-1;;;;;;2139:70:10::2;::::0;;;;;;::::2;::::0;::::2;9349:25:13::0;;;;2203:4:10::2;9390:18:13::0;;;9383:60;9322:18;;2139:70:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;2213:4;2139:78;2131:132;;;;-1:-1:-1::0;;;2131:132:10::2;;;;;;;:::i;:::-;2282:44;2294:12;;2307:10;2318:7;2282:11;:44::i;:::-;2274:94;;;::::0;-1:-1:-1;;;2274:94:10;;10317:2:13;2274:94:10::2;::::0;::::2;10299:21:13::0;10356:2;10336:18;;;10329:30;10395:34;10375:18;;;10368:62;-1:-1:-1;;;10446:18:13;;;10439:35;10491:19;;2274:94:10::2;10115:401:13::0;2274:94:10::2;2400:10;2381:30;::::0;;;:18:::2;:30;::::0;;;;;;;:37;;-1:-1:-1;;2381:37:10::2;2414:4;2381:37;::::0;;2429:24:::2;:36:::0;;;;;:47;;2469:7;;2381:30;2429:47:::2;::::0;2469:7;;2429:47:::2;:::i;:::-;::::0;;;-1:-1:-1;2493:6:10::2;::::0;-1:-1:-1;2489:96:10::2;2508:7;2505:1;:10;2489:96;;;2536:16;::::0;:37:::2;::::0;-1:-1:-1;;;2536:37:10;;2562:10:::2;2536:37;::::0;::::2;1395:51:13::0;-1:-1:-1;;;;;2536:16:10;;::::2;::::0;:25:::2;::::0;1368:18:13;;2536:37:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2517:3;;;;;:::i;:::-;;;;2489:96;;;-1:-1:-1::0;2602:51:10::2;::::0;;10835:25:13;;;2637:15:10::2;10891:2:13::0;10876:18;;10869:34;2618:10:10::2;::::0;2602:51:::2;::::0;10808:18:13;2602:51:10::2;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;-1:-1:-1;1787:874:10:o;1132:136::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1232:16:10::1;:28:::0;;-1:-1:-1;;;;;;1232:28:10::1;-1:-1:-1::0;;;;;1232:28:10;;;::::1;::::0;;;::::1;::::0;;1132:136::o;4770:145:0:-;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;5787:214::-;-1:-1:-1;;;;;5882:23:0;;719:10:4;5882:23:0;5874:83;;;;-1:-1:-1;;;5874:83:0;;11116:2:13;5874:83:0;;;11098:21:13;11155:2;11135:18;;;11128:30;11194:34;11174:18;;;11167:62;-1:-1:-1;;;11245:18:13;;;11238:45;11300:19;;5874:83:0;10914:411:13;5874:83:0;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;769:350:11:-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:11;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:11;;;769:350;-1:-1:-1;;;;;;769:350:11:o;3961:108:10:-;4033:16;;:28;;;-1:-1:-1;;;4033:28:10;;;;4006:7;;-1:-1:-1;;;;;4033:16:10;;:26;;:28;;;;;;;;;;;;;;:16;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4026:35;;3961:108;:::o;1280:107::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1363:6:10::1;:16:::0;;-1:-1:-1;;;;;;1363:16:10::1;-1:-1:-1::0;;;;;1363:16:10;;;::::1;::::0;;;::::1;::::0;;1280:107::o;1654:123::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1745:10:10::1;:24:::0;1654:123::o;1528:114::-;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1612:12:10::1;:22:::0;;;::::1;;-1:-1:-1::0;;;1612:22:10::1;-1:-1:-1::0;;;;1612:22:10;;::::1;::::0;;;::::1;::::0;;1528:114::o;2895:145:0:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;1127:274:11:-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;11746:25:13;;;11819:4;11807:17;;11787:18;;;11780:45;;;;11841:18;;;11834:34;;;11884:18;;;11877:34;;;1272:60:11;;-1:-1:-1;1272:60:11;;-1:-1:-1;1272:60:11;-1:-1:-1;1352:41:11;;11718:19:13;;1352:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:11;;-1:-1:-1;;1352:41:11;;;1127:274;-1:-1:-1;;;;;;;1127:274:11:o;1409:891::-;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:11;;12124:2:13;1596:53:11;;;12106:21:13;12163:2;12143:18;;;12136:30;12202:26;12182:18;;;12175:54;12246:18;;1596:53:11;11922:348:13;1596:53:11;-1:-1:-1;;;2058:2:11;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;3841:112:10:-;3915:16;;:30;;;-1:-1:-1;;;3915:30:10;;;;3888:7;;-1:-1:-1;;;;;3915:16:10;;:28;;:30;;;;;;;;;;;;;;:16;:30;;;;;;;;;;;;;;5149:147:0;4465:7;4491:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;2669:774:10:-:0;1744:1:2;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:2;;7166:2:13;2317:63:2;;;7148:21:13;7205:2;7185:18;;;7178:30;7244:33;7224:18;;;7217:61;7295:18;;2317:63:2;6964:355:13;2317:63:2;1744:1;2455:18;;1062:9:10::1;:7;:9::i;:::-;:18;1054:50;;;::::0;-1:-1:-1;;;1054:50:10;;7526:2:13;1054:50:10::1;::::0;::::1;7508:21:13::0;7565:2;7545:18;;;7538:30;-1:-1:-1;;;7584:18:13;;;7577:50;7644:18;;1054:50:10::1;7324:344:13::0;1054:50:10::1;2766:12:::2;::::0;-1:-1:-1;;;2766:12:10;::::2;;;:20;;2782:4;2766:20;2758:60;;;::::0;-1:-1:-1;;;2758:60:10;;7875:2:13;2758:60:10::2;::::0;::::2;7857:21:13::0;7914:2;7894:18;;;7887:30;7953:29;7933:18;;;7926:57;8000:18;;2758:60:10::2;7673:351:13::0;2758:60:10::2;2837:9;2850:10;2837:23;2829:63;;;::::0;-1:-1:-1;;;2829:63:10;;12477:2:13;2829:63:10::2;::::0;::::2;12459:21:13::0;12516:2;12496:18;;;12489:30;12555:29;12535:18;;;12528:57;12602:18;;2829:63:10::2;12275:351:13::0;2829:63:10::2;2926:10;3779:4:::0;3803:22;;;:15;:22;;;;;;;;2911:34:::2;;2941:4;2911:34:::0;2903:70:::2;;;::::0;-1:-1:-1;;;2903:70:10;;8836:2:13;2903:70:10::2;::::0;::::2;8818:21:13::0;8875:2;8855:18;;;8848:30;-1:-1:-1;;;8894:18:13;;;8887:53;8957:18;;2903:70:10::2;8634:347:13::0;2903:70:10::2;3015:4;2992:16;:14;:16::i;:::-;:20;::::0;3011:1:::2;2992:20;:::i;:::-;:27;2984:57;;;::::0;-1:-1:-1;;;2984:57:10;;12833:2:13;2984:57:10::2;::::0;::::2;12815:21:13::0;12872:2;12852:18;;;12845:30;-1:-1:-1;;;12891:18:13;;;12884:48;12949:18;;2984:57:10::2;12631:342:13::0;2984:57:10::2;3060:16;::::0;3085:30:::2;::::0;;-1:-1:-1;;;3085:30:10;;;;-1:-1:-1;;;;;3060:16:10;;::::2;::::0;:24:::2;::::0;:16;;3085:28:::2;::::0;:30:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;3060:16;3085:30:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3060:70;::::0;-1:-1:-1;;;;;;3060:70:10::2;::::0;;;;;;::::2;::::0;::::2;9349:25:13::0;;;;3124:4:10::2;9390:18:13::0;;;9383:60;9322:18;;3060:70:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;3134:4;3060:78;3052:132;;;;-1:-1:-1::0;;;3052:132:10::2;;;;;;;:::i;:::-;3210:6;::::0;3203:30:::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;::::2;::::0;-1:-1:-1;;;;;3210:6:10::2;::::0;3217:10:::2;::::0;3203:30;3228:4;;;;;;3203:30;::::2;3228:4:::0;;;;3203:30;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;3203:6:10::2;::::0;-1:-1:-1;;;3203:30:10:i:2;:::-;3195:77;;;::::0;-1:-1:-1;;;3195:77:10;;13180:2:13;3195:77:10::2;::::0;::::2;13162:21:13::0;13219:2;13199:18;;;13192:30;13258:34;13238:18;;;13231:62;-1:-1:-1;;;13309:18:13;;;13302:32;13351:19;;3195:77:10::2;12978:398:13::0;3195:77:10::2;3301:10;3285:27;::::0;;;:15:::2;:27;::::0;;;;;;:34;;-1:-1:-1;;3285:34:10::2;3315:4;3285:34;::::0;;3330:16:::2;::::0;:37;;-1:-1:-1;;;3330:37:10;;::::2;::::0;::::2;1395:51:13::0;;;;-1:-1:-1;;;;;3330:16:10::2;::::0;:25:::2;::::0;1368:18:13;;3330:37:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;3395:40:10::2;::::0;3419:15:::2;1031:25:13::0;;3408:10:10::2;::::0;-1:-1:-1;3395:40:10::2;::::0;-1:-1:-1;1019:2:13;1004:18;3395:40:10::2;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;2669:774:10:o;267:494:11:-;611:127;;13623:66:13;611:127:11;;;13611:79:13;13706:12;;;13699:28;;;370:7:11;;13743:12:13;;611:127:11;13381:380:13;1396:124:10;2072:4:0;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;1487:15:10::1;:25:::0;;;::::1;;-1:-1:-1::0;;;1487:25:10::1;-1:-1:-1::0;;;;1487:25:10;;::::1;::::0;;;::::1;::::0;;1396:124::o;4077:97::-;4141:16;;:25;;;-1:-1:-1;;;4141:25:10;;;;4117:4;;-1:-1:-1;;;;;4141:16:10;;:23;;:25;;;;;;;;;;;;;;:16;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1588:441:5:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:5;;1688:47;;-1:-1:-1;;;1745:6:5;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:5;;;;;;;;;-1:-1:-1;;;1770:6:5;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:5;;;;;;;;-1:-1:-1;1800:9:5;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:5;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:5;;;;;;;;-1:-1:-1;1915:1:5;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:5;;1936:55;;;;-1:-1:-1;;;1936:55:5;;14414:2:13;1936:55:5;;;14396:21:13;;;14433:18;;;14426:30;14492:34;14472:18;;;14465:62;14544:18;;1936:55:5;14212:356:13;1936:55:5;2015:6;1588:441;-1:-1:-1;;;1588:441:5:o;195:403:12:-;332:4;353:10;;:15;;349:60;;-1:-1:-1;392:5:12;385:12;;349:60;441:149;478:6;;441:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;503:10:12;542:32;;-1:-1:-1;;14750:2:13;14746:15;;;14742:53;542:32:12;;;14730:66:13;14812:12;;;14805:28;;;503:10:12;;-1:-1:-1;14849:12:13;;;-1:-1:-1;542:32:12;;-1:-1:-1;14573:294:13;542:32:12;;;;;;;;;;;;;532:43;;;;;;441:18;:149::i;:::-;421:169;;195:403;;;;;;;:::o;3334:103:0:-;3400:30;3411:4;719:10:4;3400::0;:30::i;:::-;3334:103;:::o;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:12;;;;7397:4;7365:12;;;;;;;;-1:-1:-1;;;;;7365:29:0;;;;;;;;;;:36;;-1:-1:-1;;7365:36:0;;;;;;;7420:40;;719:10:4;;7365:12:0;;7420:40;;7365:12;7420:40;7244:233;;:::o;7602:234::-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7723:29:0;;;;;;;;;;:37;;-1:-1:-1;;7723:37:0;;;7779:40;719:10:4;;7723:12:0;;7779:40;;7755:5;7779:40;7602:234;;:::o;1154:184:6:-;1275:4;1327;1298:25;1311:5;1318:4;1298:12;:25::i;:::-;:33;;1154:184;-1:-1:-1;;;;1154:184:6:o;3718:492:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;1689:662:6:-;1772:7;1814:4;1772:7;1828:488;1852:5;:12;1848:1;:16;1828:488;;;1885:20;1908:5;1914:1;1908:8;;;;;;;;:::i;:::-;;;;;;;1885:31;;1950:12;1934;:28;1930:376;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2060:57;;1930:376;;;2425:13;2473:15;;;2508:4;2501:15;;;2554:4;2538:21;;2234:57;;1930:376;-1:-1:-1;1866:3:6;;;;:::i;:::-;;;;1828:488;;;-1:-1:-1;2332:12:6;1689:662;-1:-1:-1;;;1689:662:6:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:13;;562:42;;552:70;;618:1;615;608:12;633:247;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;819:31;844:5;819:31;:::i;1457:180::-;1516:6;1569:2;1557:9;1548:7;1544:23;1540:32;1537:52;;;1585:1;1582;1575:12;1537:52;-1:-1:-1;1608:23:13;;1457:180;-1:-1:-1;1457:180:13:o;1870:689::-;1965:6;1973;1981;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;2090:9;2077:23;2119:18;2160:2;2152:6;2149:14;2146:34;;;2176:1;2173;2166:12;2146:34;2214:6;2203:9;2199:22;2189:32;;2259:7;2252:4;2248:2;2244:13;2240:27;2230:55;;2281:1;2278;2271:12;2230:55;2321:2;2308:16;2347:2;2339:6;2336:14;2333:34;;;2363:1;2360;2353:12;2333:34;2418:7;2411:4;2401:6;2398:1;2394:14;2390:2;2386:23;2382:34;2379:47;2376:67;;;2439:1;2436;2429:12;2376:67;2470:4;2462:13;;;;2494:6;;-1:-1:-1;2532:20:13;;;;2519:34;;1870:689;-1:-1:-1;;;;1870:689:13:o;2836:315::-;2904:6;2912;2965:2;2953:9;2944:7;2940:23;2936:32;2933:52;;;2981:1;2978;2971:12;2933:52;3017:9;3004:23;2994:33;;3077:2;3066:9;3062:18;3049:32;3090:31;3115:5;3090:31;:::i;:::-;3140:5;3130:15;;;2836:315;;;;;:::o;3156:127::-;3217:10;3212:3;3208:20;3205:1;3198:31;3248:4;3245:1;3238:15;3272:4;3269:1;3262:15;3288:718;3330:5;3383:3;3376:4;3368:6;3364:17;3360:27;3350:55;;3401:1;3398;3391:12;3350:55;3437:6;3424:20;3463:18;3500:2;3496;3493:10;3490:36;;;3506:18;;:::i;:::-;3581:2;3575:9;3549:2;3635:13;;-1:-1:-1;;3631:22:13;;;3655:2;3627:31;3623:40;3611:53;;;3679:18;;;3699:22;;;3676:46;3673:72;;;3725:18;;:::i;:::-;3765:10;3761:2;3754:22;3800:2;3792:6;3785:18;3846:3;3839:4;3834:2;3826:6;3822:15;3818:26;3815:35;3812:55;;;3863:1;3860;3853:12;3812:55;3927:2;3920:4;3912:6;3908:17;3901:4;3893:6;3889:17;3876:54;3974:1;3967:4;3962:2;3954:6;3950:15;3946:26;3939:37;3994:6;3985:15;;;;;;3288:718;;;;:::o;4011:596::-;4097:6;4105;4113;4166:2;4154:9;4145:7;4141:23;4137:32;4134:52;;;4182:1;4179;4172:12;4134:52;4221:9;4208:23;4240:31;4265:5;4240:31;:::i;:::-;4290:5;-1:-1:-1;4347:2:13;4332:18;;4319:32;4360:33;4319:32;4360:33;:::i;:::-;4412:7;-1:-1:-1;4470:2:13;4455:18;;4442:32;4497:18;4486:30;;4483:50;;;4529:1;4526;4519:12;4483:50;4552:49;4593:7;4584:6;4573:9;4569:22;4552:49;:::i;:::-;4542:59;;;4011:596;;;;;:::o;4612:118::-;4698:5;4691:13;4684:21;4677:5;4674:32;4664:60;;4720:1;4717;4710:12;4735:241;4791:6;4844:2;4832:9;4823:7;4819:23;4815:32;4812:52;;;4860:1;4857;4850:12;4812:52;4899:9;4886:23;4918:28;4940:5;4918:28;:::i;4981:388::-;5058:6;5066;5119:2;5107:9;5098:7;5094:23;5090:32;5087:52;;;5135:1;5132;5125:12;5087:52;5171:9;5158:23;5148:33;;5232:2;5221:9;5217:18;5204:32;5259:18;5251:6;5248:30;5245:50;;;5291:1;5288;5281:12;5245:50;5314:49;5355:7;5346:6;5335:9;5331:22;5314:49;:::i;:::-;5304:59;;;4981:388;;;;;:::o;5374:320::-;5442:6;5495:2;5483:9;5474:7;5470:23;5466:32;5463:52;;;5511:1;5508;5501:12;5463:52;5551:9;5538:23;5584:18;5576:6;5573:30;5570:50;;;5616:1;5613;5606:12;5570:50;5639:49;5680:7;5671:6;5660:9;5656:22;5639:49;:::i;6030:591::-;6100:6;6108;6161:2;6149:9;6140:7;6136:23;6132:32;6129:52;;;6177:1;6174;6167:12;6129:52;6217:9;6204:23;6246:18;6287:2;6279:6;6276:14;6273:34;;;6303:1;6300;6293:12;6273:34;6341:6;6330:9;6326:22;6316:32;;6386:7;6379:4;6375:2;6371:13;6367:27;6357:55;;6408:1;6405;6398:12;6357:55;6448:2;6435:16;6474:2;6466:6;6463:14;6460:34;;;6490:1;6487;6480:12;6460:34;6535:7;6530:2;6521:6;6517:2;6513:15;6509:24;6506:37;6503:57;;;6556:1;6553;6546:12;6503:57;6587:2;6579:11;;;;;6609:6;;-1:-1:-1;6030:591:13;;-1:-1:-1;;;;6030:591:13:o;8029:127::-;8090:10;8085:3;8081:20;8078:1;8071:31;8121:4;8118:1;8111:15;8145:4;8142:1;8135:15;8161:128;8201:3;8232:1;8228:6;8225:1;8222:13;8219:39;;;8238:18;;:::i;:::-;-1:-1:-1;8274:9:13;;8161:128::o;8986:184::-;9056:6;9109:2;9097:9;9088:7;9084:23;9080:32;9077:52;;;9125:1;9122;9115:12;9077:52;-1:-1:-1;9148:16:13;;8986:184;-1:-1:-1;8986:184:13:o;9454:245::-;9521:6;9574:2;9562:9;9553:7;9549:23;9545:32;9542:52;;;9590:1;9587;9580:12;9542:52;9622:9;9616:16;9641:28;9663:5;9641:28;:::i;9704:406::-;9906:2;9888:21;;;9945:2;9925:18;;;9918:30;9984:34;9979:2;9964:18;;9957:62;-1:-1:-1;;;10050:2:13;10035:18;;10028:40;10100:3;10085:19;;9704:406::o;10521:135::-;10560:3;10581:17;;;10578:43;;10601:18;;:::i;:::-;-1:-1:-1;10648:1:13;10637:13;;10521:135::o;13766:168::-;13806:7;13872:1;13868;13864:6;13860:14;13857:1;13854:21;13849:1;13842:9;13835:17;13831:45;13828:71;;;13879:18;;:::i;:::-;-1:-1:-1;13919:9:13;;13766:168::o;13939:127::-;14000:10;13995:3;13991:20;13988:1;13981:31;14031:4;14028:1;14021:15;14055:4;14052:1;14045:15;14071:136;14110:3;14138:5;14128:39;;14147:18;;:::i;:::-;-1:-1:-1;;;14183:18:13;;14071:136::o;14872:258::-;14944:1;14954:113;14968:6;14965:1;14962:13;14954:113;;;15044:11;;;15038:18;15025:11;;;15018:39;14990:2;14983:10;14954:113;;;15085:6;15082:1;15079:13;15076:48;;;15120:1;15111:6;15106:3;15102:16;15095:27;15076:48;;14872:258;;;:::o;15135:786::-;15546:25;15541:3;15534:38;15516:3;15601:6;15595:13;15617:62;15672:6;15667:2;15662:3;15658:12;15651:4;15643:6;15639:17;15617:62;:::i;:::-;-1:-1:-1;;;15738:2:13;15698:16;;;15730:11;;;15723:40;15788:13;;15810:63;15788:13;15859:2;15851:11;;15844:4;15832:17;;15810:63;:::i;:::-;15893:17;15912:2;15889:26;;15135:786;-1:-1:-1;;;;15135:786:13:o;15926:383::-;16075:2;16064:9;16057:21;16038:4;16107:6;16101:13;16150:6;16145:2;16134:9;16130:18;16123:34;16166:66;16225:6;16220:2;16209:9;16205:18;16200:2;16192:6;16188:15;16166:66;:::i;:::-;16293:2;16272:15;-1:-1:-1;;16268:29:13;16253:45;;;;16300:2;16249:54;;15926:383;-1:-1:-1;;15926:383:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1467000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "306",
								"getEthSignedMessageHash(bytes32)": "522",
								"getMaxSupply()": "infinite",
								"getMessageHash(address)": "592",
								"getRoleAdmin(bytes32)": "2540",
								"getTotalSupply()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2698",
								"isPause()": "infinite",
								"isPublicMinted(address)": "2576",
								"isPublicOpen()": "2385",
								"isWhitelistMinted(address)": "2643",
								"isWhitelistMintedAmount(address)": "2622",
								"isWhitelistOpen()": "2383",
								"merkleRoot()": "2385",
								"nagaKidsContract()": "2449",
								"publicMint(bytes)": "infinite",
								"recoverSigner(bytes32,bytes)": "infinite",
								"renounceRole(bytes32,address)": "29045",
								"revokeRole(bytes32,address)": "infinite",
								"setMerkleRoot(bytes32)": "infinite",
								"setNagaKidsContract(address)": "infinite",
								"setPublicOpen(bool)": "infinite",
								"setSigner(address)": "infinite",
								"setWhitelistMintOpen(bool)": "infinite",
								"signer()": "2405",
								"splitSignature(bytes)": "infinite",
								"supportsInterface(bytes4)": "473",
								"verify(address,address,bytes)": "infinite",
								"whitelistMint(bytes32[],uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 818,
									"end": 1017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 887,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 928,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 887,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 887,
									"end": 929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 887,
									"end": 929,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 887,
									"end": 929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 940,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 960,
									"end": 969,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 940,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 940,
									"end": 970,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 970,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 995,
									"end": 1006,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 981,
									"end": 994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 981,
									"end": 1007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1007,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 981,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 818,
									"end": 1017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1132,
									"end": 1268,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1132,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1232,
									"end": 1248,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1232,
									"end": 1260,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1232,
									"end": 1260,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1654,
									"end": 1777,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1654,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2505,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2505,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1755,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1769,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1654,
									"end": 1777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3411,
									"end": 3415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 3400,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 3400,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 3400,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3334,
									"end": 3437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 3718,
									"end": 4210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3801,
									"end": 4204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 4017,
									"end": 4024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4027,
									"end": 4029,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551801"
								},
								{
									"begin": 3989,
									"end": 4008,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 3989,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551801"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 4101,
									"end": 4139,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 3896,
									"end": 4161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 4161,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 3844,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3844,
									"end": 4193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1676,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1724,
									"end": 1730,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1720,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1720,
									"end": 1734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1720,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1710,
									"end": 1735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATASIZE",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "CALLDATACOPY",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1751,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1752,
									"end": 1753,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1745,
									"end": 1754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1760,
									"name": "POP",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1778,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1770,
									"end": 1779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1779,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1770,
									"end": 1785,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1800,
									"end": 1809,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1816,
									"end": 1822,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1812,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1812,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1812,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1812,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1826,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1832,
									"end": 1833,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1828,
									"end": 1829,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1833,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "181899199A1A9B1B9C1CB0B131B232B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1879,
									"end": 1884,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1890,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1879,
									"end": 1890,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1866,
									"end": 1891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 1866,
									"end": 1891,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1861,
									"end": 1862,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1854,
									"end": 1863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1863,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1891,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1915,
									"end": 1916,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1916,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1835,
									"end": 1838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1795,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1954,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2877,
									"end": 2879,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2859,
									"end": 2880,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2859,
									"end": 2880,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2859,
									"end": 2880,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2889,
									"end": 2919,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2955,
									"end": 2989,
									"name": "PUSH",
									"source": 13,
									"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
								},
								{
									"begin": 2935,
									"end": 2953,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2935,
									"end": 2953,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2935,
									"end": 2953,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2928,
									"end": 2990,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3007,
									"end": 3025,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3007,
									"end": 3025,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2675,
									"end": 3031,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1936,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2015,
									"end": 2021,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1588,
									"end": 2029,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1588,
									"end": 2029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 385,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 385,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 113,
									"end": 119,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 127,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 174,
									"end": 176,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 171,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 153,
									"end": 160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 149,
									"end": 172,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 145,
									"end": 177,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 142,
									"end": 194,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 142,
									"end": 194,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 142,
									"end": 194,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 190,
									"end": 191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 188,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 180,
									"end": 192,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 142,
									"end": 194,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 142,
									"end": 194,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 232,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 232,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 261,
									"end": 292,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 261,
									"end": 292,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 251,
									"end": 293,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 293,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 241,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 241,
									"end": 311,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 307,
									"end": 308,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 305,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 297,
									"end": 309,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 241,
									"end": 311,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 241,
									"end": 311,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 375,
									"end": 377,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 360,
									"end": 378,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 354,
									"end": 379,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 330,
									"end": 335,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 330,
									"end": 335,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 354,
									"end": 379,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 354,
									"end": 379,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 390,
									"end": 648,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 390,
									"end": 648,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 462,
									"end": 463,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 472,
									"end": 585,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 472,
									"end": 585,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 486,
									"end": 492,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 483,
									"end": 484,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 480,
									"end": 493,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 472,
									"end": 585,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 472,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 472,
									"end": 585,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 562,
									"end": 573,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 573,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 573,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 556,
									"end": 574,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 543,
									"end": 554,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 543,
									"end": 554,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 543,
									"end": 554,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 536,
									"end": 575,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 501,
									"end": 511,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 472,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 472,
									"end": 585,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 472,
									"end": 585,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 472,
									"end": 585,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 603,
									"end": 609,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 600,
									"end": 601,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 597,
									"end": 610,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 594,
									"end": 642,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 594,
									"end": 642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 594,
									"end": 642,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 638,
									"end": 639,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 624,
									"end": 627,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 620,
									"end": 636,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 613,
									"end": 640,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 594,
									"end": 642,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 594,
									"end": 642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 594,
									"end": 642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 390,
									"end": 648,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 390,
									"end": 648,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 390,
									"end": 648,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 390,
									"end": 648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 653,
									"end": 1439,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 653,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1064,
									"end": 1089,
									"name": "PUSH",
									"source": 13,
									"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
								},
								{
									"begin": 1059,
									"end": 1062,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1052,
									"end": 1090,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1034,
									"end": 1037,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1126,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1190,
									"end": 1196,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1180,
									"end": 1183,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1173,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1157,
									"end": 1174,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1135,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1197,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1135,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1034B99036B4B9B9B4B733903937B6329"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1256,
									"end": 1258,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1216,
									"end": 1232,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1232,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1232,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1248,
									"end": 1259,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1248,
									"end": 1259,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1248,
									"end": 1259,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1241,
									"end": 1281,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1306,
									"end": 1319,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1306,
									"end": 1319,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1306,
									"end": 1319,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1379,
									"name": "PUSH",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1369,
									"end": 1380,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1369,
									"end": 1380,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1362,
									"end": 1366,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1328,
									"end": 1391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1391,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1328,
									"end": 1391,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1411,
									"end": 1428,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1430,
									"end": 1432,
									"name": "PUSH",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1407,
									"end": 1433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1407,
									"end": 1433,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 653,
									"end": 1439,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 653,
									"end": 1439,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1827,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1444,
									"end": 1827,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1595,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1591,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1575,
									"end": 1596,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1556,
									"end": 1560,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1619,
									"end": 1632,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1668,
									"end": 1674,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1663,
									"end": 1665,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1661,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1648,
									"end": 1666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1641,
									"end": 1675,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 1743,
									"end": 1749,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1727,
									"end": 1736,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1718,
									"end": 1720,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1706,
									"end": 1721,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 1684,
									"end": 1750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1750,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 1684,
									"end": 1750,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1811,
									"end": 1813,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1790,
									"end": 1805,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1786,
									"end": 1815,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1816,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1816,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1816,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1771,
									"end": 1816,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1820,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1767,
									"end": 1821,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1821,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1827,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1444,
									"end": 1827,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1832,
									"end": 1959,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1832,
									"end": 1959,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1893,
									"end": 1903,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1888,
									"end": 1891,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1884,
									"end": 1904,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1905,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1924,
									"end": 1928,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1921,
									"end": 1922,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1964,
									"end": 2132,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1964,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2004,
									"end": 2011,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2071,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2066,
									"end": 2067,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2062,
									"end": 2068,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2072,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2055,
									"end": 2056,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2052,
									"end": 2073,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2047,
									"end": 2048,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2040,
									"end": 2049,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2033,
									"end": 2050,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2029,
									"end": 2074,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2026,
									"end": 2097,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2026,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2026,
									"end": 2097,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2077,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2077,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2077,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2077,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2077,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2117,
									"end": 2126,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2126,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1964,
									"end": 2132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2137,
									"end": 2265,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2137,
									"end": 2265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2177,
									"end": 2180,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2204,
									"end": 2210,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2201,
									"end": 2202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2198,
									"end": 2211,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2234,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2195,
									"end": 2234,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2214,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2214,
									"end": 2232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2232,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2214,
									"end": 2232,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2250,
									"end": 2259,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2250,
									"end": 2259,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2137,
									"end": 2265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2270,
									"end": 2397,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 2270,
									"end": 2397,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2331,
									"end": 2341,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2322,
									"end": 2342,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2319,
									"end": 2320,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2312,
									"end": 2343,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2362,
									"end": 2366,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2359,
									"end": 2360,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2352,
									"end": 2367,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2386,
									"end": 2390,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2383,
									"end": 2384,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2376,
									"end": 2391,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2402,
									"end": 2529,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2402,
									"end": 2529,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2463,
									"end": 2473,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2458,
									"end": 2461,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2454,
									"end": 2474,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2444,
									"end": 2475,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2494,
									"end": 2498,
									"name": "PUSH",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2491,
									"end": 2492,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2484,
									"end": 2499,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2518,
									"end": 2522,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2515,
									"end": 2516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2534,
									"end": 2670,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2534,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2573,
									"end": 2576,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2601,
									"end": 2606,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2591,
									"end": 2630,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2591,
									"end": 2630,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2610,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2610,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2610,
									"end": 2628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2610,
									"end": 2628,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2610,
									"end": 2628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2646,
									"end": 2664,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2664,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2534,
									"end": 2670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2675,
									"end": 3031,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2675,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 4177,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f89fae7d77ba9ce5ab030d50c1817c4d0c75e2b945ab9c9c60cf1df1cc17250d64736f6c634300080f0033",
									".code": [
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "6C19E783"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "A7BB5803"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "F055C7A9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "F055C7A9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "FA540801"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "FADE63C9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "FF0938A7"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "A7BB5803"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "C4E41B22"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "DE6892C8"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "94F4504D"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "97ABA7F9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "6C19E783"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "7CB64759"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "80506494"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "2904E6D9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "42920A46"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "4C0F38C2"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "5997BBEE"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "2904E6D9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "2C8A1926"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "2EB4A7AB"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "1F5AC1B2"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "1F5AC1B2"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "238AC933"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "27C25C20"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "11C67EFC"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "1B0D2D3B"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 277,
											"end": 4177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 413,
											"end": 437,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 413,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 413,
											"end": 437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 413,
											"end": 437,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 413,
											"end": 437,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3578,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3673,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 885,
											"end": 1062,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 480,
											"end": 501,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1249,
											"end": 1452,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4391,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 406,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 370,
											"end": 406,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 370,
											"end": 406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 370,
											"end": 406,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 370,
											"end": 406,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1787,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1787,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1132,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1132,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3961,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3451,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3570,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1280,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1280,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1654,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1654,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1528,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1528,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 444,
											"end": 471,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 444,
											"end": 471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 444,
											"end": 471,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 444,
											"end": 471,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5897,
											"end": 5922,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5897,
											"end": 5922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5897,
											"end": 5922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6017,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6001,
											"end": 6018,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 5887,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5699,
											"end": 6025,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3841,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5149,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2669,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2669,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3720,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3833,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1396,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1396,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4077,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6849,
											"end": 6864,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6864,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6849,
											"end": 6864,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6869,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 6870,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 6904,
											"end": 6919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6904,
											"end": 6919,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6900,
											"end": 6924,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 6953,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 6941,
											"end": 6953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1787,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7244,
											"end": 7277,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7217,
											"end": 7278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1062,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1062,
											"end": 1071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7526,
											"end": 7528,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7529,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7538,
											"end": 7568,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2730B3B0A5B4B239903BB0B9902830BAB9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7324,
											"end": 7668,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1913,
											"end": 1928,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1936,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1936,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1913,
											"end": 1936,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7877,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7916,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7982,
											"name": "PUSH",
											"source": 13,
											"value": "57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7673,
											"end": 8024,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1905,
											"end": 1968,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2020,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2006,
											"end": 2013,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2003,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1987,
											"end": 2001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1987,
											"end": 2003,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2003,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1987,
											"end": 2003,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1987,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1987,
											"end": 2013,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2020,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2036,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2036,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8535,
											"end": 8537,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8508,
											"end": 8538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F76657220737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8605,
											"end": 8623,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8605,
											"end": 8623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8294,
											"end": 8629,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1979,
											"end": 2036,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2083,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2092,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2092,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2055,
											"end": 2092,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2120,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2047,
											"end": 2120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 2120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8848,
											"end": 8878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8887,
											"end": 8940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8634,
											"end": 8981,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2047,
											"end": 2120,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5391393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 2164,
											"end": 2192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2155,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2164,
											"end": 2194,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2164,
											"end": 2194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2203,
											"end": 2207,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9443,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2209,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2139,
											"end": 2209,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2139,
											"end": 2209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2217,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2217,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2217,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2131,
											"end": 2263,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2131,
											"end": 2263,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2326,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2294,
											"end": 2306,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2306,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2317,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2325,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2293,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2282,
											"end": 2326,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2326,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2282,
											"end": 2326,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10317,
											"end": 10319,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2274,
											"end": 2368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10320,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10356,
											"end": 10358,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10359,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10395,
											"end": 10429,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A65642057686974656C6973744D696E74205468697320"
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10375,
											"end": 10393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10368,
											"end": 10430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB9B2B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10491,
											"end": 10510,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10491,
											"end": 10510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 10115,
											"end": 10516,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2274,
											"end": 2368,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2410,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2381,
											"end": 2411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2418,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2418,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2418,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2414,
											"end": 2418,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2381,
											"end": 2418,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2418,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2429,
											"end": 2465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2465,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2429,
											"end": 2476,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2429,
											"end": 2476,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2476,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2508,
											"end": 2515,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2506,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2515,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2552,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40D097C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2572,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2552,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40D097C3"
										},
										{
											"begin": 2536,
											"end": 2561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2573,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2517,
											"end": 2520,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2520,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2489,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2637,
											"end": 2652,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 10891,
											"end": 10893,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2628,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "B7DF065473D5CF63EF5CF9190DBD326EA5E6FBFE4A0971F4920E430BBFD5A938"
										},
										{
											"begin": 2602,
											"end": 2653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2602,
											"end": 2653,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1132,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1260,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1132,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4894,
											"end": 4898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4883,
											"end": 4908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4883,
											"end": 4908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11116,
											"end": 11118,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11155,
											"end": 11157,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 11135,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11135,
											"end": 11153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11135,
											"end": 11153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11194,
											"end": 11228,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11167,
											"end": 11229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11238,
											"end": 11283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11300,
											"end": 11319,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11300,
											"end": 11319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10914,
											"end": 11325,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5968,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5ABEB01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4059,
											"name": "PUSH",
											"source": 10,
											"value": "D5ABEB01"
										},
										{
											"begin": 4033,
											"end": 4059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4033,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4033,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1280,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1363,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1363,
											"end": 1379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1280,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1654,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1769,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1528,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1634,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11746,
											"end": 11771,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11771,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11819,
											"end": 11823,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11807,
											"end": 11824,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11807,
											"end": 11824,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11825,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11825,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 11859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11834,
											"end": 11868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11834,
											"end": 11868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11834,
											"end": 11868,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11911,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11911,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11718,
											"end": 11737,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11718,
											"end": 11737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12124,
											"end": 12126,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12106,
											"end": 12127,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12163,
											"end": 12165,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12136,
											"end": 12166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12202,
											"end": 12228,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12246,
											"end": 12264,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12246,
											"end": 12264,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 11922,
											"end": 12270,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3841,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3943,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 3915,
											"end": 3943,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3945,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5275,
											"end": 5279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5288,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5263,
											"end": 5289,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2669,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7166,
											"end": 7168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7244,
											"end": 7277,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7217,
											"end": 7278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6964,
											"end": 7319,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1062,
											"end": 1069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1062,
											"end": 1071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1062,
											"end": 1071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7526,
											"end": 7528,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7529,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7538,
											"end": 7568,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2730B3B0A5B4B239903BB0B9902830BAB9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7627,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7324,
											"end": 7668,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1054,
											"end": 1104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2778,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2766,
											"end": 2778,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2782,
											"end": 2786,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2766,
											"end": 2786,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7875,
											"end": 7877,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 2818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7916,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7982,
											"name": "PUSH",
											"source": 13,
											"value": "57686974656C697374206E6F74206F70656E20746F206D696E742E0000000000"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7673,
											"end": 8024,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 2758,
											"end": 2818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2846,
											"modifierDepth": 2,
											"name": "ORIGIN",
											"source": 10
										},
										{
											"begin": 2850,
											"end": 2860,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2860,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2892,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2829,
											"end": 2892,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12477,
											"end": 12479,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2829,
											"end": 2892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12480,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12516,
											"end": 12518,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12519,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12555,
											"end": 12584,
											"name": "PUSH",
											"source": 13,
											"value": "6861686120436F6E74726163742063616E27742063616C6C206D650000000000"
										},
										{
											"begin": 12535,
											"end": 12553,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12535,
											"end": 12553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12602,
											"end": 12620,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12602,
											"end": 12620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 12275,
											"end": 12626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2829,
											"end": 2892,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2936,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3803,
											"end": 3825,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2945,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2945,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2945,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2903,
											"end": 2973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2973,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 2973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8848,
											"end": 8878,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B9329030B63932B0B23C9036B4B73A32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8887,
											"end": 8940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 8634,
											"end": 8981,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2903,
											"end": 2973,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2992,
											"end": 3008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2992,
											"end": 3006,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2992,
											"end": 3008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2992,
											"end": 3008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2992,
											"end": 3012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2992,
											"end": 3012,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3012,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2992,
											"end": 3012,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3019,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3041,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12833,
											"end": 12835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2984,
											"end": 3041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12815,
											"end": 12836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12872,
											"end": 12874,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 12852,
											"end": 12870,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12852,
											"end": 12870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12852,
											"end": 12870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12845,
											"end": 12875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DD995C8814DD5C1C1B1E48105B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12891,
											"end": 12909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12932,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12949,
											"end": 12967,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12949,
											"end": 12967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 12631,
											"end": 12973,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2984,
											"end": 3041,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D5391393"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3113,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D5391393"
										},
										{
											"begin": 3085,
											"end": 3113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3076,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3085,
											"end": 3115,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3085,
											"end": 3115,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3128,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9443,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9322,
											"end": 9340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3060,
											"end": 3130,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3060,
											"end": 3130,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3138,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3138,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3134,
											"end": 3138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3060,
											"end": 3138,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3052,
											"end": 3184,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3052,
											"end": 3184,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3210,
											"end": 3216,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3227,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3203,
											"end": 3233,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3203,
											"end": 3233,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3272,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3272,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13180,
											"end": 13182,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3195,
											"end": 3272,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13162,
											"end": 13183,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13221,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13192,
											"end": 13222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13258,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "556E617574686F72697A6564205075626C69634D696E74205468697320557365"
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13231,
											"end": 13293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13370,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13351,
											"end": 13370,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 12978,
											"end": 13376,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3195,
											"end": 3272,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3311,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3300,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3285,
											"end": 3312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3312,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3319,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3319,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3319,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3285,
											"end": 3319,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3319,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3330,
											"end": 3346,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40D097C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3330,
											"end": 3346,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40D097C3"
										},
										{
											"begin": 3330,
											"end": 3355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3330,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3434,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3418,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "AB9980FB1D2916BCE9017EDD1BE458E3F56D0899B3367CB3A8BE97483FBE069B"
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3435,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 3443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13623,
											"end": 13689,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13611,
											"end": 13690,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13706,
											"end": 13718,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 13706,
											"end": 13718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13706,
											"end": 13718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13699,
											"end": 13727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13699,
											"end": 13727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13699,
											"end": 13727,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13743,
											"end": 13755,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 13743,
											"end": 13755,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 13381,
											"end": 13761,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 1396,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1487,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1487,
											"end": 1512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1512,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4077,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C975ABB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4121,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4164,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 4141,
											"end": 4164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4141,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 1720,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1720,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1710,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1745,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1770,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 1812,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1812,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1866,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1854,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 1835,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14414,
											"end": 14416,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14396,
											"end": 14417,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14396,
											"end": 14417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14396,
											"end": 14417,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14433,
											"end": 14451,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14433,
											"end": 14451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14433,
											"end": 14451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14426,
											"end": 14456,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14526,
											"name": "PUSH",
											"source": 13,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 14472,
											"end": 14490,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14472,
											"end": 14490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14472,
											"end": 14490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14465,
											"end": 14527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14544,
											"end": 14562,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14544,
											"end": 14562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 14212,
											"end": 14568,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 195,
											"end": 598,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 195,
											"end": 598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 332,
											"end": 336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 363,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 353,
											"end": 363,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 353,
											"end": 368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 353,
											"end": 368,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 349,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 349,
											"end": 409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 392,
											"end": 397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 385,
											"end": 397,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 349,
											"end": 409,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 349,
											"end": 409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14750,
											"end": 14752,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14746,
											"end": 14761,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14761,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14761,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14795,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14730,
											"end": 14796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14812,
											"end": 14824,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 14812,
											"end": 14824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14812,
											"end": 14824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14833,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 503,
											"end": 513,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14849,
											"end": 14861,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 14849,
											"end": 14861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14849,
											"end": 14861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14573,
											"end": 14867,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 542,
											"end": 574,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 542,
											"end": 574,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 532,
											"end": 575,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 441,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 441,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 441,
											"end": 590,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 441,
											"end": 590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 421,
											"end": 590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 421,
											"end": 590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 195,
											"end": 598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 195,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7327,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7244,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7685,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 1298,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1298,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1331,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1338,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3989,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4101,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 3896,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3844,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 1908,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1962,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1930,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1866,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 1828,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 628,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 497,
											"end": 628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 572,
											"end": 603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 572,
											"end": 603,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 562,
											"end": 604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 562,
											"end": 604,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 552,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 552,
											"end": 622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 608,
											"end": 620,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 633,
											"end": 880,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 633,
											"end": 880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 742,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 724,
											"end": 731,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 720,
											"end": 743,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 716,
											"end": 748,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 751,
											"end": 763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 713,
											"end": 765,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 800,
											"end": 809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 787,
											"end": 810,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 819,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 819,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 819,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1555,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1567,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1540,
											"end": 1572,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1587,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1537,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1608,
											"end": 1631,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1631,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2559,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1870,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1965,
											"end": 1971,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2020,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2009,
											"end": 2032,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2005,
											"end": 2037,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2002,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2149,
											"end": 2163,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 2146,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2221,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2266,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2244,
											"end": 2257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2267,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2230,
											"end": 2285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2271,
											"end": 2283,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2285,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2230,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2324,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2347,
											"end": 2349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2350,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2367,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 2333,
											"end": 2367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2365,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2333,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 2333,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2425,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2394,
											"end": 2408,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2382,
											"end": 2416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2426,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2443,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 2376,
											"end": 2443,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2441,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2443,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 2376,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2475,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2475,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2475,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2532,
											"end": 2552,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2532,
											"end": 2552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2532,
											"end": 2552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2532,
											"end": 2552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2519,
											"end": 2553,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2519,
											"end": 2553,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 2559,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1870,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2951,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2963,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2968,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 2983,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 2933,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3027,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2994,
											"end": 3027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2994,
											"end": 3027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3049,
											"end": 3081,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 3115,
											"end": 3120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3090,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 3090,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3283,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3156,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3217,
											"end": 3227,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3208,
											"end": 3228,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3252,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3276,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3277,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3360,
											"end": 3387,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3350,
											"end": 3405,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3405,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 3350,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3444,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 3490,
											"end": 3526,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3506,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3551,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3635,
											"end": 3648,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3635,
											"end": 3648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3631,
											"end": 3653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3653,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3663,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3679,
											"end": 3697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3679,
											"end": 3697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3679,
											"end": 3697,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3722,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3745,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 3673,
											"end": 3745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3725,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3775,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3792,
											"end": 3798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3849,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 3850,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3867,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3812,
											"end": 3867,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3867,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 3812,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3920,
											"end": 3924,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3901,
											"end": 3905,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3930,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3950,
											"end": 3965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 3972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 3976,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3288,
											"end": 4006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4113,
											"end": 4119,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4145,
											"end": 4152,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4141,
											"end": 4164,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4169,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4186,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4134,
											"end": 4186,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4184,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4186,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 4134,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4208,
											"end": 4231,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 4240,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4271,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 4240,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 4360,
											"end": 4393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4360,
											"end": 4393,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 4360,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4419,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4474,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4516,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4533,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4483,
											"end": 4533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4533,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 4483,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4573,
											"end": 4582,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 4552,
											"end": 4601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4552,
											"end": 4601,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 4552,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4730,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 4612,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4698,
											"end": 4703,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4677,
											"end": 4682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4674,
											"end": 4706,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 4664,
											"end": 4724,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4710,
											"end": 4722,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4976,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4735,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4846,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4830,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4842,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4815,
											"end": 4847,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4864,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4812,
											"end": 4864,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4858,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4862,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4864,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 4812,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4909,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 4940,
											"end": 4945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 4918,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5107,
											"end": 5116,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5098,
											"end": 5105,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5122,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5139,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 5087,
											"end": 5139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5139,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 5087,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5181,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5236,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5278,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5295,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 5245,
											"end": 5295,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5293,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5295,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 5245,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5314,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5694,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5374,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5483,
											"end": 5492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5481,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5470,
											"end": 5493,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5466,
											"end": 5498,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 5463,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5551,
											"end": 5560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5561,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5602,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5603,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5570,
											"end": 5620,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5570,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5570,
											"end": 5620,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5570,
											"end": 5620,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5570,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5680,
											"end": 5687,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5671,
											"end": 5677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5639,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6030,
											"end": 6621,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6030,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6147,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6136,
											"end": 6159,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6164,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6181,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 6129,
											"end": 6181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6181,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 6129,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6204,
											"end": 6227,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6276,
											"end": 6290,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6301,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6293,
											"end": 6305,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6386,
											"end": 6393,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6375,
											"end": 6377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6394,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 6357,
											"end": 6412,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6410,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6412,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 6357,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6451,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6477,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6492,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6535,
											"end": 6542,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6519,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6543,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6560,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 6503,
											"end": 6560,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6546,
											"end": 6558,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6560,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 6503,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6030,
											"end": 6621,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8029,
											"end": 8156,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 8029,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8125,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8118,
											"end": 8119,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8111,
											"end": 8126,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8150,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8289,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 8161,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8204,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8222,
											"end": 8235,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8258,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8219,
											"end": 8258,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 8238,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8238,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9170,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 8986,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9111,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9088,
											"end": 9095,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9084,
											"end": 9107,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9080,
											"end": 9112,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9129,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9077,
											"end": 9129,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9115,
											"end": 9127,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9129,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9077,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9148,
											"end": 9164,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9148,
											"end": 9164,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9699,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 9454,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9574,
											"end": 9576,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9553,
											"end": 9560,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9572,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9545,
											"end": 9577,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9542,
											"end": 9594,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9542,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 9542,
											"end": 9594,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9588,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9592,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9542,
											"end": 9594,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 9542,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9632,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9641,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 9663,
											"end": 9668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9641,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 9641,
											"end": 9669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 10110,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 9704,
											"end": 10110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9909,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9945,
											"end": 9947,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9918,
											"end": 9948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9984,
											"end": 10018,
											"name": "PUSH",
											"source": 13,
											"value": "5468697320436F6E7472616374206E6F742068617665207065726D697373696F"
										},
										{
											"begin": 9979,
											"end": 9981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 10019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37103A379036B4B73A17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10050,
											"end": 10052,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10028,
											"end": 10068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10100,
											"end": 10103,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10085,
											"end": 10104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 10110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10521,
											"end": 10656,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 10521,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10560,
											"end": 10563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 10578,
											"end": 10621,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 10601,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 10601,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10637,
											"end": 10650,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10637,
											"end": 10650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10521,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13934,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 13766,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13806,
											"end": 13813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13872,
											"end": 13873,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13864,
											"end": 13870,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13860,
											"end": 13874,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13854,
											"end": 13875,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13849,
											"end": 13850,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13842,
											"end": 13851,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13831,
											"end": 13876,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13828,
											"end": 13899,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13828,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13828,
											"end": 13899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 13879,
											"end": 13897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13879,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13919,
											"end": 13928,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 13928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13939,
											"end": 14066,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 13939,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14000,
											"end": 14010,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 13995,
											"end": 13998,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13991,
											"end": 14011,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13988,
											"end": 13989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 14012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14035,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 14028,
											"end": 14029,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14021,
											"end": 14036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14055,
											"end": 14059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14052,
											"end": 14053,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14060,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14207,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 14071,
											"end": 14207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14110,
											"end": 14113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14138,
											"end": 14143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14128,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14128,
											"end": 14167,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 14147,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14183,
											"end": 14201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14183,
											"end": 14201,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 15130,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14872,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14944,
											"end": 14945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14968,
											"end": 14974,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14965,
											"end": 14966,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14962,
											"end": 14975,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15056,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15036,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15018,
											"end": 15057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14990,
											"end": 14992,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14983,
											"end": 14993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 14954,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15085,
											"end": 15091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15082,
											"end": 15083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15092,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15111,
											"end": 15117,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15109,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15118,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15076,
											"end": 15124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 15130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 15130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 15130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14872,
											"end": 15130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15135,
											"end": 15921,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 15135,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 15571,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 15541,
											"end": 15544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15534,
											"end": 15572,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15516,
											"end": 15519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15601,
											"end": 15607,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 15672,
											"end": 15678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15667,
											"end": 15669,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 15662,
											"end": 15665,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15658,
											"end": 15670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15651,
											"end": 15655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15643,
											"end": 15649,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15639,
											"end": 15656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 15617,
											"end": 15679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15679,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 15617,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15738,
											"end": 15740,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 15698,
											"end": 15714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15714,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15730,
											"end": 15741,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15730,
											"end": 15741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15730,
											"end": 15741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15723,
											"end": 15763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15801,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15788,
											"end": 15801,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15810,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 15788,
											"end": 15801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 15861,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15851,
											"end": 15862,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15851,
											"end": 15862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15832,
											"end": 15849,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15832,
											"end": 15849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15810,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 15810,
											"end": 15873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15810,
											"end": 15873,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 15810,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15893,
											"end": 15910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15912,
											"end": 15914,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15889,
											"end": 15915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 15915,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15135,
											"end": 15921,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15135,
											"end": 15921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15926,
											"end": 16309,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 15926,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16075,
											"end": 16077,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16064,
											"end": 16073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16057,
											"end": 16078,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16038,
											"end": 16042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16107,
											"end": 16113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16101,
											"end": 16114,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16150,
											"end": 16156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16145,
											"end": 16147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16134,
											"end": 16143,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16123,
											"end": 16157,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16166,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 16225,
											"end": 16231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16220,
											"end": 16222,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16209,
											"end": 16218,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16205,
											"end": 16223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16200,
											"end": 16202,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16192,
											"end": 16198,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16188,
											"end": 16203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16166,
											"end": 16232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 16166,
											"end": 16232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16166,
											"end": 16232,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 16166,
											"end": 16232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16293,
											"end": 16295,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16272,
											"end": 16287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16268,
											"end": 16297,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16253,
											"end": 16298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16253,
											"end": 16298,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16253,
											"end": 16298,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16253,
											"end": 16298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16300,
											"end": 16302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16249,
											"end": 16303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16249,
											"end": 16303,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15926,
											"end": 16309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15926,
											"end": 16309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidsNFT.sol",
								"MintNagaKids.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMaxSupply()": "4c0f38c2",
							"getMessageHash(address)": "1f5ac1b2",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalSupply()": "c4e41b22",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isPause()": "ff0938a7",
							"isPublicMinted(address)": "f055c7a9",
							"isPublicOpen()": "11c67efc",
							"isWhitelistMinted(address)": "5997bbee",
							"isWhitelistMintedAmount(address)": "1b0d2d3b",
							"isWhitelistOpen()": "94f4504d",
							"merkleRoot()": "2eb4a7ab",
							"nagaKidsContract()": "27c25c20",
							"publicMint(bytes)": "de6892c8",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setMerkleRoot(bytes32)": "7cb64759",
							"setNagaKidsContract(address)": "2c8a1926",
							"setPublicOpen(bool)": "80506494",
							"setSigner(address)": "6c19e783",
							"setWhitelistMintOpen(bool)": "fade63c9",
							"signer()": "238ac933",
							"splitSignature(bytes)": "a7bb5803",
							"supportsInterface(bytes4)": "01ffc9a7",
							"verify(address,address,bytes)": "42920a46",
							"whitelistMint(bytes32[],uint256)": "2904e6d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract INagaKidsNFT\",\"name\":\"_nagaKids\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PublicMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WhitelistMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isPublicMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPublicOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelistMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelistMintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nagaKidsContract\",\"outputs\":[{\"internalType\":\"contract INagaKidsNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INagaKidsNFT\",\"name\":\"_nagaKids\",\"type\":\"address\"}],\"name\":\"setNagaKidsContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"setPublicOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isOpen\",\"type\":\"bool\"}],\"name\":\"setWhitelistMintOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proofMerkle\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"whitelistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MintNagaKids.sol\":\"MintNagaKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"INagaKidsNFT.sol\":{\"keccak256\":\"0xe96108ed4b125ef13341e3ac371d44cc3b1cea2b277a2a1bfcf11f0b9b121c32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5a04eafc03ad2e9905ebd2878263af3daf1a5f6ac2a49ba3d5a82d0fc1b544\",\"dweb:/ipfs/QmeCQGpp4fiCGq68L2mFqGYCx6S1iDmHBUciJj1SEdqJB1\"]},\"MintNagaKids.sol\":{\"keccak256\":\"0xa09354b1a10cce2184f3bfdd017429fad79057ae61ee932b52a56e084ac02e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f025ab1dd138833ccf0f7cb17bbe65eb1f68d016e0f0537c0757ba06e6f405cd\",\"dweb:/ipfs/QmSt4yCjdPFPEW3p85VsuydrStESH4aHg7uxiu7wcQynAt\"]},\"VerifySignature.sol\":{\"keccak256\":\"0xeb2b2d1d8bcce32bb58f628eb83abd605d782fb594107e23cde2c6a60cec8ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3bb714697d808302d945dd1aa580191998c2d8400c0b46af83eb930cb3e8bbd\",\"dweb:/ipfs/Qmds4fcezGFSqzhtpHjjyKwd4GcPE3wP7Vwwro2Foq5cmR\"]},\"Whitelist.sol\":{\"keccak256\":\"0x3c4c5dc32634034c6f37fc379525c3e3e89fc48e1a788ddb9fa82e027b4eb489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://080dc62e901a60d391d3eae01cd0d25a8581a79196452f84d129234bf421bc76\",\"dweb:/ipfs/QmNb4H54fDhAmpv41eLnb1jB1frUpAexRtESTpVCHJx9PU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1498,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes32"
							},
							{
								"astId": 24,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 403,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 976,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "nagaKidsContract",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INagaKidsNFT)958"
							},
							{
								"astId": 978,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "isPublicOpen",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 980,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "isWhitelistOpen",
								"offset": 21,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 982,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "signer",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 986,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_isWhitelistMinted",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 990,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_isWhitelistMintedAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 994,
								"contract": "MintNagaKids.sol:MintNagaKids",
								"label": "_isPublicMinted",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(INagaKidsNFT)958": {
								"encoding": "inplace",
								"label": "contract INagaKidsNFT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "MintNagaKids.sol:MintNagaKids",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "MintNagaKids.sol:MintNagaKids",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"VerifySignature.sol": {
				"VerifySignature": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VerifySignature.sol\":61:2303  contract VerifySignature {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VerifySignature.sol\":61:2303  contract VerifySignature {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f5ac1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42920a46\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_4:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":2058:2072   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2051:2073   */\n      iszero\n        /* \"#utility.yul\":2033:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2021:2023   */\n      0x20\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      tag_12\n        /* \"#utility.yul\":1893:2080   */\n      jump\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_5:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2642:2674   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2624:2675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2612:2614   */\n      0x20\n        /* \"#utility.yul\":2597:2615   */\n      add\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      tag_12\n        /* \"#utility.yul\":2478:2681   */\n      jump\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3209:3234   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3250:3268   */\n      dup5\n      add\n        /* \"#utility.yul\":3243:3277   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3325:3329   */\n      0xff\n        /* \"#utility.yul\":3313:3330   */\n      and\n        /* \"#utility.yul\":3293:3311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3286:3331   */\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x60\n        /* \"#utility.yul\":3182:3200   */\n      add\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      tag_12\n        /* \"#utility.yul\":3011:3337   */\n      jump\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_7:\n      tag_8\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n    tag_11:\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3754:3756   */\n      0x60\n        /* \"#utility.yul\":3750:3765   */\n      dup4\n      dup2\n      shl\n        /* \"#utility.yul\":3746:3770   */\n      dup3\n      and\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n      0x20\n      dup5\n      add\n        /* \"#utility.yul\":3734:3771   */\n      mstore\n        /* \"VerifySignature.sol\":244:248  this */\n      address\n        /* \"#utility.yul\":3805:3820   */\n      swap1\n      shl\n        /* \"#utility.yul\":3801:3825   */\n      and\n        /* \"#utility.yul\":3787:3799   */\n      0x34\n      dup3\n      add\n        /* \"#utility.yul\":3780:3826   */\n      mstore\n        /* \"VerifySignature.sol\":175:182  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":3842:3854   */\n      0x48\n      add\n        /* \"VerifySignature.sol\":212:250  abi.encodePacked(_user, address(this)) */\n    tag_38:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"VerifySignature.sol\":202:251  keccak256(abi.encodePacked(_user, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"VerifySignature.sol\":195:251  return keccak256(abi.encodePacked(_user, address(this))) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":99:259  function getMessageHash(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n    tag_17:\n        /* \"VerifySignature.sol\":896:900  bool */\n      0x00\n        /* \"VerifySignature.sol\":913:932  bytes32 messageHash */\n      dup1\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      tag_41\n        /* \"VerifySignature.sol\":950:955  _user */\n      dup5\n        /* \"VerifySignature.sol\":935:949  getMessageHash */\n      tag_11\n        /* \"VerifySignature.sol\":935:956  getMessageHash(_user) */\n      jump\t// in\n    tag_41:\n        /* \"VerifySignature.sol\":913:956  bytes32 messageHash = getMessageHash(_user) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":967:995  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      tag_42\n        /* \"VerifySignature.sol\":1022:1033  messageHash */\n      dup3\n        /* \"VerifySignature.sol\":998:1021  getEthSignedMessageHash */\n      tag_35\n        /* \"VerifySignature.sol\":998:1034  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_42:\n        /* \"VerifySignature.sol\":967:1034  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"VerifySignature.sol\":1104:1111  _signer */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      tag_43\n        /* \"VerifySignature.sol\":1068:1088  ethSignedMessageHash */\n      dup3\n        /* \"VerifySignature.sol\":1090:1099  signature */\n      dup7\n        /* \"VerifySignature.sol\":1054:1067  recoverSigner */\n      tag_23\n        /* \"VerifySignature.sol\":1054:1100  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VerifySignature.sol\":1054:1111  recoverSigner(ethSignedMessageHash, signature) == _signer */\n      and\n      eq\n      swap7\n        /* \"VerifySignature.sol\":769:1119  function verify(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n    tag_23:\n        /* \"VerifySignature.sol\":1252:1259  address */\n      0x00\n        /* \"VerifySignature.sol\":1273:1282  bytes32 r */\n      dup1\n        /* \"VerifySignature.sol\":1284:1293  bytes32 s */\n      0x00\n        /* \"VerifySignature.sol\":1295:1302  uint8 v */\n      dup1\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      tag_45\n        /* \"VerifySignature.sol\":1321:1331  _signature */\n      dup6\n        /* \"VerifySignature.sol\":1306:1320  splitSignature */\n      tag_29\n        /* \"VerifySignature.sol\":1306:1332  splitSignature(_signature) */\n      jump\t// in\n    tag_45:\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":4092:4117   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":4165:4169   */\n      0xff\n        /* \"#utility.yul\":4153:4170   */\n      dup4\n      and\n        /* \"#utility.yul\":4133:4151   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4126:4171   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4187:4205   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":4180:4214   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4230:4248   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":4223:4257   */\n      dup4\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":1272:1332  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":4064:4083   */\n      0xa0\n      add\n        /* \"VerifySignature.sol\":1352:1393  ecrecover(_ethSignedMessageHash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"VerifySignature.sol\":1127:1401  function recoverSigner(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n    tag_29:\n        /* \"VerifySignature.sol\":1513:1522  bytes32 r */\n      0x00\n        /* \"VerifySignature.sol\":1537:1546  bytes32 s */\n      dup1\n        /* \"VerifySignature.sol\":1561:1568  uint8 v */\n      0x00\n        /* \"VerifySignature.sol\":1604:1607  sig */\n      dup4\n        /* \"VerifySignature.sol\":1604:1614  sig.length */\n      mload\n        /* \"VerifySignature.sol\":1618:1620  65 */\n      0x41\n        /* \"VerifySignature.sol\":1604:1620  sig.length == 65 */\n      eq\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4452:4473   */\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x18\n        /* \"#utility.yul\":4489:4507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4482:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4574   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":4528:4546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4521:4575   */\n      mstore\n        /* \"#utility.yul\":4592:4610   */\n      0x64\n      add\n        /* \"VerifySignature.sol\":1596:1649  require(sig.length == 65, \"invalid signature length\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n      pop\n      pop\n      pop\n        /* \"VerifySignature.sol\":2058:2060  32 */\n      0x20\n        /* \"VerifySignature.sol\":2049:2061  add(sig, 32) */\n      dup2\n      add\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      mload\n        /* \"VerifySignature.sol\":2128:2130  64 */\n      0x40\n        /* \"VerifySignature.sol\":2119:2131  add(sig, 64) */\n      dup3\n      add\n        /* \"VerifySignature.sol\":2113:2132  mload(add(sig, 64)) */\n      mload\n        /* \"VerifySignature.sol\":2235:2237  96 */\n      0x60\n        /* \"VerifySignature.sol\":2226:2238  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"VerifySignature.sol\":2220:2239  mload(add(sig, 96)) */\n      mload\n        /* \"VerifySignature.sol\":2043:2062  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"VerifySignature.sol\":2217:2218  0 */\n      0x00\n        /* \"VerifySignature.sol\":2212:2240  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"VerifySignature.sol\":1409:2300  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"VerifySignature.sol\":267:761  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_35:\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      mload(0x40)\n        /* \"#utility.yul\":4863:4929   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":4851:4930   */\n      mstore\n        /* \"#utility.yul\":4946:4958   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":4939:4967   */\n      dup3\n      swap1\n      mstore\n        /* \"VerifySignature.sol\":370:377  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":4983:4995   */\n      0x5c\n      add\n        /* \"VerifySignature.sol\":611:738  abi.encodePacked(... */\n      tag_38\n        /* \"#utility.yul\":4621:5001   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_57:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_62:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_10:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_64:\n        /* \"#utility.yul\":343:372   */\n      tag_65\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_57\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:692   */\n    tag_58:\n        /* \"#utility.yul\":626:636   */\n      0x4e487b71\n        /* \"#utility.yul\":621:624   */\n      0xe0\n        /* \"#utility.yul\":617:637   */\n      shl\n        /* \"#utility.yul\":614:615   */\n      0x00\n        /* \"#utility.yul\":607:638   */\n      mstore\n        /* \"#utility.yul\":657:661   */\n      0x41\n        /* \"#utility.yul\":654:655   */\n      0x04\n        /* \"#utility.yul\":647:662   */\n      mstore\n        /* \"#utility.yul\":681:685   */\n      0x24\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":671:686   */\n      revert\n        /* \"#utility.yul\":697:1415   */\n    tag_59:\n        /* \"#utility.yul\":739:744   */\n      0x00\n        /* \"#utility.yul\":792:795   */\n      dup3\n        /* \"#utility.yul\":785:789   */\n      0x1f\n        /* \"#utility.yul\":777:783   */\n      dup4\n        /* \"#utility.yul\":773:790   */\n      add\n        /* \"#utility.yul\":769:796   */\n      slt\n        /* \"#utility.yul\":759:814   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":759:814   */\n    tag_69:\n        /* \"#utility.yul\":846:852   */\n      dup2\n        /* \"#utility.yul\":833:853   */\n      calldataload\n        /* \"#utility.yul\":872:890   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":909:911   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      dup3\n        /* \"#utility.yul\":902:912   */\n      gt\n        /* \"#utility.yul\":899:935   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":915:933   */\n      tag_71\n      tag_58\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":990:992   */\n      0x40\n        /* \"#utility.yul\":984:993   */\n      mload\n        /* \"#utility.yul\":958:960   */\n      0x1f\n        /* \"#utility.yul\":1044:1057   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1040:1062   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1064:1066   */\n      0x3f\n        /* \"#utility.yul\":1036:1067   */\n      add\n        /* \"#utility.yul\":1032:1072   */\n      and\n        /* \"#utility.yul\":1020:1073   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1088:1106   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":1108:1130   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1085:1131   */\n      or\n        /* \"#utility.yul\":1082:1154   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1134:1152   */\n      tag_73\n      tag_58\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1174:1184   */\n      dup2\n        /* \"#utility.yul\":1170:1172   */\n      0x40\n        /* \"#utility.yul\":1163:1185   */\n      mstore\n        /* \"#utility.yul\":1209:1211   */\n      dup4\n        /* \"#utility.yul\":1201:1207   */\n      dup2\n        /* \"#utility.yul\":1194:1212   */\n      mstore\n        /* \"#utility.yul\":1255:1258   */\n      dup7\n        /* \"#utility.yul\":1248:1252   */\n      0x20\n        /* \"#utility.yul\":1243:1245   */\n      dup6\n        /* \"#utility.yul\":1235:1241   */\n      dup9\n        /* \"#utility.yul\":1231:1246   */\n      add\n        /* \"#utility.yul\":1227:1253   */\n      add\n        /* \"#utility.yul\":1224:1259   */\n      gt\n        /* \"#utility.yul\":1221:1276   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1272:1273   */\n      0x00\n        /* \"#utility.yul\":1269:1270   */\n      dup1\n        /* \"#utility.yul\":1262:1274   */\n      revert\n        /* \"#utility.yul\":1221:1276   */\n    tag_74:\n        /* \"#utility.yul\":1336:1338   */\n      dup4\n        /* \"#utility.yul\":1329:1333   */\n      0x20\n        /* \"#utility.yul\":1321:1327   */\n      dup8\n        /* \"#utility.yul\":1317:1334   */\n      add\n        /* \"#utility.yul\":1310:1314   */\n      0x20\n        /* \"#utility.yul\":1302:1308   */\n      dup4\n        /* \"#utility.yul\":1298:1315   */\n      add\n        /* \"#utility.yul\":1285:1339   */\n      calldatacopy\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1376:1380   */\n      0x20\n        /* \"#utility.yul\":1371:1373   */\n      dup6\n        /* \"#utility.yul\":1363:1369   */\n      dup4\n        /* \"#utility.yul\":1359:1374   */\n      add\n        /* \"#utility.yul\":1355:1381   */\n      add\n        /* \"#utility.yul\":1348:1385   */\n      mstore\n        /* \"#utility.yul\":1403:1409   */\n      dup1\n        /* \"#utility.yul\":1394:1409   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":697:1415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1888   */\n    tag_16:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1522:1528   */\n      0x00\n        /* \"#utility.yul\":1575:1577   */\n      0x60\n        /* \"#utility.yul\":1563:1572   */\n      dup5\n        /* \"#utility.yul\":1554:1561   */\n      dup7\n        /* \"#utility.yul\":1550:1573   */\n      sub\n        /* \"#utility.yul\":1546:1578   */\n      slt\n        /* \"#utility.yul\":1543:1595   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1588:1589   */\n      dup1\n        /* \"#utility.yul\":1581:1593   */\n      revert\n        /* \"#utility.yul\":1543:1595   */\n    tag_76:\n        /* \"#utility.yul\":1614:1643   */\n      tag_77\n        /* \"#utility.yul\":1633:1642   */\n      dup5\n        /* \"#utility.yul\":1614:1643   */\n      tag_57\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1604:1643   */\n      swap3\n      pop\n        /* \"#utility.yul\":1662:1700   */\n      tag_78\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1685:1694   */\n      dup6\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1662:1700   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1652:1700   */\n      swap2\n      pop\n        /* \"#utility.yul\":1751:1753   */\n      0x40\n        /* \"#utility.yul\":1740:1749   */\n      dup5\n        /* \"#utility.yul\":1736:1754   */\n      add\n        /* \"#utility.yul\":1723:1755   */\n      calldataload\n        /* \"#utility.yul\":1778:1796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1767:1797   */\n      gt\n        /* \"#utility.yul\":1764:1814   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1764:1814   */\n    tag_79:\n        /* \"#utility.yul\":1833:1882   */\n      tag_80\n        /* \"#utility.yul\":1874:1881   */\n      dup7\n        /* \"#utility.yul\":1865:1871   */\n      dup3\n        /* \"#utility.yul\":1854:1863   */\n      dup8\n        /* \"#utility.yul\":1850:1872   */\n      add\n        /* \"#utility.yul\":1833:1882   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1823:1882   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1420:1888   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2473   */\n    tag_22:\n        /* \"#utility.yul\":2162:2168   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup1\n        /* \"#utility.yul\":2223:2225   */\n      0x40\n        /* \"#utility.yul\":2211:2220   */\n      dup4\n        /* \"#utility.yul\":2202:2209   */\n      dup6\n        /* \"#utility.yul\":2198:2221   */\n      sub\n        /* \"#utility.yul\":2194:2226   */\n      slt\n        /* \"#utility.yul\":2191:2243   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2239:2240   */\n      0x00\n        /* \"#utility.yul\":2236:2237   */\n      dup1\n        /* \"#utility.yul\":2229:2241   */\n      revert\n        /* \"#utility.yul\":2191:2243   */\n    tag_83:\n        /* \"#utility.yul\":2275:2284   */\n      dup3\n        /* \"#utility.yul\":2262:2285   */\n      calldataload\n        /* \"#utility.yul\":2252:2285   */\n      swap2\n      pop\n        /* \"#utility.yul\":2336:2338   */\n      0x20\n        /* \"#utility.yul\":2325:2334   */\n      dup4\n        /* \"#utility.yul\":2321:2339   */\n      add\n        /* \"#utility.yul\":2308:2340   */\n      calldataload\n        /* \"#utility.yul\":2363:2381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2355:2361   */\n      dup2\n        /* \"#utility.yul\":2352:2382   */\n      gt\n        /* \"#utility.yul\":2349:2399   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2395:2396   */\n      0x00\n        /* \"#utility.yul\":2392:2393   */\n      dup1\n        /* \"#utility.yul\":2385:2397   */\n      revert\n        /* \"#utility.yul\":2349:2399   */\n    tag_84:\n        /* \"#utility.yul\":2418:2467   */\n      tag_85\n        /* \"#utility.yul\":2459:2466   */\n      dup6\n        /* \"#utility.yul\":2450:2456   */\n      dup3\n        /* \"#utility.yul\":2439:2448   */\n      dup7\n        /* \"#utility.yul\":2435:2457   */\n      add\n        /* \"#utility.yul\":2418:2467   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2408:2467   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2085:2473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3006   */\n    tag_28:\n        /* \"#utility.yul\":2754:2760   */\n      0x00\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2795:2804   */\n      dup3\n        /* \"#utility.yul\":2786:2793   */\n      dup5\n        /* \"#utility.yul\":2782:2805   */\n      sub\n        /* \"#utility.yul\":2778:2810   */\n      slt\n        /* \"#utility.yul\":2775:2827   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2823:2824   */\n      0x00\n        /* \"#utility.yul\":2820:2821   */\n      dup1\n        /* \"#utility.yul\":2813:2825   */\n      revert\n        /* \"#utility.yul\":2775:2827   */\n    tag_88:\n        /* \"#utility.yul\":2863:2872   */\n      dup2\n        /* \"#utility.yul\":2850:2873   */\n      calldataload\n        /* \"#utility.yul\":2896:2914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2888:2894   */\n      dup2\n        /* \"#utility.yul\":2885:2915   */\n      gt\n        /* \"#utility.yul\":2882:2932   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      dup1\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2882:2932   */\n    tag_89:\n        /* \"#utility.yul\":2951:3000   */\n      tag_90\n        /* \"#utility.yul\":2992:2999   */\n      dup5\n        /* \"#utility.yul\":2983:2989   */\n      dup3\n        /* \"#utility.yul\":2972:2981   */\n      dup6\n        /* \"#utility.yul\":2968:2990   */\n      add\n        /* \"#utility.yul\":2951:3000   */\n      tag_59\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2941:3000   */\n      swap5\n        /* \"#utility.yul\":2686:3006   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3522   */\n    tag_34:\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3456   */\n      0x20\n        /* \"#utility.yul\":3442:3451   */\n      dup3\n        /* \"#utility.yul\":3433:3440   */\n      dup5\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3457   */\n      slt\n        /* \"#utility.yul\":3422:3474   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3467:3468   */\n      dup1\n        /* \"#utility.yul\":3460:3472   */\n      revert\n        /* \"#utility.yul\":3422:3474   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":3493:3516   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3342:3522   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH13 0x6176A6C88125F697F6914A0374 PUSH4 0x77EA0AB4 0xC0 PUSH19 0x96500E4A71BFF06FBCF164736F6C634300080F STOP CALLER ",
							"sourceMap": "61:2242:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getEthSignedMessageHash_1413": {
									"entryPoint": 664,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_1397": {
									"entryPoint": 276,
									"id": 1397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@recoverSigner_1471": {
									"entryPoint": 417,
									"id": 1471,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@splitSignature_1492": {
									"entryPoint": 544,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@verify_1444": {
									"entryPoint": 350,
									"id": 1444,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5003:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:13",
														"type": ""
													}
												],
												"src": "383:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "614:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "621:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "626:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "647:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "671:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "671:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "777:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "785:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "792:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:35:13"
															},
															"nodeType": "YulIf",
															"src": "759:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "833:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "827:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "872:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "866:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "913:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "915:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "905:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:10:13"
															},
															"nodeType": "YulIf",
															"src": "899:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "944:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "948:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "990:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "984:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "974:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "1048:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1052:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1044:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1059:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1040:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1040:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1006:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1134:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1134:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1134:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1091:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1103:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1088:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1088:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1111:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1108:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1085:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:46:13"
															},
															"nodeType": "YulIf",
															"src": "1082:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1170:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1174:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1209:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1243:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1231:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1255:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:35:13"
															},
															"nodeType": "YulIf",
															"src": "1221:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1285:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1371:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1359:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1376:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1394:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1403:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1394:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "723:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "739:5:13",
														"type": ""
													}
												],
												"src": "697:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1533:355:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1579:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1588:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1581:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1581:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1554:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:32:13"
															},
															"nodeType": "YulIf",
															"src": "1543:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1604:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1614:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1604:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1652:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1662:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1736:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1723:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1713:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1767:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:30:13"
															},
															"nodeType": "YulIf",
															"src": "1764:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1823:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1854:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1850:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1874:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1833:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:49:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1522:6:13",
														"type": ""
													}
												],
												"src": "1420:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1998:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2010:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1998:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2040:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2065:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2058:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2051:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2033:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1957:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1968:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1979:4:13",
														"type": ""
													}
												],
												"src": "1893:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2181:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2202:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:32:13"
															},
															"nodeType": "YulIf",
															"src": "2191:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2262:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2294:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2298:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2383:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2392:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2395:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2385:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2385:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2385:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:30:13"
															},
															"nodeType": "YulIf",
															"src": "2349:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2408:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2459:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2418:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2139:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2150:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2170:6:13",
														"type": ""
													}
												],
												"src": "2085:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2631:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2646:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2662:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2667:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2658:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2671:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2654:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2559:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2570:4:13",
														"type": ""
													}
												],
												"src": "2478:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2765:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2813:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2813:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2786:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2782:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:32:13"
															},
															"nodeType": "YulIf",
															"src": "2775:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2836:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2850:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2840:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2888:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2885:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:30:13"
															},
															"nodeType": "YulIf",
															"src": "2882:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2941:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2992:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2951:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2731:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2742:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:13",
														"type": ""
													}
												],
												"src": "2686:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3164:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3174:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3174:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3227:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3265:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3308:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3317:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3117:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3128:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3136:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3144:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3155:4:13",
														"type": ""
													}
												],
												"src": "3011:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:32:13"
															},
															"nodeType": "YulIf",
															"src": "3422:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3483:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3506:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3493:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3378:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3389:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3401:6:13",
														"type": ""
													}
												],
												"src": "3342:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3674:186:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3684:41:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:26:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3694:31:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3688:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3754:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3758:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3750:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3750:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3767:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:37:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3791:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3796:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3809:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3813:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3805:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3805:15:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3822:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3835:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3846:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3642:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3647:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3666:3:13",
														"type": ""
													}
												],
												"src": "3527:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4046:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4056:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4068:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4099:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4202:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4250:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4002:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4010:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4018:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4037:4:13",
														"type": ""
													}
												],
												"src": "3865:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4442:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4452:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4548:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4596:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4584:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4433:4:13",
														"type": ""
													}
												],
												"src": "4268:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4858:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4851:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4950:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4955:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4946:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4960:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4976:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4817:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4822:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4833:3:13",
														"type": ""
													}
												],
												"src": "4621:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631f5ac1b21461005c57806342920a461461008257806397aba7f9146100a5578063a7bb5803146100d0578063fa54080114610101575b600080fd5b61006f61006a3660046102ef565b610114565b6040519081526020015b60405180910390f35b6100956100903660046103b4565b61015e565b6040519015158152602001610079565b6100b86100b3366004610412565b6101a1565b6040516001600160a01b039091168152602001610079565b6100e36100de366004610459565b610220565b60408051938452602084019290925260ff1690820152606001610079565b61006f61010f366004610496565b610298565b6040516bffffffffffffffffffffffff19606083811b8216602084015230901b1660348201526000906048015b604051602081830303815290604052805190602001209050919050565b60008061016a84610114565b9050600061017782610298565b9050856001600160a01b031661018d82866101a1565b6001600160a01b0316149695505050505050565b6000806000806101b085610220565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561020b573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000806000835160411461027a5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610141565b80356001600160a01b03811681146102ea57600080fd5b919050565b60006020828403121561030157600080fd5b61030a826102d3565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261033857600080fd5b813567ffffffffffffffff8082111561035357610353610311565b604051601f8301601f19908116603f0116810190828211818310171561037b5761037b610311565b8160405283815286602085880101111561039457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156103c957600080fd5b6103d2846102d3565b92506103e0602085016102d3565b9150604084013567ffffffffffffffff8111156103fc57600080fd5b61040886828701610327565b9150509250925092565b6000806040838503121561042557600080fd5b82359150602083013567ffffffffffffffff81111561044357600080fd5b61044f85828601610327565b9150509250929050565b60006020828403121561046b57600080fd5b813567ffffffffffffffff81111561048257600080fd5b61048e84828501610327565b949350505050565b6000602082840312156104a857600080fd5b503591905056fea2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F5AC1B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x42920A46 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x79 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x496 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE ADDRESS SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16A DUP5 PUSH2 0x114 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D DUP3 DUP7 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B0 DUP6 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP12 SWAP1 MSTORE PUSH1 0xFF DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH2 0x141 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP3 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x353 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x37B JUMPI PUSH2 0x37B PUSH2 0x311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D2 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x3E0 PUSH1 0x20 DUP6 ADD PUSH2 0x2D3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x408 DUP7 DUP3 DUP8 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP3 DUP7 ADD PUSH2 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E DUP5 DUP3 DUP6 ADD PUSH2 0x327 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH13 0x6176A6C88125F697F6914A0374 PUSH4 0x77EA0AB4 0xC0 PUSH19 0x96500E4A71BFF06FBCF164736F6C634300080F STOP CALLER ",
							"sourceMap": "61:2242:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:160;;;;;;:::i;:::-;;:::i;:::-;;;529:25:13;;;517:2;502:18;99:160:11;;;;;;;;769:350;;;;;;:::i;:::-;;:::i;:::-;;;2058:14:13;;2051:22;2033:41;;2021:2;2006:18;769:350:11;1893:187:13;1127:274:11;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2642:32:13;;;2624:51;;2612:2;2597:18;1127:274:11;2478:203:13;1409:891:11;;;;;;:::i;:::-;;:::i;:::-;;;;3209:25:13;;;3265:2;3250:18;;3243:34;;;;3325:4;3313:17;3293:18;;;3286:45;3197:2;3182:18;1409:891:11;3011:326:13;267:494:11;;;;;;:::i;:::-;;:::i;99:160::-;212:38;;-1:-1:-1;;3754:2:13;3750:15;;;3746:24;;212:38:11;;;3734:37:13;244:4:11;3805:15:13;;3801:24;3787:12;;;3780:46;175:7:11;;3842:12:13;;212:38:11;;;;;;;;;;;;;202:49;;;;;;195:56;;99:160;;;:::o;769:350::-;896:4;913:19;935:21;950:5;935:14;:21::i;:::-;913:43;;967:28;998:36;1022:11;998:23;:36::i;:::-;967:67;;1104:7;-1:-1:-1;;;;;1054:57:11;:46;1068:20;1090:9;1054:13;:46::i;:::-;-1:-1:-1;;;;;1054:57:11;;;769:350;-1:-1:-1;;;;;;769:350:11:o;1127:274::-;1252:7;1273:9;1284;1295:7;1306:26;1321:10;1306:14;:26::i;:::-;1352:41;;;;;;;;;;;;4092:25:13;;;4165:4;4153:17;;4133:18;;;4126:45;;;;4187:18;;;4180:34;;;4230:18;;;4223:34;;;1272:60:11;;-1:-1:-1;1272:60:11;;-1:-1:-1;1272:60:11;-1:-1:-1;1352:41:11;;4064:19:13;;1352:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1352:41:11;;-1:-1:-1;;1352:41:11;;;1127:274;-1:-1:-1;;;;;;;1127:274:11:o;1409:891::-;1513:9;1537;1561:7;1604:3;:10;1618:2;1604:16;1596:53;;;;-1:-1:-1;;;1596:53:11;;4470:2:13;1596:53:11;;;4452:21:13;4509:2;4489:18;;;4482:30;4548:26;4528:18;;;4521:54;4592:18;;1596:53:11;;;;;;;;-1:-1:-1;;;2058:2:11;2049:12;;2043:19;2128:2;2119:12;;2113:19;2235:2;2226:12;;;2220:19;2043;;2217:1;2212:28;;;;;1409:891::o;267:494::-;611:127;;4863:66:13;611:127:11;;;4851:79:13;4946:12;;;4939:28;;;370:7:11;;4983:12:13;;611:127:11;4621:380:13;14:173;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:718;739:5;792:3;785:4;777:6;773:17;769:27;759:55;;810:1;807;800:12;759:55;846:6;833:20;872:18;909:2;905;902:10;899:36;;;915:18;;:::i;:::-;990:2;984:9;958:2;1044:13;;-1:-1:-1;;1040:22:13;;;1064:2;1036:31;1032:40;1020:53;;;1088:18;;;1108:22;;;1085:46;1082:72;;;1134:18;;:::i;:::-;1174:10;1170:2;1163:22;1209:2;1201:6;1194:18;1255:3;1248:4;1243:2;1235:6;1231:15;1227:26;1224:35;1221:55;;;1272:1;1269;1262:12;1221:55;1336:2;1329:4;1321:6;1317:17;1310:4;1302:6;1298:17;1285:54;1383:1;1376:4;1371:2;1363:6;1359:15;1355:26;1348:37;1403:6;1394:15;;;;;;697:718;;;;:::o;1420:468::-;1506:6;1514;1522;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1614:29;1633:9;1614:29;:::i;:::-;1604:39;;1662:38;1696:2;1685:9;1681:18;1662:38;:::i;:::-;1652:48;;1751:2;1740:9;1736:18;1723:32;1778:18;1770:6;1767:30;1764:50;;;1810:1;1807;1800:12;1764:50;1833:49;1874:7;1865:6;1854:9;1850:22;1833:49;:::i;:::-;1823:59;;;1420:468;;;;;:::o;2085:388::-;2162:6;2170;2223:2;2211:9;2202:7;2198:23;2194:32;2191:52;;;2239:1;2236;2229:12;2191:52;2275:9;2262:23;2252:33;;2336:2;2325:9;2321:18;2308:32;2363:18;2355:6;2352:30;2349:50;;;2395:1;2392;2385:12;2349:50;2418:49;2459:7;2450:6;2439:9;2435:22;2418:49;:::i;:::-;2408:59;;;2085:388;;;;;:::o;2686:320::-;2754:6;2807:2;2795:9;2786:7;2782:23;2778:32;2775:52;;;2823:1;2820;2813:12;2775:52;2863:9;2850:23;2896:18;2888:6;2885:30;2882:50;;;2928:1;2925;2918:12;2882:50;2951:49;2992:7;2983:6;2972:9;2968:22;2951:49;:::i;:::-;2941:59;2686:320;-1:-1:-1;;;;2686:320:13:o;3342:180::-;3401:6;3454:2;3442:9;3433:7;3429:23;3425:32;3422:52;;;3470:1;3467;3460:12;3422:52;-1:-1:-1;3493:23:13;;3342:180;-1:-1:-1;3342:180:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "294",
								"totalCost": "250894"
							},
							"external": {
								"getEthSignedMessageHash(bytes32)": "511",
								"getMessageHash(address)": "519",
								"recoverSigner(bytes32,bytes)": "infinite",
								"splitSignature(bytes)": "infinite",
								"verify(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2303,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220036c6176a6c88125f697f6914a03746377ea0ab4c07296500e4a71bff06fbcf164736f6c634300080f0033",
									".code": [
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "1F5AC1B2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "42920A46"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "97ABA7F9"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "A7BB5803"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "FA540801"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 61,
											"end": 2303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2072,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1893,
											"end": 2080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2597,
											"end": 2615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2478,
											"end": 2681,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3243,
											"end": 3277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3329,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3313,
											"end": 3330,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 3011,
											"end": 3337,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 99,
											"end": 259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 244,
											"end": 248,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3780,
											"end": 3826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 175,
											"end": 182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "PUSH",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3842,
											"end": 3854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 212,
											"end": 250,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 212,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 202,
											"end": 251,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 195,
											"end": 251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 99,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 950,
											"end": 955,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 935,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 935,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 956,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 935,
											"end": 956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 913,
											"end": 956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 998,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1034,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1054,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1111,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 769,
											"end": 1119,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1321,
											"end": 1331,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1306,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1306,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4169,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4153,
											"end": 4170,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1127,
											"end": 1401,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1409,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1604,
											"end": 1620,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4452,
											"end": 4473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4574,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 267,
											"end": 761,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4929,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 611,
											"end": 738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4851,
											"end": 4930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 611,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4621,
											"end": 5001,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 692,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 565,
											"end": 692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 626,
											"end": 636,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 637,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 773,
											"end": 790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 796,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 833,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 905,
											"end": 907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 902,
											"end": 912,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 899,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 899,
											"end": 935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 915,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 915,
											"end": 933,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 958,
											"end": 960,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1044,
											"end": 1057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1062,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1036,
											"end": 1067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1072,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1131,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1082,
											"end": 1154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1252,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1245,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1259,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1317,
											"end": 1334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1339,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1403,
											"end": 1409,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 1415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1573,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1543,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1614,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1614,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1662,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1764,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 1881,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1833,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2202,
											"end": 2209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2226,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2239,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2191,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2352,
											"end": 2382,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2349,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2418,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2418,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2782,
											"end": 2805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2775,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2873,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2951,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2951,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 3000,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 3006,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 3006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3422,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidsNFT.sol",
								"MintNagaKids.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMessageHash(address)": "1f5ac1b2",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"splitSignature(bytes)": "a7bb5803",
							"verify(address,address,bytes)": "42920a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VerifySignature.sol\":\"VerifySignature\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"VerifySignature.sol\":{\"keccak256\":\"0xeb2b2d1d8bcce32bb58f628eb83abd605d782fb594107e23cde2c6a60cec8ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3bb714697d808302d945dd1aa580191998c2d8400c0b46af83eb930cb3e8bbd\",\"dweb:/ipfs/Qmds4fcezGFSqzhtpHjjyKwd4GcPE3wP7Vwwro2Foq5cmR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"name": "merkleRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Whitelist.sol\":133:603  contract Whitelist {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Whitelist.sol\":133:603  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb4a7ab\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n    tag_3:\n      tag_4\n      sload(0x00)\n      dup2\n      jump\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Whitelist.sol\":161:186  bytes32 public merkleRoot */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50607d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80632eb4a7ab14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7D DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH8 0xFB281CC173CD521E GASLIMIT 0xB8 0xBD PUSH23 0xE4AB104772E00362BF6994E4B4BA0CBF64DA64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "133:470:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@merkleRoot_1498": {
									"entryPoint": null,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80632eb4a7ab14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH8 0xFB281CC173CD521E GASLIMIT 0xB8 0xBD PUSH23 0xE4AB104772E00362BF6994E4B4BA0CBF64DA64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "133:470:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:25;;;;;;;;;160::13;;;148:2;133:18;161:25:12;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "25000",
								"executionCost": "75",
								"totalCost": "25075"
							},
							"external": {
								"merkleRoot()": "2261"
							},
							"internal": {
								"isWhitelist(bytes32[] calldata,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 133,
									"end": 603,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 603,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c67fb281cc173cd521e45b8bd76e4ab104772e00362bf6994e4b4ba0cbf64da64736f6c634300080f0033",
									".code": [
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "2EB4A7AB"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 603,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 133,
											"end": 603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 161,
											"end": 186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 161,
											"end": 186,
											"name": "RETURN",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"INagaKidsNFT.sol",
								"MintNagaKids.sol",
								"VerifySignature.sol",
								"Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"merkleRoot()": "2eb4a7ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xaaa504ac17eb0298dcdf5733ce24021b4914f035b97f4400b92827341d3facb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aa68fa19422863cc91d23b5896917dbe79175ed47b591148aaeb3e98cb49752\",\"dweb:/ipfs/QmeY64vTRbGhdXcytRKusfJsAfNF4aqr9e1SGBGdCYvW2j\"]},\"Whitelist.sol\":{\"keccak256\":\"0x3c4c5dc32634034c6f37fc379525c3e3e89fc48e1a788ddb9fa82e027b4eb489\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://080dc62e901a60d391d3eae01cd0d25a8581a79196452f84d129234bf421bc76\",\"dweb:/ipfs/QmNb4H54fDhAmpv41eLnb1jB1frUpAexRtESTpVCHJx9PU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1498,
								"contract": "Whitelist.sol:Whitelist",
								"label": "merkleRoot",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							570
						],
						"ERC165": [
							890
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"Strings": [
							773
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 571,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 774,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 891,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 570,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								890,
								902,
								392,
								570
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										889
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 889,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$773_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 772,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$773_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 772,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4873:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4853:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4844:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4789:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 319,
									"src": "4770:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5253:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5275:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5263:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5224:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:0"
									},
									"scope": 319,
									"src": "5149:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "5864:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "5882:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "5893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:0"
									},
									"scope": 319,
									"src": "5787:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6708:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6718:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 319,
									"src": "6640:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "6948:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "6958:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6999:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6986:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7014:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7039:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7086:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7058:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "6912:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:0"
									},
									"scope": 319,
									"src": "6875:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7312:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7322:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7351:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7365:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7372:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7365:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7386:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7432:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7447:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7420:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7415:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:0"
									},
									"scope": 319,
									"src": "7244:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7671:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7699:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7681:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7709:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7723:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "7730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7723:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "7791:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "7797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "7806:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "7779:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "7774:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:0"
									},
									"scope": 319,
									"src": "7602:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6032:0",
							"usedErrors": []
						}
					],
					"src": "108:7731:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							432
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 432,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 432,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 416,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 425,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 433,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							902
						],
						"IERC721": [
							548
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 549,
							"sourceUnit": 903,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "271:7:3"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 548,
							"linearizedBaseContracts": [
								548,
								902
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 447,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 456,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 465,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 548,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 548,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 548,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 548,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 548,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 548,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 548,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 548,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 548,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 549,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 551,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 556,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 555,
												"id": 558,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 570,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 565,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 564,
												"id": 567,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 570,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 571,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							773
						]
					},
					"id": 774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 773,
							"linearizedBaseContracts": [
								773
							],
							"name": "Strings",
							"nameLocation": "154:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 576,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 773,
									"src": "168:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 574,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "399:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "601:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "597:51:5",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "613:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 583,
															"id": 588,
															"nodeType": "Return",
															"src": "627:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "657:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"id": 593,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "672:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:5"
											},
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "687:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:5"
											},
											{
												"body": {
													"id": 608,
													"nodeType": "Block",
													"src": "729:57:5",
													"statements": [
														{
															"expression": {
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:5",
																"subExpression": {
																	"id": 601,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "743:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 603,
															"nodeType": "ExpressionStatement",
															"src": "743:8:5"
														},
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 604,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "765:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "765:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "718:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "WhileStatement",
												"src": "711:75:5"
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "795:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 610,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"arguments": [
														{
															"id": 614,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 612,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:5"
											},
											{
												"body": {
													"id": 647,
													"nodeType": "Block",
													"src": "863:131:5",
													"statements": [
														{
															"expression": {
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 620,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "877:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "877:11:5"
														},
														{
															"expression": {
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 624,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "902:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"id": 625,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "909:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 634,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 579,
																									"src": "945:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 635,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 633,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 632,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 629,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 627,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "902:56:5"
														},
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 643,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "972:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "972:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "851:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "WhileStatement",
												"src": "844:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "1017:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 649,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 583,
												"id": 653,
												"nodeType": "Return",
												"src": "1003:21:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "346:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:5"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "384:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:5"
									},
									"scope": 773,
									"src": "328:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1210:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 663,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1224:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "1220:54:5",
												"trueBody": {
													"id": 668,
													"nodeType": "Block",
													"src": "1236:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 662,
															"id": 667,
															"nodeType": "Return",
															"src": "1250:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1283:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"id": 672,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "1298:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:5"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "1313:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"hexValue": "30",
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:5"
											},
											{
												"body": {
													"id": 688,
													"nodeType": "Block",
													"src": "1359:57:5",
													"statements": [
														{
															"expression": {
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:5",
																"subExpression": {
																	"id": 681,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "1373:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:5"
														},
														{
															"expression": {
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 684,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "1395:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1348:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "WhileStatement",
												"src": "1341:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "1444:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 692,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "1451:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															696,
															772
														],
														"referencedDeclaration": 772,
														"src": "1432:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 662,
												"id": 694,
												"nodeType": "Return",
												"src": "1425:33:5"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1195:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:5"
									},
									"scope": 773,
									"src": "1136:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "1678:351:5",
										"statements": [
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "1688:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 706,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 711,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1724:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:5"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 717,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1745:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 719,
														"indexExpression": {
															"hexValue": "30",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:5"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 723,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1770:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 725,
														"indexExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:5"
											},
											{
												"body": {
													"id": 757,
													"nodeType": "Block",
													"src": "1840:87:5",
													"statements": [
														{
															"expression": {
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 743,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "1854:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 745,
																	"indexExpression": {
																		"id": 744,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1861:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 746,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "1866:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 699,
																			"src": "1879:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:5"
														},
														{
															"expression": {
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "1905:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 756,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "1828:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 758,
												"initializationExpression": {
													"assignments": [
														730
													],
													"declarations": [
														{
															"constant": false,
															"id": 730,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 758,
															"src": "1800:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 729,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 736,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 732,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "1816:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:5",
														"subExpression": {
															"id": 740,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "1837:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 742,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "1944:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "2015:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 766,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 770,
												"nodeType": "Return",
												"src": "2001:21:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1609:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1624:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:5"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "1663:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:5"
									},
									"scope": 773,
									"src": "1588:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 774,
							"src": "146:1885:5",
							"usedErrors": []
						}
					],
					"src": "86:1946:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							866
						]
					},
					"id": 867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 776,
								"nodeType": "StructuredDocumentation",
								"src": "143:656:6",
								"text": " @dev These functions deal with verification of Merkle Trees proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."
							},
							"fullyImplemented": true,
							"id": 866,
							"linearizedBaseContracts": [
								866
							],
							"name": "MerkleProof",
							"nameLocation": "808:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "1281:57:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 790,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "1311:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															{
																"id": 791,
																"name": "leaf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1318:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 789,
															"name": "processProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1298:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32[] memory,bytes32) pure returns (bytes32)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1298:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 793,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "1327:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1298:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 788,
												"id": 795,
												"nodeType": "Return",
												"src": "1291:40:6"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "826:323:6",
										"text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1163:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1196:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1179:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 778,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1179:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 779,
													"nodeType": "ArrayTypeName",
													"src": "1179:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "1219:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1211:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 781,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1241:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1233:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:82:6"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1275:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1275:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:6:6"
									},
									"scope": 866,
									"src": "1154:184:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1781:570:6",
										"statements": [
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "1799:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "1791:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 808,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"id": 810,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 803,
													"src": "1814:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:27:6"
											},
											{
												"body": {
													"id": 849,
													"nodeType": "Block",
													"src": "1871:445:6",
													"statements": [
														{
															"assignments": [
																824
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 824,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "1893:12:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 849,
																	"src": "1885:20:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 828,
															"initialValue": {
																"baseExpression": {
																	"id": 825,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "1908:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[] memory"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1908:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1885:31:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 829,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1934:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 830,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "1950:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1934:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 847,
																"nodeType": "Block",
																"src": "2138:168:6",
																"statements": [
																	{
																		"expression": {
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 840,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "2234:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 842,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "2264:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 843,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "2278:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 841,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "2249:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2249:42:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2234:57:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 846,
																		"nodeType": "ExpressionStatement",
																		"src": "2234:57:6"
																	}
																]
															},
															"id": 848,
															"nodeType": "IfStatement",
															"src": "1930:376:6",
															"trueBody": {
																"id": 839,
																"nodeType": "Block",
																"src": "1964:168:6",
																"statements": [
																	{
																		"expression": {
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "2060:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 834,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "2090:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 835,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "2104:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 833,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "2075:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2075:42:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "2060:57:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 838,
																		"nodeType": "ExpressionStatement",
																		"src": "2060:57:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "1848:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 817,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1852:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1852:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"initializationExpression": {
													"assignments": [
														813
													],
													"declarations": [
														{
															"constant": false,
															"id": 813,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1841:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 850,
															"src": "1833:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 812,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 815,
													"initialValue": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1833:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1866:3:6",
														"subExpression": {
															"id": 820,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "1866:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 822,
													"nodeType": "ExpressionStatement",
													"src": "1866:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1828:488:6"
											},
											{
												"expression": {
													"id": 851,
													"name": "computedHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "2332:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 807,
												"id": 852,
												"nodeType": "Return",
												"src": "2325:19:6"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "1344:340:6",
										"text": " @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "processProof",
									"nameLocation": "1698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1728:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1711:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 799,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1711:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 800,
													"nodeType": "ArrayTypeName",
													"src": "1711:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "1743:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1735:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 802,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:38:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1772:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:6"
									},
									"scope": 866,
									"src": "1689:662:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2440:135:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:110:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2480:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2486:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2473:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2508:4:6",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2514:1:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:15:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:30:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2538:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2529:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": false,
														"src": "2486:1:6",
														"valueSize": 1
													},
													{
														"declaration": 858,
														"isOffset": false,
														"isSlot": false,
														"src": "2514:1:6",
														"valueSize": 1
													},
													{
														"declaration": 861,
														"isOffset": false,
														"isSlot": false,
														"src": "2529:5:6",
														"valueSize": 1
													}
												],
												"id": 863,
												"nodeType": "InlineAssembly",
												"src": "2450:119:6"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "2366:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2389:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2381:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2400:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2392:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:22:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2425:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 860,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:6"
									},
									"scope": 866,
									"src": "2357:218:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 867,
							"src": "800:1777:6",
							"usedErrors": []
						}
					],
					"src": "118:2460:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							890
						],
						"IERC165": [
							902
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 868,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 891,
							"sourceUnit": 903,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 871,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 902,
										"src": "754:7:7"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 870,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 890,
							"linearizedBaseContracts": [
								890,
								902
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										901
									],
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 883,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$902_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$902_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 882,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$902",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 880,
												"id": 887,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 877,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 890,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 891,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							902
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 902,
							"linearizedBaseContracts": [
								902
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 895,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 902,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 903,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"INagaKidsNFT.sol": {
				"ast": {
					"absolutePath": "INagaKidsNFT.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"IERC721": [
							548
						],
						"INagaKidsNFT": [
							958
						]
					},
					"id": 959,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 959,
							"sourceUnit": 549,
							"src": "61:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 959,
							"sourceUnit": 393,
							"src": "121:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 907,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 548,
										"src": "210:7:9"
									},
									"id": 908,
									"nodeType": "InheritanceSpecifier",
									"src": "210:7:9"
								},
								{
									"baseName": {
										"id": 909,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "218:14:9"
									},
									"id": 910,
									"nodeType": "InheritanceSpecifier",
									"src": "218:14:9"
								}
							],
							"canonicalName": "INagaKidsNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 958,
							"linearizedBaseContracts": [
								958,
								392,
								548,
								902
							],
							"name": "INagaKidsNFT",
							"nameLocation": "194:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "251:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "288:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:9"
									},
									"scope": 958,
									"src": "242:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "303:174:9",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "492:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "520:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "512:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "535:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "527:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:30:9"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "565:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:9:9"
									},
									"scope": 958,
									"src": "483:91:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4f6ccce7",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "589:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "610:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "602:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:15:9"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "640:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:9"
									},
									"scope": 958,
									"src": "580:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "664:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:2:9"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "699:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:9:9"
									},
									"scope": 958,
									"src": "655:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "723:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:9"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "755:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:6:9"
									},
									"scope": 958,
									"src": "714:47:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40d097c3",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "776:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "793:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "785:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:12:9"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:9"
									},
									"scope": 958,
									"src": "767:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e63ab1e9",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PAUSER_ROLE",
									"nameLocation": "821:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "832:2:9"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "858:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:9:9"
									},
									"scope": 958,
									"src": "812:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5391393",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINTER_ROLE",
									"nameLocation": "882:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:2:9"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "919:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:9:9"
									},
									"scope": 958,
									"src": "873:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 959,
							"src": "184:749:9",
							"usedErrors": []
						}
					],
					"src": "33:900:9"
				},
				"id": 9
			},
			"MintNagaKids.sol": {
				"ast": {
					"absolutePath": "MintNagaKids.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							570
						],
						"ERC165": [
							890
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							902
						],
						"IERC721": [
							548
						],
						"INagaKidsNFT": [
							958
						],
						"MerkleProof": [
							866
						],
						"MintNagaKids": [
							1376
						],
						"ReentrancyGuard": [
							432
						],
						"Strings": [
							773
						],
						"VerifySignature": [
							1493
						],
						"Whitelist": [
							1532
						]
					},
					"id": 1377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 960,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 433,
							"src": "61:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 320,
							"src": "125:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "VerifySignature.sol",
							"file": "./VerifySignature.sol",
							"id": 963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 1494,
							"src": "185:31:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Whitelist.sol",
							"file": "./Whitelist.sol",
							"id": 964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 1533,
							"src": "218:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "INagaKidsNFT.sol",
							"file": "./INagaKidsNFT.sol",
							"id": 965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 959,
							"src": "245:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 966,
										"name": "Whitelist",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1532,
										"src": "302:9:10"
									},
									"id": 967,
									"nodeType": "InheritanceSpecifier",
									"src": "302:9:10"
								},
								{
									"baseName": {
										"id": 968,
										"name": "VerifySignature",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1493,
										"src": "313:15:10"
									},
									"id": 969,
									"nodeType": "InheritanceSpecifier",
									"src": "313:15:10"
								},
								{
									"baseName": {
										"id": 970,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "330:13:10"
									},
									"id": 971,
									"nodeType": "InheritanceSpecifier",
									"src": "330:13:10"
								},
								{
									"baseName": {
										"id": 972,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "345:15:10"
									},
									"id": 973,
									"nodeType": "InheritanceSpecifier",
									"src": "345:15:10"
								}
							],
							"canonicalName": "MintNagaKids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1376,
							"linearizedBaseContracts": [
								1376,
								432,
								319,
								890,
								902,
								392,
								570,
								1493,
								1532
							],
							"name": "MintNagaKids",
							"nameLocation": "286:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27c25c20",
									"id": 976,
									"mutability": "mutable",
									"name": "nagaKidsContract",
									"nameLocation": "390:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "370:36:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
										"typeString": "contract INagaKidsNFT"
									},
									"typeName": {
										"id": 975,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 974,
											"name": "INagaKidsNFT",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 958,
											"src": "370:12:10"
										},
										"referencedDeclaration": 958,
										"src": "370:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
											"typeString": "contract INagaKidsNFT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11c67efc",
									"id": 978,
									"mutability": "mutable",
									"name": "isPublicOpen",
									"nameLocation": "425:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "413:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 977,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "413:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94f4504d",
									"id": 980,
									"mutability": "mutable",
									"name": "isWhitelistOpen",
									"nameLocation": "456:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "444:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 979,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "444:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "238ac933",
									"id": 982,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "495:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "480:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 981,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 986,
									"mutability": "mutable",
									"name": "_isWhitelistMinted",
									"nameLocation": "535:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "510:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 985,
										"keyType": {
											"id": 983,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "518:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "510:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 984,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "529:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "_isWhitelistMintedAmount",
									"nameLocation": "588:24:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "560:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 989,
										"keyType": {
											"id": 987,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "568:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "560:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 988,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 994,
									"mutability": "mutable",
									"name": "_isPublicMinted",
									"nameLocation": "644:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1376,
									"src": "619:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 993,
										"keyType": {
											"id": 991,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "627:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "619:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 992,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "638:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b7df065473d5cf63ef5cf9190dbd326ea5e6fbfe4a0971f4920e430bbfd5a938",
									"id": 1002,
									"name": "WhitelistMinted",
									"nameLocation": "674:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "706:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "690:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "719:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "711:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "734:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "726:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:55:10"
									},
									"src": "668:77:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ab9980fb1d2916bce9017edd1be458e3f56d0899b3367cb3a8be97483fbe069b",
									"id": 1008,
									"name": "PublicMinted",
									"nameLocation": "757:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "786:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "770:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "799:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "791:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:40:10"
									},
									"src": "751:59:10"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "874:143:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "898:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1018,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "918:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "918:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1016,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "887:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "887:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "_nagaKids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "960:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														],
														"id": 1022,
														"name": "setNagaKidsContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "940:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_INagaKidsNFT_$958_$returns$__$",
															"typeString": "function (contract INagaKidsNFT)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "940:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "_merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "995:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1026,
														"name": "setMerkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "981:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "981:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "981:26:10"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_nagaKids",
												"nameLocation": "843:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "830:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
													"typeString": "contract INagaKidsNFT"
												},
												"typeName": {
													"id": 1010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1009,
														"name": "INagaKidsNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "830:12:10"
													},
													"referencedDeclaration": 958,
													"src": "830:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
														"typeString": "contract INagaKidsNFT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "861:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "853:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:44:10"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:10"
									},
									"scope": 1376,
									"src": "818:199:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1043:81:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1034,
																	"name": "isPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1062:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1062:9:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1075:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1062:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6167614b69647320776173205061757365642e",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1081:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb57f8f9c8eace4f3cff285990b68679b8bb26950f0fd30c3a25c9ccd8b9c29f",
																"typeString": "literal_string \"NagaKids was Paused.\""
															},
															"value": "NagaKids was Paused."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb57f8f9c8eace4f3cff285990b68679b8bb26950f0fd30c3a25c9ccd8b9c29f",
																"typeString": "literal_string \"NagaKids was Paused.\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1054:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1054:50:10"
											},
											{
												"id": 1041,
												"nodeType": "PlaceholderStatement",
												"src": "1115:1:10"
											}
										]
									},
									"id": 1043,
									"name": "Paused",
									"nameLocation": "1034:6:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:10"
									},
									"src": "1025:99:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1221:47:10",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "nagaKidsContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1232:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
															"typeString": "contract INagaKidsNFT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1053,
														"name": "_nagaKids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1251:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
															"typeString": "contract INagaKidsNFT"
														}
													},
													"src": "1232:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
														"typeString": "contract INagaKidsNFT"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1232:28:10"
											}
										]
									},
									"functionSelector": "2c8a1926",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1049,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1201:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1048,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1192:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1192:28:10"
										}
									],
									"name": "setNagaKidsContract",
									"nameLocation": "1141:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "_nagaKids",
												"nameLocation": "1174:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1161:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
													"typeString": "contract INagaKidsNFT"
												},
												"typeName": {
													"id": 1045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1044,
														"name": "INagaKidsNFT",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "1161:12:10"
													},
													"referencedDeclaration": 958,
													"src": "1161:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
														"typeString": "contract INagaKidsNFT"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:24:10"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:10"
									},
									"scope": 1376,
									"src": "1132:136:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1352:35:10",
										"statements": [
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "1363:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1066,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1372:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1363:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1363:16:10"
											}
										]
									},
									"functionSelector": "6c19e783",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1062,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1332:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1063,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1323:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1323:28:10"
										}
									],
									"name": "setSigner",
									"nameLocation": "1289:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "1307:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1299:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:17:10"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:10"
									},
									"scope": 1376,
									"src": "1280:107:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1476:44:10",
										"statements": [
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "isWhitelistOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "1487:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1079,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "1505:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1487:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1487:25:10"
											}
										]
									},
									"functionSelector": "fade63c9",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1075,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1456:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1076,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1074,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1447:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1447:28:10"
										}
									],
									"name": "setWhitelistMintOpen",
									"nameLocation": "1405:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "1431:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1426:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1426:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1425:14:10"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:0:10"
									},
									"scope": 1376,
									"src": "1396:124:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "1601:41:10",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1091,
														"name": "isPublicOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1612:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1092,
														"name": "_isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1627:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1612:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "1612:22:10"
											}
										]
									},
									"functionSelector": "80506494",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1088,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1581:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1572:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1572:28:10"
										}
									],
									"name": "setPublicOpen",
									"nameLocation": "1537:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_isOpen",
												"nameLocation": "1556:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "1551:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1551:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:14:10"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:10"
									},
									"scope": 1376,
									"src": "1528:114:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "1734:43:10",
										"statements": [
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "1745:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1105,
														"name": "_merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "1758:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1745:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "1745:24:10"
											}
										]
									},
									"functionSelector": "7cb64759",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1101,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1714:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1100,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1705:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:28:10"
										}
									],
									"name": "setMerkleRoot",
									"nameLocation": "1663:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_merkleRoot",
												"nameLocation": "1685:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1677:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:21:10"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:10"
									},
									"scope": 1376,
									"src": "1654:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "1894:767:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1122,
																"name": "isWhitelistOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "1913:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1932:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1913:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1938:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															},
															"value": "Whitelist not open to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1905:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "1905:63:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1129,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "1987:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1987:16:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1131,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "2006:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1987:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31313131",
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2016:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1111_by_1",
																	"typeString": "int_const 1111"
																},
																"value": "1111"
															},
															"src": "1987:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220737570706c79",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															},
															"value": "Over supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7c457d2005d8aca2edb21a595c2941dc67f836773cd6b31f5fe85011b5a61f6",
																"typeString": "literal_string \"Over supply\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1979:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1979:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "1979:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1140,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2073:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2073:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1139,
																	"name": "isWhitelistMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "2055:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2055:29:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2088:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2055:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2094:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2047:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2047:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "2047:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1151,
																				"name": "nagaKidsContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "2164:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																					"typeString": "contract INagaKidsNFT"
																				}
																			},
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "MINTER_ROLE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "2164:28:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view external returns (bytes32)"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2164:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1156,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2203:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MintNagaKids_$1376",
																					"typeString": "contract MintNagaKids"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MintNagaKids_$1376",
																					"typeString": "contract MintNagaKids"
																				}
																			],
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2195:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1154,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2195:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2195:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1149,
																		"name": "nagaKidsContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2139:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																			"typeString": "contract INagaKidsNFT"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 359,
																	"src": "2139:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view external returns (bool)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2139:70:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2213:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2139:78:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f6e20746f206d696e742e",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															},
															"value": "This Contract not have permission to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2131:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:132:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2131:132:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1166,
																	"name": "_proofMerkle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "2294:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																{
																	"expression": {
																		"id": 1167,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2307:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2307:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1169,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "2318:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1165,
																"name": "isWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "2282:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (bytes32[] calldata,address,uint256) view returns (bool)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2282:44:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642057686974656c6973744d696e74205468697320557365722e",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2328:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															},
															"value": "Unauthorized WhitelistMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90203a2446623747bbba855df65d033d63eb4b6a185c4640964fa4010f07517",
																"typeString": "literal_string \"Unauthorized WhitelistMint This User.\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2274:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:94:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2274:94:10"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1174,
															"name": "_isWhitelistMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2381:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1177,
														"indexExpression": {
															"expression": {
																"id": 1175,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2400:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2400:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2381:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2414:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2381:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "2381:37:10"
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1181,
															"name": "_isWhitelistMintedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2429:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"expression": {
																"id": 1182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2454:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2454:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2429:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1185,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "2469:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2429:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "2429:47:10"
											},
											{
												"body": {
													"id": 1205,
													"nodeType": "Block",
													"src": "2521:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1201,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2562:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2562:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1198,
																		"name": "nagaKidsContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2536:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																			"typeString": "contract INagaKidsNFT"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeMint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "2536:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address) external"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2536:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "2536:37:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1192,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1193,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "2508:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2505:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"initializationExpression": {
													"assignments": [
														1189
													],
													"declarations": [
														{
															"constant": false,
															"id": 1189,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2498:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1206,
															"src": "2493:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1188,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2493:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1191,
													"initialValue": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2502:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2493:10:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2517:3:10",
														"subExpression": {
															"id": 1195,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "2517:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"nodeType": "ExpressionStatement",
													"src": "2517:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2489:96:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2618:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2618:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "2629:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1211,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2637:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2637:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1207,
														"name": "WhitelistMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2602:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "2597:56:10"
											}
										]
									},
									"functionSelector": "2904e6d9",
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1116,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "1874:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1874:12:10"
										},
										{
											"id": 1119,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1118,
												"name": "Paused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1043,
												"src": "1887:6:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1887:6:10"
										}
									],
									"name": "whitelistMint",
									"nameLocation": "1796:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_proofMerkle",
												"nameLocation": "1829:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1810:31:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1110,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1810:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1111,
													"nodeType": "ArrayTypeName",
													"src": "1810:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1850:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1842:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:49:10"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:10"
									},
									"scope": 1376,
									"src": "1787:874:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "2745:698:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1226,
																"name": "isPublicOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "2766:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2782:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2766:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c697374206e6f74206f70656e20746f206d696e742e",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2788:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															},
															"value": "Whitelist not open to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c899bcc4f5150e1689f9a8071396f43ad4f348d6b97ffd095d25c890be42b8",
																"typeString": "literal_string \"Whitelist not open to mint.\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2758:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "2758:60:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1233,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "2837:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "2837:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1235,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2850:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2850:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2837:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6861686120436f6e74726163742063616e27742063616c6c206d65",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2862:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															},
															"value": "haha Contract can't call me"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f6f7329e6928feefd8536a7f6b2b71510de2782ad8e9d7f1ede5e0fc3594734",
																"typeString": "literal_string \"haha Contract can't call me\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2829:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2829:63:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1243,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2926:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2926:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1242,
																	"name": "isPublicMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "2911:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2911:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2941:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2911:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752061726520616c7265616479206d696e7465642e",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2947:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															},
															"value": "You are already minted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c7f4d12e145bf6262f68ff2a7f1cb7b6f85bd1339b4c00b13a6687d963b9dc8",
																"typeString": "literal_string \"You are already minted.\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2903:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "2903:70:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1252,
																		"name": "getTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "2992:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2992:16:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3011:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2992:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31313131",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3015:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1111_by_1",
																	"typeString": "int_const 1111"
																},
																"value": "1111"
															},
															"src": "2992:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f76657220537570706c7920416d6f756e74",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3020:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38",
																"typeString": "literal_string \"Over Supply Amount\""
															},
															"value": "Over Supply Amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2a2babe3c89e688186fab8857ce22ce479755f34014b922c13a76cdaf6f0f38",
																"typeString": "literal_string \"Over Supply Amount\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2984:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2984:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "2984:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1264,
																				"name": "nagaKidsContract",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "3085:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																					"typeString": "contract INagaKidsNFT"
																				}
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "MINTER_ROLE",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "3085:28:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view external returns (bytes32)"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3085:30:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1269,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3124:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MintNagaKids_$1376",
																					"typeString": "contract MintNagaKids"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MintNagaKids_$1376",
																					"typeString": "contract MintNagaKids"
																				}
																			],
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3116:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3116:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3116:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1262,
																		"name": "nagaKidsContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "3060:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																			"typeString": "contract INagaKidsNFT"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 359,
																	"src": "3060:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view external returns (bool)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3060:70:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3134:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3060:78:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320436f6e7472616374206e6f742068617665207065726d697373696f6e20746f206d696e742e",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3139:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															},
															"value": "This Contract not have permission to mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ca816d2a77b3d51b4c5033631d2b3326e5b39a3fc9da3af3bdbe7c4f11cb2f6",
																"typeString": "literal_string \"This Contract not have permission to mint.\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3052:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:132:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3052:132:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1279,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "3210:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1280,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3217:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3217:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1282,
																	"name": "_sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "3228:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1278,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "3203:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,bytes memory) view returns (bool)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3203:30:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564205075626c69634d696e74205468697320557365722e",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3235:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															},
															"value": "Unauthorized PublicMint This User."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14780d64f8c0a297e61a3323abdf2e5c50c04b84a97caf500c97e59405483a43",
																"typeString": "literal_string \"Unauthorized PublicMint This User.\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3195:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3195:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "3195:77:10"
											},
											{
												"expression": {
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1287,
															"name": "_isPublicMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3285:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1290,
														"indexExpression": {
															"expression": {
																"id": 1288,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3301:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3301:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3285:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3315:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3285:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "3285:34:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3356:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3356:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1294,
															"name": "nagaKidsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "3330:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "3330:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3330:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3330:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3408:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3408:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1304,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3419:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3419:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "PublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3395:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "EmitStatement",
												"src": "3390:45:10"
											}
										]
									},
									"functionSelector": "de6892c8",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1220,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "2725:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2725:12:10"
										},
										{
											"id": 1223,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1222,
												"name": "Paused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1043,
												"src": "2738:6:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2738:6:10"
										}
									],
									"name": "publicMint",
									"nameLocation": "2678:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "2704:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "2689:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2689:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:21:10"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:10"
									},
									"scope": 1376,
									"src": "2669:774:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "3519:51:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1316,
														"name": "_isWhitelistMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "3537:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1318,
													"indexExpression": {
														"id": 1317,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "3556:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3537:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1319,
												"nodeType": "Return",
												"src": "3530:32:10"
											}
										]
									},
									"functionSelector": "5997bbee",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistMinted",
									"nameLocation": "3460:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3486:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3478:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:15:10"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3513:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3513:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:6:10"
									},
									"scope": 1376,
									"src": "3451:119:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "3655:57:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1328,
														"name": "_isWhitelistMintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3673:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1330,
													"indexExpression": {
														"id": 1329,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3698:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3673:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1331,
												"nodeType": "Return",
												"src": "3666:38:10"
											}
										]
									},
									"functionSelector": "1b0d2d3b",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistMintedAmount",
									"nameLocation": "3587:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3619:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "3611:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3610:15:10"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "3646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:9:10"
									},
									"scope": 1376,
									"src": "3578:134:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "3785:48:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1340,
														"name": "_isPublicMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3803:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1342,
													"indexExpression": {
														"id": 1341,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "3819:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3803:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1343,
												"nodeType": "Return",
												"src": "3796:29:10"
											}
										]
									},
									"functionSelector": "f055c7a9",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPublicMinted",
									"nameLocation": "3729:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3752:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "3744:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:15:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "3779:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3779:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3778:6:10"
									},
									"scope": 1376,
									"src": "3720:113:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "3897:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1350,
															"name": "nagaKidsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "3915:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "3915:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3915:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1353,
												"nodeType": "Return",
												"src": "3908:37:10"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "3850:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3864:2:10"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3888:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3887:9:10"
									},
									"scope": 1376,
									"src": "3841:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "4015:54:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1360,
															"name": "nagaKidsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4033:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "4033:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4033:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1363,
												"nodeType": "Return",
												"src": "4026:35:10"
											}
										]
									},
									"functionSelector": "4c0f38c2",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxSupply",
									"nameLocation": "3970:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3982:2:10"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "4006:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:9:10"
									},
									"scope": 1376,
									"src": "3961:108:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "4123:51:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1370,
															"name": "nagaKidsContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "4141:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INagaKidsNFT_$958",
																"typeString": "contract INagaKidsNFT"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "4141:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
															"typeString": "function () view external returns (bool)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4141:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1373,
												"nodeType": "Return",
												"src": "4134:32:10"
											}
										]
									},
									"functionSelector": "ff0938a7",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPause",
									"nameLocation": "4086:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4093:2:10"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4117:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4117:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:6:10"
									},
									"scope": 1376,
									"src": "4077:97:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1377,
							"src": "277:3900:10",
							"usedErrors": []
						}
					],
					"src": "33:4146:10"
				},
				"id": 10
			},
			"VerifySignature.sol": {
				"ast": {
					"absolutePath": "VerifySignature.sol",
					"exportedSymbols": {
						"VerifySignature": [
							1493
						]
					},
					"id": 1494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1378,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifySignature",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1493,
							"linearizedBaseContracts": [
								1493
							],
							"name": "VerifySignature",
							"nameLocation": "70:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "184:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1388,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "229:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1391,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "244:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VerifySignature_$1493",
																				"typeString": "contract VerifySignature"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VerifySignature_$1493",
																				"typeString": "contract VerifySignature"
																			}
																		],
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "236:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1389,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "236:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "236:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1386,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "212:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "212:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "212:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1385,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "202:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "202:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1395,
												"nodeType": "Return",
												"src": "195:56:11"
											}
										]
									},
									"functionSelector": "1f5ac1b2",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "108:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "141:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "133:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:31:11"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "175:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:9:11"
									},
									"scope": 1493,
									"src": "99:160:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "384:377:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "650:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 1408,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "707:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1405,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "611:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "611:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "611:127:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1404,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "583:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:170:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1411,
												"nodeType": "Return",
												"src": "563:190:11"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "276:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "308:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "300:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:22:11"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "370:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:9:11"
									},
									"scope": 1493,
									"src": "267:494:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "902:217:11",
										"statements": [
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "921:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1443,
														"src": "913:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1424,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"id": 1427,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "950:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1426,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "935:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) view returns (bytes32)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:43:11"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "975:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1443,
														"src": "967:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1430,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "967:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"arguments": [
														{
															"id": 1433,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "1022:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1432,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "998:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:67:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1437,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1068:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1438,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "1090:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1436,
															"name": "recoverSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1054:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1054:46:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1440,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "1104:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1054:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1442,
												"nodeType": "Return",
												"src": "1047:64:11"
											}
										]
									},
									"functionSelector": "42920a46",
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "778:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "803:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "795:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "829:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "821:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "858:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "845:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "845:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:90:11"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "896:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:11"
									},
									"scope": 1493,
									"src": "769:350:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "1261:140:11",
										"statements": [
											{
												"assignments": [
													1454,
													1456,
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1454,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1281:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "1273:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1453,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1273:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1292:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "1284:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1455,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1284:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1301:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "1295:7:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1457,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"arguments": [
														{
															"id": 1460,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "1321:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1459,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "1306:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "_ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "1362:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1465,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "1385:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1466,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1388:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1467,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "1391:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1463,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1352:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1469,
												"nodeType": "Return",
												"src": "1345:48:11"
											}
										]
									},
									"functionSelector": "97aba7f9",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1136:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_ethSignedMessageHash",
												"nameLocation": "1168:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1160:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1213:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1200:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1200:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:81:11"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1252:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:9:11"
									},
									"scope": 1493,
									"src": "1127:274:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1585:715:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1483,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "1604:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1604:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1618:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "1604:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															},
															"value": "invalid signature length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1596:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1596:53:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1671:580:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2038:24:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2053:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:12:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:19:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2038:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:24:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:12:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2113:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:19:11"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "2108:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:33:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2235:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2226:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2226:12:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2220:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:19:11"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:28:11"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "2207:1:11"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "2038:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1478,
														"isOffset": false,
														"isSlot": false,
														"src": "2108:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": false,
														"src": "2053:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": false,
														"src": "2123:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": false,
														"src": "2230:3:11",
														"valueSize": 1
													},
													{
														"declaration": 1480,
														"isOffset": false,
														"isSlot": false,
														"src": "2207:1:11",
														"valueSize": 1
													}
												],
												"id": 1490,
												"nodeType": "InlineAssembly",
												"src": "1662:589:11"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "1418:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1446:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1433:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:18:11"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1513:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1545:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1537:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1567:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1561:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1479,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1561:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:81:11"
									},
									"scope": 1493,
									"src": "1409:891:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1494,
							"src": "61:2242:11",
							"usedErrors": []
						}
					],
					"src": "33:2272:11"
				},
				"id": 11
			},
			"Whitelist.sol": {
				"ast": {
					"absolutePath": "Whitelist.sol",
					"exportedSymbols": {
						"MerkleProof": [
							866
						],
						"Whitelist": [
							1532
						]
					},
					"id": 1533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
							"id": 1496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 867,
							"src": "61:68:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1532,
							"linearizedBaseContracts": [
								1532
							],
							"name": "Whitelist",
							"nameLocation": "142:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2eb4a7ab",
									"id": 1498,
									"mutability": "mutable",
									"name": "merkleRoot",
									"nameLocation": "176:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1532,
									"src": "161:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1497,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "161:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "338:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1510,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "353:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "367:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "353:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "349:60:12",
												"trueBody": {
													"id": 1515,
													"nodeType": "Block",
													"src": "370:39:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "392:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1509,
															"id": 1514,
															"nodeType": "Return",
															"src": "385:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "_proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "478:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														{
															"id": 1520,
															"name": "merkleRoot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "503:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1524,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1503,
																			"src": "559:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1525,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "566:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1522,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "542:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "542:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "542:32:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1521,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "532:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "532:43:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1517,
															"name": "MerkleProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "441:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MerkleProof_$866_$",
																"typeString": "type(library MerkleProof)"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "441:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:149:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1529,
												"nodeType": "Return",
												"src": "421:169:12"
											}
										]
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelist",
									"nameLocation": "204:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "245:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "226:25:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1499,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "226:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1500,
													"nodeType": "ArrayTypeName",
													"src": "226:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "270:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "262:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "294:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "286:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:93:12"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "332:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:12"
									},
									"scope": 1532,
									"src": "195:403:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1533,
							"src": "133:470:12",
							"usedErrors": []
						}
					],
					"src": "33:572:12"
				},
				"id": 12
			}
		}
	}
}